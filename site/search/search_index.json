{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cinder Theme for MkDocs About \u00b6 Cinder is a clean, responsive theme for static documentation sites that are generated with MkDocs . It's built on the Bootstrap 3 framework and includes pre-packaged: highlight.js v9.18.0 syntax highlighting with support for 185 languages (over 30 by default) and over 90 styles FontAwesome v5.12.0 icon support smashingly legible type scheme to get your message out to your users You are viewing the theme in action and can see a selection of the theme elements on the Specimen page . Install \u00b6 Required : Python 3.4+ Install MkDocs & Create a New Project \u00b6 If you haven't installed MkDocs yet, use the following command to install it: $ pip install mkdocs Next, navigate to a clean directory and create a new MkDocs project with the following command: $ mkdocs new [projectname] Replace [projectname] with the name of your project (without the brackets). Then navigate to the root of your project directory: $ cd [projectname] Install the Cinder Theme \u00b6 Download the Cinder theme archive by clicking the button below. Download Cinder Unpack the contents of the archive into a directory named cinder at the top level of your MkDocs project directory. Your project directory should now look like this: . \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 cinder \u2502 \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 js \u2502 \u251c\u2500\u2500 base.html \u2502 \u251c\u2500\u2500 content.html \u2502 \u251c\u2500\u2500 404.html \u2502 \u251c\u2500\u2500 nav-sub.html \u2502 \u251c\u2500\u2500 nav.html \u2502 \u2514\u2500\u2500 toc.html \u2514\u2500\u2500 docs \u2514\u2500\u2500 index.md MkDocs projects use a YAML settings file called mkdocs.yml . This is located in the root of your project directory after you use the mkdocs new command. Open the file in a text editor and modify it to include the theme settings as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' nav: - Home: index.md See the MkDocs documentation for additional details. Updates, the Manual Approach If you choose the manual install approach, you can update your Cinder theme by downloading the new cinder.zip release archive and including it in your project. Then re-build your static site files (see instructions below). Test with a Local Site Server \u00b6 Use the following command to establish a local server for your site: $ mkdocs serve Then open your site in any browser at the URL http://localhost:8000 . Create Your Site \u00b6 Add Content with Markdown Syntax \u00b6 Get to work on your site home page by opening the docs/index.md file and editing it in Markdown syntax. The HTML automatically updates in the browser when you save the Markdown file if you use the MkDocs server (see command above). Add New Pages \u00b6 Add new pages to your site by creating a new Markdown file in your docs directory, then linking to the new page in the mkdocs.yml file. This uses a Page Name : Markdown file syntax. For example, to add an About page using a Markdown file that is located on the path docs/about.md , you would format the mkdocs.yml file as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' nav: - Home: index.md - About: about.md Add additional pages to your site by repeating the above series of steps. Build Your Site \u00b6 Build your site files with the command: $ mkdocs build Your site files are built in the site directory and are ready to use. Deploy the contents of the site directory to your web server. Important Configuration Issues \u00b6 Please review these issues before you push your site into a production setting! 1. Set the site_url configuration field \u00b6 You must set the site_url field in your mkdocs.yml file to the appropriate production URL in order to generate a valid sitemap.xml file ( issue #80 ). Here is an example from the Cinder project mkdocs.yml file : site_name: Cinder site_url: https://sourcefoundry.org/cinder/ site_author: Christopher Simpkins site_description: \"A clean, responsive theme for static documentation websites that are generated with MkDocs\" repo_url: \"https://github.com/chrissimpkins/cinder\" copyright: \"Cinder is licensed under the <a href='https://github.com/chrissimpkins/cinder/blob/master/LICENSE.md'>MIT license</a>\" theme: name: null custom_dir: cinder colorscheme: github highlightjs: true hljs_languages: - yaml nav: - Home: index.md - Specimen: specimen.md markdown_extensions: - admonition The sitemap.xml file will be located at [SITE_URL]/sitemap.xml when you push your site into the production environment. During development the sitemap.xml file can be found at http://127.0.0.1:8000/sitemap.xml . Site Customization \u00b6 The following are a few common customizations that you might be interested in. For much more detail about the configuration of your site, check out the MkDocs Configuration documentation . Syntax Highlighting Color Scheme \u00b6 Cinder supports the 90+ highlightjs color schemes . The github color scheme that you see on this page is the default and will be used if you do not specify otherwise. To change to a different scheme, include the colorscheme field under the theme field in your mkdocs.yml file and enter the color scheme name. For example, to switch to the Dracula theme , enter the following: theme: name: null custom_dir: cinder colorscheme: dracula and then rebuild your site. The color scheme name should match the base name of the highlightjs CSS file. See the src/styles directory of the highlightjs repository for a complete list of these CSS paths. Syntax Highlighting Language Support \u00b6 By default, Cinder supports the ~30 syntaxes listed under common in the documentation . You can broaden support to any of the over 130 highlightjs languages using definitions in your mkdocs.yml file. To add a new language, create a list of additional languages as a hljs_languages sub-field under the theme field in the mkdocs.yml file. The definitions are formatted as a newline-delimited list with - characters. For example, to add support for the Julia and Perl languages, format your configuration file like this: theme: name: null custom_dir: cinder hljs_languages: - julia - perl Use the base file name of the JavaScript files located in the CDN for your syntax definitions. Site Favicon \u00b6 Create an img subdirectory in your docs directory and add a custom favicon.ico file. See the MkDocs documentation for additional details. Add Your Own CSS Stylesheets \u00b6 Create a css directory inside your docs directory and add your CSS files. You can overwrite any of the Cinder styles in your CSS files. Then include your CSS files in the mkdocs.yml file with the extra_css field: site_name: [YOURPROJECT] theme: cinder extra_css: - \"css/mystyle.css\" - \"css/myotherstyle.css\" nav: - Home: index.md - About: about.md Your CSS styles fall at the end of the cascade and will override all styles included in the theme (including Bootstrap and default Cinder styles). You can find the Cinder and Bootstrap CSS files on the paths cinder/css/cinder.css and cinder/css/bootstrap.min.css , respectively. Add Your Own JavaScript \u00b6 Create a js directory inside your docs directory and add your JS files. Then include your JS files in the mkdocs.yml file with the extra_js field: site_name: [YOURPROJECT] theme: cinder extra_js: - \"js/myscript.js\" - \"js/myotherscript.js\" nav: - Home: index.md - About: about.md Keyboard shortcuts \u00b6 Place the following in your mkdocs.yml file to enable keyboard shortcuts: shortcuts: help: 191 # ? next: 39 # right arrow previous: 37 # left arrow search: 83 # s The numbers correspond to the key that you would like to use for that shortcut. You can use https://keycode.info/ to find the keycode you want. Extending Cinder \u00b6 Create a new directory within your project (e.g., cinder-theme-ext/ ) and create main.html . Add the following line at the top of the HTML file. {% extends \"base.html\" %} Instead of using theme_dir: cinder in mkdocs.yml , use: theme: name: cinder custom_dir: [custom dir] Refer to MkDocs Documentation - Using the theme custom_dir for more information. Use the following examples as reference. You can put your own Jinja2 within the blocks. More information can be found in MkDocs Documentation - Overriding Template Blocks . Adding extra HTML to the head tag \u00b6 Append to main.html : {% block extrahead %} <meta name=\"author\" content=\"{{ page.meta.author }}\" /> {% endblock %} Replacing footer \u00b6 Append to main.html : {% block footer %} <hr /> <p> {% if config.copyright %} <small>{{ config.copyright }}<br /></small> {% endif %} <small >Documentation built with <a href=\"http://www.mkdocs.org/\">MkDocs</a>.</small > {% if page.meta.revision_date %} <small><br /><i>Updated {{ page.meta.revision_date }}</i></small> {% endif %} </p> {% endblock %} page.meta.revision_date can be set by using meta-data (front-matter) at the beginning of your Markdown document or using mkdocs-git-revision-date-plugin . Github or Bitbucket Repository Link \u00b6 Include the repo_url field and define it with your repository URL: site_name: [YOURPROJECT] theme: cinder repo_url: \"https://github.com/chrissimpkins/cinder\" nav: - Home: index.md - About: about.md The link appears at the upper right hand corner of your site. License Declaration and Link \u00b6 The Cinder theme displays your license declaration in the footer if you include a copyright field and define it with the text (and optionally the HTML link) that you would like to display: site_name: [YOURPROJECT] theme: cinder copyright: \"Cinder is licensed under the <a href='https://github.com/chrissimpkins/cinder/blob/master/LICENSE.md'>MIT license \" nav: - Home: index.md - About: about.md Disabling Theme Features \u00b6 The Cinder theme can turn off some theme features entirely in mkdocs.yml , for situations where you don't need these features. If this is all the customization required, it saves overriding theme files. For example: theme: name: cinder # Turn off Previous/Next navigation links in the navbar disable_nav_previous_next: true # Turn off Search in the navbar disable_nav_search: true # Turn off the site_name link in the navbar disable_nav_site_name: true # Turn off the footer entirely disable_footer: true # Turn off the default footer message, but display the page revision date if it's available disable_footer_except_revision: true Issues \u00b6 If you have any issues with the theme, please report them on the Cinder repository: Report Issue Active Issues License \u00b6 Cinder is licensed under the MIT license . Cinder Theme Specimen Typography \u00b6 Typefaces \u00b6 Headers: Inter Body: Open Sans Code: Hack Body Copy \u00b6 You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 . Lead Body Copy \u00b6 Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus. Headings \u00b6 All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline. h1. Heading h2. Heading h3. Heading h4. Heading h5. Heading h6. Heading h1. Heading Secondary text h2. Heading Secondary text h3. Heading Secondary text h4. Heading Secondary text h5. Heading Secondary text h6. Heading Secondary text Blockquotes \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title Lists \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Horizontal Description Lists \u00b6 Something This is something SomethingElse This is something else Contextual Colors \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Code \u00b6 Inline Code \u00b6 This is an example of inline code #import requests Preformatted Code Blocks with Syntax Highlighting def request(method, url, **kwargs): \"\"\"Constructs and sends a :class:`Request `. Usage:: >>> import requests >>> req = requests.request('GET', 'https://httpbin.org/get') \"\"\" # By using the 'with' statement we are sure the session is closed, thus we # avoid leaving sockets open which can trigger a ResourceWarning in some # cases, and look like a memory leak in others. with sessions.Session() as session: return session.request(method=method, url=url, **kwargs) def get(url, params=None, **kwargs): r\"\"\"Sends a GET request. :param url: URL for the new :class:`Request` object. :param params: (optional) Dictionary, list of tuples or bytes to send in the body of the :class:`Request`. :param \\*\\*kwargs: Optional arguments that ``request`` takes. :return: :class:`Response ` object :rtype: requests.Response \"\"\" kwargs.setdefault('allow_redirects', True) return request('get', url, params=params, **kwargs) (Source code sample from the Python requests library , Apache License, v2.0 ) Syntax highlighting support is available for and of the following languages listed on the highlightjs website . See the mkdocs \"styling your docs\" hljs_languages section for info on how to load languages dynamically. Note Include source code formatted in Github-flavored Markdown fenced code blocks with an info string that defines the supported programming language to automate syntax highlighting when your site is built. Tables \u00b6 Striped Table \u00b6 # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Bordered Table \u00b6 # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Buttons \u00b6 Default Buttons \u00b6 Link Button Styled Buttons \u00b6 Default Primary Success Info Warning Danger Button Sizes \u00b6 Large button Large button Default button Default button Small button Small button Extra small button Extra small button Block Level Buttons \u00b6 Block level button Block level button Alerts \u00b6 A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out! Callouts \u00b6 Default Callout This is a default callout. Primary Callout This is a primary callout. Success Callout This is a success callout. Info Callout This is an info callout. Warning Callout This is a warning callout. Danger Callout This is a danger callout. Admonitions \u00b6 The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. <pre><code> \\# this is a note def func(arg) { \\# notable things are in here! return None } </code></pre> Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. <pre><code> \\# this is a warning def func(arg) { \\# be careful! return None } </code></pre> Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. <pre><code> \\# this is dangerous def func(arg) { \\# BOOM! return None } </code></pre>","title":"Home"},{"location":"#about","text":"Cinder is a clean, responsive theme for static documentation sites that are generated with MkDocs . It's built on the Bootstrap 3 framework and includes pre-packaged: highlight.js v9.18.0 syntax highlighting with support for 185 languages (over 30 by default) and over 90 styles FontAwesome v5.12.0 icon support smashingly legible type scheme to get your message out to your users You are viewing the theme in action and can see a selection of the theme elements on the Specimen page .","title":"About"},{"location":"#install","text":"Required : Python 3.4+","title":"Install"},{"location":"#install-mkdocs-create-a-new-project","text":"If you haven't installed MkDocs yet, use the following command to install it: $ pip install mkdocs Next, navigate to a clean directory and create a new MkDocs project with the following command: $ mkdocs new [projectname] Replace [projectname] with the name of your project (without the brackets). Then navigate to the root of your project directory: $ cd [projectname]","title":"Install MkDocs &amp; Create a New Project"},{"location":"#install-the-cinder-theme","text":"Download the Cinder theme archive by clicking the button below. Download Cinder Unpack the contents of the archive into a directory named cinder at the top level of your MkDocs project directory. Your project directory should now look like this: . \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 cinder \u2502 \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 js \u2502 \u251c\u2500\u2500 base.html \u2502 \u251c\u2500\u2500 content.html \u2502 \u251c\u2500\u2500 404.html \u2502 \u251c\u2500\u2500 nav-sub.html \u2502 \u251c\u2500\u2500 nav.html \u2502 \u2514\u2500\u2500 toc.html \u2514\u2500\u2500 docs \u2514\u2500\u2500 index.md MkDocs projects use a YAML settings file called mkdocs.yml . This is located in the root of your project directory after you use the mkdocs new command. Open the file in a text editor and modify it to include the theme settings as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' nav: - Home: index.md See the MkDocs documentation for additional details.","title":"Install the Cinder Theme"},{"location":"#test-with-a-local-site-server","text":"Use the following command to establish a local server for your site: $ mkdocs serve Then open your site in any browser at the URL http://localhost:8000 .","title":"Test with a Local Site Server"},{"location":"#create-your-site","text":"","title":"Create Your Site"},{"location":"#add-content-with-markdown-syntax","text":"Get to work on your site home page by opening the docs/index.md file and editing it in Markdown syntax. The HTML automatically updates in the browser when you save the Markdown file if you use the MkDocs server (see command above).","title":"Add Content with Markdown Syntax"},{"location":"#add-new-pages","text":"Add new pages to your site by creating a new Markdown file in your docs directory, then linking to the new page in the mkdocs.yml file. This uses a Page Name : Markdown file syntax. For example, to add an About page using a Markdown file that is located on the path docs/about.md , you would format the mkdocs.yml file as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' nav: - Home: index.md - About: about.md Add additional pages to your site by repeating the above series of steps.","title":"Add New Pages"},{"location":"#build-your-site","text":"Build your site files with the command: $ mkdocs build Your site files are built in the site directory and are ready to use. Deploy the contents of the site directory to your web server.","title":"Build Your Site"},{"location":"#important-configuration-issues","text":"","title":"Important Configuration Issues"},{"location":"#1-set-the-site_url-configuration-field","text":"You must set the site_url field in your mkdocs.yml file to the appropriate production URL in order to generate a valid sitemap.xml file ( issue #80 ). Here is an example from the Cinder project mkdocs.yml file : site_name: Cinder site_url: https://sourcefoundry.org/cinder/ site_author: Christopher Simpkins site_description: \"A clean, responsive theme for static documentation websites that are generated with MkDocs\" repo_url: \"https://github.com/chrissimpkins/cinder\" copyright: \"Cinder is licensed under the <a href='https://github.com/chrissimpkins/cinder/blob/master/LICENSE.md'>MIT license</a>\" theme: name: null custom_dir: cinder colorscheme: github highlightjs: true hljs_languages: - yaml nav: - Home: index.md - Specimen: specimen.md markdown_extensions: - admonition The sitemap.xml file will be located at [SITE_URL]/sitemap.xml when you push your site into the production environment. During development the sitemap.xml file can be found at http://127.0.0.1:8000/sitemap.xml .","title":"1. Set the site_url configuration field"},{"location":"#site-customization","text":"The following are a few common customizations that you might be interested in. For much more detail about the configuration of your site, check out the MkDocs Configuration documentation .","title":"Site Customization"},{"location":"#syntax-highlighting-color-scheme","text":"Cinder supports the 90+ highlightjs color schemes . The github color scheme that you see on this page is the default and will be used if you do not specify otherwise. To change to a different scheme, include the colorscheme field under the theme field in your mkdocs.yml file and enter the color scheme name. For example, to switch to the Dracula theme , enter the following: theme: name: null custom_dir: cinder colorscheme: dracula and then rebuild your site. The color scheme name should match the base name of the highlightjs CSS file. See the src/styles directory of the highlightjs repository for a complete list of these CSS paths.","title":"Syntax Highlighting Color Scheme"},{"location":"#syntax-highlighting-language-support","text":"By default, Cinder supports the ~30 syntaxes listed under common in the documentation . You can broaden support to any of the over 130 highlightjs languages using definitions in your mkdocs.yml file. To add a new language, create a list of additional languages as a hljs_languages sub-field under the theme field in the mkdocs.yml file. The definitions are formatted as a newline-delimited list with - characters. For example, to add support for the Julia and Perl languages, format your configuration file like this: theme: name: null custom_dir: cinder hljs_languages: - julia - perl Use the base file name of the JavaScript files located in the CDN for your syntax definitions.","title":"Syntax Highlighting Language Support"},{"location":"#site-favicon","text":"Create an img subdirectory in your docs directory and add a custom favicon.ico file. See the MkDocs documentation for additional details.","title":"Site Favicon"},{"location":"#add-your-own-css-stylesheets","text":"Create a css directory inside your docs directory and add your CSS files. You can overwrite any of the Cinder styles in your CSS files. Then include your CSS files in the mkdocs.yml file with the extra_css field: site_name: [YOURPROJECT] theme: cinder extra_css: - \"css/mystyle.css\" - \"css/myotherstyle.css\" nav: - Home: index.md - About: about.md Your CSS styles fall at the end of the cascade and will override all styles included in the theme (including Bootstrap and default Cinder styles). You can find the Cinder and Bootstrap CSS files on the paths cinder/css/cinder.css and cinder/css/bootstrap.min.css , respectively.","title":"Add Your Own CSS Stylesheets"},{"location":"#add-your-own-javascript","text":"Create a js directory inside your docs directory and add your JS files. Then include your JS files in the mkdocs.yml file with the extra_js field: site_name: [YOURPROJECT] theme: cinder extra_js: - \"js/myscript.js\" - \"js/myotherscript.js\" nav: - Home: index.md - About: about.md","title":"Add Your Own JavaScript"},{"location":"#keyboard-shortcuts","text":"Place the following in your mkdocs.yml file to enable keyboard shortcuts: shortcuts: help: 191 # ? next: 39 # right arrow previous: 37 # left arrow search: 83 # s The numbers correspond to the key that you would like to use for that shortcut. You can use https://keycode.info/ to find the keycode you want.","title":"Keyboard shortcuts"},{"location":"#extending-cinder","text":"Create a new directory within your project (e.g., cinder-theme-ext/ ) and create main.html . Add the following line at the top of the HTML file. {% extends \"base.html\" %} Instead of using theme_dir: cinder in mkdocs.yml , use: theme: name: cinder custom_dir: [custom dir] Refer to MkDocs Documentation - Using the theme custom_dir for more information. Use the following examples as reference. You can put your own Jinja2 within the blocks. More information can be found in MkDocs Documentation - Overriding Template Blocks .","title":"Extending Cinder"},{"location":"#adding-extra-html-to-the-head-tag","text":"Append to main.html : {% block extrahead %} <meta name=\"author\" content=\"{{ page.meta.author }}\" /> {% endblock %}","title":"Adding extra HTML to the head tag"},{"location":"#replacing-footer","text":"Append to main.html : {% block footer %} <hr /> <p> {% if config.copyright %} <small>{{ config.copyright }}<br /></small> {% endif %} <small >Documentation built with <a href=\"http://www.mkdocs.org/\">MkDocs</a>.</small > {% if page.meta.revision_date %} <small><br /><i>Updated {{ page.meta.revision_date }}</i></small> {% endif %} </p> {% endblock %} page.meta.revision_date can be set by using meta-data (front-matter) at the beginning of your Markdown document or using mkdocs-git-revision-date-plugin .","title":"Replacing footer"},{"location":"#github-or-bitbucket-repository-link","text":"Include the repo_url field and define it with your repository URL: site_name: [YOURPROJECT] theme: cinder repo_url: \"https://github.com/chrissimpkins/cinder\" nav: - Home: index.md - About: about.md The link appears at the upper right hand corner of your site.","title":"Github or Bitbucket Repository Link"},{"location":"#license-declaration-and-link","text":"The Cinder theme displays your license declaration in the footer if you include a copyright field and define it with the text (and optionally the HTML link) that you would like to display: site_name: [YOURPROJECT] theme: cinder copyright: \"Cinder is licensed under the <a href='https://github.com/chrissimpkins/cinder/blob/master/LICENSE.md'>MIT license \" nav: - Home: index.md - About: about.md","title":"License Declaration and Link"},{"location":"#disabling-theme-features","text":"The Cinder theme can turn off some theme features entirely in mkdocs.yml , for situations where you don't need these features. If this is all the customization required, it saves overriding theme files. For example: theme: name: cinder # Turn off Previous/Next navigation links in the navbar disable_nav_previous_next: true # Turn off Search in the navbar disable_nav_search: true # Turn off the site_name link in the navbar disable_nav_site_name: true # Turn off the footer entirely disable_footer: true # Turn off the default footer message, but display the page revision date if it's available disable_footer_except_revision: true","title":"Disabling Theme Features"},{"location":"#issues","text":"If you have any issues with the theme, please report them on the Cinder repository: Report Issue Active Issues","title":"Issues"},{"location":"#license","text":"Cinder is licensed under the MIT license .","title":"License"},{"location":"#typography","text":"","title":"Typography"},{"location":"#typefaces","text":"Headers: Inter Body: Open Sans Code: Hack","title":"Typefaces"},{"location":"#body-copy","text":"You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 .","title":"Body Copy"},{"location":"#lead-body-copy","text":"Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.","title":"Lead Body Copy"},{"location":"#headings","text":"All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline.","title":"Headings"},{"location":"#blockquotes","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title","title":"Blockquotes"},{"location":"#lists","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Lists"},{"location":"#horizontal-description-lists","text":"Something This is something SomethingElse This is something else","title":"Horizontal Description Lists"},{"location":"#contextual-colors","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.","title":"Contextual Colors"},{"location":"#code","text":"","title":"Code"},{"location":"#inline-code","text":"This is an example of inline code #import requests","title":"Inline Code"},{"location":"#tables","text":"","title":"Tables"},{"location":"#striped-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Striped Table"},{"location":"#bordered-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Bordered Table"},{"location":"#buttons","text":"","title":"Buttons"},{"location":"#default-buttons","text":"Link Button","title":"Default Buttons"},{"location":"#styled-buttons","text":"Default Primary Success Info Warning Danger","title":"Styled Buttons"},{"location":"#button-sizes","text":"Large button Large button Default button Default button Small button Small button Extra small button Extra small button","title":"Button Sizes"},{"location":"#block-level-buttons","text":"Block level button Block level button","title":"Block Level Buttons"},{"location":"#alerts","text":"A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out!","title":"Alerts"},{"location":"#callouts","text":"","title":"Callouts"},{"location":"#admonitions","text":"The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. <pre><code> \\# this is a note def func(arg) { \\# notable things are in here! return None } </code></pre> Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. <pre><code> \\# this is a warning def func(arg) { \\# be careful! return None } </code></pre> Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. <pre><code> \\# this is dangerous def func(arg) { \\# BOOM! return None } </code></pre>","title":"Admonitions"},{"location":"cs/al/","text":"Algorithm \u00b6 TODO.","title":"Algorithm"},{"location":"cs/al/#algorithm","text":"TODO.","title":"Algorithm"},{"location":"cs/ds/","text":"\u6570\u636e\u7ed3\u6784 \u00b6 \u57fa\u672c\u6982\u5ff5 \u00b6 \u6570\u636e \u00b6 \u5bf9\u5ba2\u89c2\u4e8b\u7269\u7684\u7b26\u53f7\u8868\u793a\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u662f\u6307\uff0c\u6240\u6709\u80fd\u8f93\u5165\u8ba1\u7b97\u673a\u4e2d\u5e76\u88ab\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5904\u7406\u7684\u7b26\u53f7\u7684\u603b\u79f0\u3002 \u6570\u636e\u5143\u7d20 \u00b6 \u6570\u636e\u7684\u57fa\u672c\u5143\u7d20\uff0c\u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e2d\u90a3\u4e2a\u901a\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u8003\u8651\u548c\u7814\u7a76\u3002\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u53ef\u4ee5\u7531\u82e5\u5e72\u4e2a \u6570\u636e\u9879 \u7ec4\u6210\u3002 \u6570\u636e\u5bf9\u8c61 \u00b6 \u6027\u8d28\u76f8\u540c\u7684\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408\uff0c\u662f\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6\u3002 \u6570\u636e\u7ed3\u6784 \u00b6 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u6570\u636e\u7ed3\u6784 (Data Structure) \u662f \u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u3001\u7ec4\u7ec7\u6570\u636e\u7684\u65b9\u5f0f \u3002 \u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff1a \\[ DataStructure = (D,S) \\] D \u662f\u6570\u636e\u5143\u7d20\u7684\u6709\u9650\u96c6\uff0cS \u662f D \u4e0a\u7684\u6709\u9650\u96c6\u3002 \u6570\u636e\u7ed3\u6784\u610f\u5473\u7740\u63a5\u53e3\u6216\u5c01\u88c5\uff1a\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u53ef\u88ab\u89c6\u4e3a\u4e24\u4e2a\u51fd\u6570\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u6216\u8005\u662f\u7531\u6570\u636e\u7c7b\u578b\u8054\u5408\u7ec4\u6210\u7684\u5b58\u50a8\u5185\u5bb9\u7684\u8bbf\u95ee\u65b9\u6cd5\u5c01\u88c5\u3002 \u7cfb\u7edf\u67b6\u6784\u7684\u5173\u952e\u56e0\u7d20\u662f\u6570\u636e\u7ed3\u6784\u800c\u975e\u7b97\u6cd5\u7684\u89c1\u89e3\uff0c\u5bfc\u81f4\u4e86\u591a\u79cd\u5f62\u5f0f\u5316\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7f16\u7a0b\u8bed\u8a00\u7684\u51fa\u73b0\u3002\u7edd\u5927\u591a\u6570\u7684\u8bed\u8a00\u90fd\u5e26\u6709\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u6a21\u5757\u5316\u601d\u60f3\uff0c\u900f\u8fc7\u5c06\u6570\u636e\u7ed3\u6784\u7684\u5177\u4f53\u5b9e\u73b0\u5c01\u88c5\u9690\u85cf\u4e8e\u7528\u6237\u754c\u9762\u4e4b\u540e\u7684\u65b9\u6cd5\uff0c\u6765\u8ba9\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u5b89\u5168\u5730\u91cd\u7528\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u3002C++\u3001Java\u3001Python \u7b49\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u4f7f\u7528\u7c7b\u6765\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002 \u903b\u8f91\u7ed3\u6784 \u00b6 \u6570\u636e\u5bf9\u8c61\u4e2d\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002\u5b58\u5728\u4ee5\u4e0b\u51e0\u7c7b\u3002 \u96c6\u5408 \u9664\u4e86 \u540c\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408 \u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u5173\u7cfb \u7ebf\u6027\u7ed3\u6784 \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb \u6811\u5f62\u7ed3\u6784 \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u591a\u4e2a\u7684\u5173\u7cfb \u56fe\u7ed3\u6784 \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5173\u7cfb \u7269\u7406\u7ed3\u6784 (\u4e5f\u79f0\u5b58\u50a8\u7ed3\u6784) \u00b6 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u5f62\u5f0f\u3002 \u987a\u5e8f\u5b58\u50a8\u7ed3\u6784 \u662f\u628a\u6570\u636e\u5143\u7d20\u5b58\u653e\u5728\u5730\u5740\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u91cc\uff0c\u5176\u6570\u636e\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u548c\u7269\u7406\u5173\u7cfb\u662f\u4e00\u81f4\u7684\u3002 \u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 \u628a\u6570\u636e\u5143\u7d20\u5b58\u653e\u5728\u4efb\u610f\u7684\u5b58\u50a8\u5355\u5143\u91cc\uff0c\u8fd9\u7ec4\u5b58\u50a8\u5355\u5143\u53ef\u4ee5\u662f\u8fde\u7eed\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8fde\u7eed\u7684\u3002\u6570\u636e\u5143\u7d20\u7684\u5b58\u50a8\u5173\u7cfb\u5e76\u4e0d\u80fd\u53cd\u6620\u5176\u903b\u8f91\u5173\u7cfb\uff0c\u56e0\u6b64\u9700\u8981\u7528\u4e00\u4e2a\u6307\u9488\u5b58\u653e\u6570\u636e\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd9\u6837\u901a\u8fc7\u5730\u5740\u5c31\u53ef\u4ee5\u627e\u5230\u76f8\u5173\u8054\u6570\u636e\u7684\u4f4d\u7f6e\u3002 \u62bd\u8c61\u6570\u636e\u7c7b\u578b \u00b6 \u62bd\u8c61\u6570\u636e\u7c7b\u578b (Abstract Data Type\uff0cADT) \u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5177\u6709\u7c7b\u4f3c\u884c\u4e3a\u7684\u7279\u5b9a\u7c7b\u522b\u7684\u6570\u636e\u7ed3\u6784\u7684\u6570\u5b66\u6a21\u578b\uff1b\u6216\u8005\u5177\u6709\u7c7b\u4f3c\u8bed\u4e49\u7684\u4e00\u79cd\u6216\u591a\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6570\u636e\u7c7b\u578b\u3002\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u662f\u95f4\u63a5\u5b9a\u4e49\u7684\uff0c\u901a\u8fc7\u5176\u4e0a\u7684\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53ca\u8fd9\u4e9b\u64cd\u4f5c\u7684\u6548\u679c\u7684\u6570\u5b66\u7ea6\u675f\u3002 \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u662f\u7eaf\u7cb9\u7406\u8bba\u5b9e\u4f53\uff0c\u7528\u4e8e\u7b80\u5316\u63cf\u8ff0\u62bd\u8c61\u7b97\u6cd5\uff0c\u5206\u7c7b\u4e0e\u8bc4\u4ef7\u6570\u636e\u7ed3\u6784\uff0c\u5f62\u5f0f\u63cf\u8ff0\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u7c7b\u578b\u7cfb\u7edf\u3002\u4e00\u4e2a ADT \u53ef\u4ee5\u7528\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u6216\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff0c\u5728\u8bb8\u591a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u6709\u8bb8\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1b\u6216\u8005\u7528\u5f62\u5f0f\u89c4\u8303\u8bed\u8a00\u63cf\u8ff0\u3002 \u5f62\u5f0f\u4e0a\uff0cADT \u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e09\u5143\u7ec4\u6765\u63cf\u8ff0\uff1a \\[ ADT = (D,S,P) \\] D \u662f\u6570\u636e\u5bf9\u8c61\uff0cS \u662f D \u4e0a\u7684\u5173\u7cfb\u96c6\uff0cP \u662f\u5bf9 D \u7684\u57fa\u672c\u64cd\u4f5c\u96c6\u3002 \u7b97\u6cd5 \u00b6 \u4ee5\u4e0b\u662f\u9ad8\u5fb7\u7eb3\u5728\u4ed6\u7684\u8457\u4f5c\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u827a\u672f\u300b\u91cc\u5bf9\u7b97\u6cd5\u7684\u7279\u5f81\u5f52\u7eb3\uff1a \u8f93\u5165 \u4e00\u4e2a\u7b97\u6cd5\u5fc5\u987b\u6709\u96f6\u4e2a\u6216\u4ee5\u4e0a\u8f93\u5165\u91cf\u3002 \u8f93\u51fa \u4e00\u4e2a\u7b97\u6cd5\u5e94\u6709\u4e00\u4e2a\u6216\u4ee5\u4e0a\u8f93\u51fa\u91cf\uff0c\u8f93\u51fa\u91cf\u662f\u7b97\u6cd5\u8ba1\u7b97\u7684\u7ed3\u679c\u3002 \u660e\u786e\u6027 \u7b97\u6cd5\u7684\u63cf\u8ff0\u5fc5\u987b\u65e0\u6b67\u4e49\uff0c\u4ee5\u4fdd\u8bc1\u7b97\u6cd5\u7684\u5b9e\u9645\u6267\u884c\u7ed3\u679c\u662f\u7cbe\u786e\u5730\u7b26\u5408\u8981\u6c42\u6216\u671f\u671b\uff0c\u901a\u5e38\u8981\u6c42\u5b9e\u9645\u8fd0\u884c\u7ed3\u679c\u662f\u786e\u5b9a\u7684\u3002 \u6709\u9650\u6027 \u4f9d\u636e\u56fe\u7075\u7684\u5b9a\u4e49\uff0c\u4e00\u4e2a\u7b97\u6cd5\u662f\u80fd\u591f\u88ab\u4efb\u4f55\u56fe\u7075\u5b8c\u5168\u7cfb\u7edf\u6a21\u62df\u7684\u4e00\u4e32\u8fd0\u7b97\uff0c\u800c\u56fe\u7075\u673a\u53ea\u6709\u6709\u9650\u4e2a\u72b6\u6001\u3001\u6709\u9650\u4e2a\u8f93\u5165\u7b26\u53f7\u548c\u6709\u9650\u4e2a\u8f6c\u79fb\u51fd\u6570(\u6307\u4ee4)\u3002\u800c\u4e00\u4e9b\u5b9a\u4e49\u66f4\u89c4\u5b9a\u7b97\u6cd5\u5fc5\u987b\u5728\u6709\u9650\u4e2a\u6b65\u9aa4\u5185\u5b8c\u6210\u4efb\u52a1\u3002 \u6709\u6548\u6027 \u53c8\u79f0\u53ef\u884c\u6027\u3002\u80fd\u591f\u5b9e\u73b0\uff0c\u7b97\u6cd5\u4e2d\u63cf\u8ff0\u7684\u64cd\u4f5c\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7\u5df2\u7ecf\u5b9e\u73b0\u7684\u57fa\u672c\u8fd0\u7b97\u6267\u884c\u6709\u9650\u6b21\u6765\u5b9e\u73b0\u3002 \u7ebf\u6027\u8868 \u00b6 \u7279\u70b9 \u00b6 \u5728\u6570\u636e\u5143\u7d20\u7684 \u975e\u7a7a\u6709\u9650\u96c6 \u4e2d\uff0c \u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u88ab\u79f0\u4e3a \u7b2c\u4e00\u4e2a \u7684\u5143\u7d20 \u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u88ab\u79f0\u4e3a \u6700\u540e\u4e00\u4e2a \u7684\u5143\u7d20 \u9664\u7b2c\u4e00\u4e2a\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u5143\u7d20\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u4e2a \u524d\u8d8b \u9664\u6700\u540e\u4e00\u4e2a\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u5143\u7d20\u6709\u4e14\u53ea\u6709\u4e00\u4e2a \u540e\u7ee7 \u987a\u5e8f\u5b58\u50a8 \u00b6 \u6570\u7ec4 (Array)\uff0c\u662f \u7531\u76f8\u540c\u7c7b\u578b\u7684\u5143\u7d20 (element) \u7684\u96c6\u5408\u6240\u7ec4\u6210\u7684\u6570\u636e\u7ed3\u6784 \uff0c \u5206\u914d\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u6765\u5b58\u50a8 \u3002\u5229\u7528\u5143\u7d20\u7684\u7d22 (index) \u53ef\u4ee5\u8ba1\u7b97\u51fa\u8be5\u5143\u7d20\u5bf9\u5e94\u7684\u5b58\u50a8\u5730\u5740\u3002 \u7ed3\u6784 \u00b6 struct Array { Type* elements; int length; int size; }; \u57fa\u672c\u64cd\u4f5c \u00b6 \u521d\u59cb\u5316 \u8bbf\u95ee\u5143\u7d20 \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165 \u5728\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664 \u67e5\u627e \u94fe\u5f0f\u5b58\u50a8 \u00b6 \u94fe\u8868 (Linked List) \u662f\u4e00\u79cd\u5e38\u89c1\u7684\u57fa\u7840\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u7ebf\u6027\u8868\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u6309\u7ebf\u6027\u7684\u987a\u5e8f\u5b58\u50a8\u6570\u636e\uff0c\u800c\u662f\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u91cc\u5b58\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002\u7531\u4e8e\u4e0d\u5fc5\u987b\u6309\u987a\u5e8f\u5b58\u50a8\uff0c\u94fe\u8868\u5728\u63d2\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u8fbe\u5230 \\(O(1)\\) \u7684\u590d\u6742\u5ea6\uff0c\u6bd4\u6570\u7ec4\u5feb\u5f97\u591a\uff0c\u4f46\u662f\u67e5\u627e\u4e00\u4e2a\u8282\u70b9\u6216\u8005\u8bbf\u95ee\u7279\u5b9a\u7f16\u53f7\u7684\u8282\u70b9\u5219\u9700\u8981 \\(O(n)\\) \u7684\u65f6\u95f4\u3002 \u94fe\u8868\u7ed3\u6784\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u673a\u5185\u5b58\u7a7a\u95f4\uff0c\u5b9e\u73b0\u7075\u6d3b\u7684\u5185\u5b58\u52a8\u6001\u7ba1\u7406\u3002\u4f46\u662f\u94fe\u8868\u5931\u53bb\u4e86\u6570\u7ec4\u968f\u673a\u8bfb\u53d6\u7684\u4f18\u70b9\uff0c\u540c\u65f6\u94fe\u8868\u7531\u4e8e\u589e\u52a0\u4e86\u7ed3\u70b9\u7684\u6307\u9488\u57df\uff0c\u7a7a\u95f4\u5f00\u9500\u6bd4\u8f83\u5927\u3002 \u5355\u5411\u94fe\u8868 \u00b6 \u94fe\u8868\u4e2d\u6700\u7b80\u5355\u7684\u4e00\u79cd\u662f\u5355\u5411\u94fe\u8868\uff0c\u5b83\u5305\u542b\u4e24\u4e2a\u57df\uff0c\u4e00\u4e2a\u4fe1\u606f\u57df\u548c\u4e00\u4e2a\u6307\u9488\u57df\u3002\u8fd9\u4e2a\u94fe\u63a5\u6307\u5411\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5219\u6307\u5411\u4e00\u4e2a\u7a7a\u503c\u3002\u5355\u5411\u94fe\u8868\u53ea\u53ef\u5411\u4e00\u4e2a\u65b9\u5411\u904d\u5386\u3002 \u53cc\u5411\u94fe\u8868 \u00b6 \u53cc\u5411\u94fe\u8868\u4e5f\u53eb\u53cc\u94fe\u8868\u3002\u53cc\u5411\u94fe\u8868\u4e2d\u4e0d\u4ec5\u6709\u6307\u5411\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\uff0c\u8fd8\u6709\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002\u8fd9\u6837\u53ef\u4ee5\u4ece\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u8bbf\u95ee\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u4ee5\u81f3\u6574\u4e2a\u94fe\u8868\u3002\u4e00\u822c\u662f\u5728\u9700\u8981\u5927\u6279\u91cf\u7684\u53e6\u5916\u50a8\u5b58\u6570\u636e\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\u7528\u3002 \u5faa\u73af\u94fe\u8868 \u00b6 \u5faa\u73af\u94fe\u8868\u4e2d\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e4b\u524d\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5faa\u73af\u94fe\u8868\u7684\u65e0\u8fb9\u754c\u4f7f\u5f97\u5728\u8fd9\u6837\u7684\u94fe\u8868\u4e0a\u8bbe\u8ba1\u7b97\u6cd5\u4f1a\u6bd4\u666e\u901a\u94fe\u8868\u66f4\u52a0\u5bb9\u6613\u3002\u5bf9\u4e8e\u65b0\u52a0\u5165\u7684\u8282\u70b9\u5e94\u8be5\u662f\u5728\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e4b\u524d\u8fd8\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e4b\u540e\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u8981\u6c42\u7075\u6d3b\u5904\u7406\uff0c\u533a\u522b\u4e0d\u5927\u3002\u5f53\u7136\uff0c\u5982\u679c\u53ea\u4f1a\u5728\u6700\u540e\u63d2\u5165\u6570\u636e\uff0c\u5904\u7406\u4e5f\u662f\u5f88\u5bb9\u6613\u7684\u3002 \u7ed3\u6784 \u00b6 struct Node { Type* value; Node* prev; Node* next; }; \u57fa\u672c\u64cd\u4f5c \u00b6 \u521d\u59cb\u5316 \u8bbf\u95ee\u5143\u7d20 \u63d2\u5165 (\u5c3e\u63d2\u6cd5\uff0c\u5934\u63d2\u6cd5\uff0c\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165) \u5728\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664 \u961f\u5217 \u00b6 \u961f\u5217\uff0c\u53c8\u79f0\u4e3a\u4f2b\u5217( queue )\uff0c\u662f\u5148\u8fdb\u5148\u51fa( FIFO \uff0c First-In-First-Out )\u7684\u7ebf\u6027\u8868\u3002\u5728\u5177\u4f53\u5e94\u7528\u4e2d\u901a\u5e38\u7528\u94fe\u8868\u6216\u8005\u6570\u7ec4\u6765\u5b9e\u73b0\u3002\u961f\u5217\u53ea\u5141\u8bb8\u5728\u540e\u7aef(\u79f0\u4e3a rear )\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u5728\u524d\u7aef(\u79f0\u4e3a front )\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u3002 \u961f\u5217\u7684\u64cd\u4f5c\u65b9\u5f0f\u548c\u5806\u6808\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u961f\u5217\u53ea\u5141\u8bb8\u65b0\u6570\u636e\u5728\u540e\u7aef\u8fdb\u884c\u6dfb\u52a0\u3002 \u6570\u7ec4\u961f\u5217 \u00b6 #define MAX_QSIZE 10 // \u6700\u5927\u961f\u5217\u957f\u5ea6+1 // \u9635\u5217\u961f\u5217\u7684\u5b58\u50a8\u7ed3\u6784 struct Queue { int Array[MAX_QSIZE]; // \u9635\u5217\u7a7a\u95f4\u5927\u5c0f int front; // \u961f\u5934 int rear; // \u961f\u5c3e int length; // \u961f\u5217\u957f\u5ea6 }; // \u6784\u9020\u4e00\u4e2a\u7a7a\u961f\u5217Q Queue* Q_Init() { Queue *Q = (Queue*)malloc(sizeof(Queue)); if (!Q){ // \u5b58\u50a8\u5206\u914d\u5931\u8d25 exit(OVERFLOW); } //\u521d\u59cb\u5316 Q->front = Q->rear = Q->length = 0; return Q; } // \u5c06Q\u6e05\u4e3a\u7a7a\u961f\u5217 void Q_Clear(Queue *Q) { //\u6e05\u9664\u5934\u5c3e\u4e0b\u6807\u548c\u957f\u5ea6 Q->front = Q->rear = Q->length = 0; } // \u5165\u5217 int Q_Put(Queue *Q, int x) { //\u5982\u679c\u5f53\u524d\u5143\u7d20\u6570\u91cf\u7b49\u4e8e\u6700\u5927\u6570\u91cf \u8fd4\u56de -1 if (Q->rear + 1 == MAX_QSIZE) { return -1; } Q->Array[Q->rear] = x; Q->rear = Q->rear + 1; //length + 1 Q->length = Q->length + 1; return 1; } // \u51fa\u5217 int Q_Poll(Queue *Q) { //\u5982\u679c\u5f53\u524d\u5143\u7d20\u6570\u91cf\u7b49\u4e8e\u6700\u5927\u6570\u91cf \u8fd4\u56de -1 if (Q->front + 1 == MAX_QSIZE) return -1; int x = Q->Array[Q->front]; Q->front = Q->front + 1; // \u79fb\u51fa\u540e\u6e1b\u5c111 Q->length = Q->length - 1; return x; } \u5355\u94fe\u961f\u5217 \u00b6 \u5355\u94fe\u961f\u5217\u4f7f\u7528\u94fe\u8868\u4f5c\u4e3a\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4f2a\u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u961f\u5217\u957f\u5ea6\u4e5f\u6ca1\u6709\u9650\u5236\u3002\u4f46\u63d2\u5165\u548c\u8bfb\u53d6\u7684\u65f6\u95f4\u4ee3\u4ef7\u8f83\u9ad8\u3002 // \u5b9a\u4e49\u5355\u94fe\u961f\u5217\u7684\u5b58\u50a8\u7ed3\u6784 typedef struct QNode { int data; QNode *next; }QNode,*QNodePtr; typedef struct LinkQueue{ //\u961f\u5934 \u961f\u5c3e \u6307\u9488 QNodePtr front,rear; }LinkQueue; // \u6784\u9020\u4e00\u4e2a\u7a7a\u961f\u5217Q LinkQueue* Q_Init() { //\u7533\u8bf7\u5185\u5b58 LinkQueue* Q = (LinkQueue*)malloc(sizeof(LinkQueue)); //\u5982\u679c Q \u4e3a NULL \u8bf4\u660e \u5185\u5b58\u7533\u8bf7\u5931\u8d25\uff0c\u7ed3\u675f\u7a0b\u5e8f if (!Q) exit(OVERFLOW); //\u521d\u59cb\u5316\u5934\u5c3e\u8282\u70b9 \u6307\u5411\u76f8\u540c\u5730\u5740 Q->front = Q->rear = (QNodePtr)malloc(sizeof(QNode)); //\u5982\u679c Q->front \u4e3a NULL \u8bf4\u660e \u5185\u5b58\u7533\u8bf7\u5931\u8d25\uff0c\u7ed3\u675f\u7a0b\u5e8f if (!Q->front) exit(OVERFLOW); Q->front->next = NULL; return Q; } // \u9500\u6bc1\u961f\u5217Q(\u65e0\u8bba\u7a7a\u5426\u5747\u53ef) void Q_Destroy(LinkQueue *Q) { while (Q->front) { //\u5c06\u961f\u5c3e\u6307\u5411\u961f\u5934\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\uff08\u7b2c1\u4e2a\u8282\u70b9\uff09 Q->rear = Q->front->next; //\u56de\u6536\u961f\u5934 free(Q->front); //\u5c06\u961f\u5934\u6307\u5411\u961f\u5c3e\uff08\u76f8\u5f53\u4e8e\u7b2c1\u4e2a\u8282\u70b9\u53d8\u6210\u4e86\u961f\u5934\uff0c\u7136\u540e\u4f9d\u6b21\u7b2c2\u4e2a\u7b2c3\u4e2a\u3001\u3001\u3001 //\u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u5c31\u662f Q->front == NULL \u7684\u65f6\u5019\uff09 Q->front = Q->rear; } free(Q); } // \u5c06Q\u6e05\u4e3a\u7a7a\u961f\u5217 void Q_Clear(LinkQueue *Q) { QNodePtr p, q; //\u5c06\u961f\u5c3e\u6307\u5411\u961f\u5934\u70b9\u7684\u5730\u5740 Q->rear = Q->front; //\u53d6\u51fa\u7b2c1\u4e2a\u8282\u70b9 p = Q->front->next; //\u56de\u6536\u7b2c1\u4e2a\u8282\u70b9 Q->front->next = NULL; while (p) { //\u5c06 q \u6307\u5411 p\uff08\u7b2c1\u4e2a\u8282\u70b9\uff09 q = p; //\u5c06 p \u6307\u5411 \u7b2c2\u4e2a\u8282\u70b9 p = p->next; //\u56de\u6536\u7b2c2\u4e2a\u8282\u70b9 free(q); } } // \u82e5Q\u4e3a\u7a7a\u961f\u5217\uff0c\u5219\u8fd4\u56de-1\uff0c\u5426\u5219\u8fd4\u56de1 int Q_Empty(LinkQueue Q) { if (Q.front->next == NULL) return 1; else return -1; } // \u6c42\u961f\u5217\u7684\u957f\u5ea6 int Q_Length(LinkQueue Q) { int i = 0; QNodePtr p; p = Q.front; //\u904d\u5386\u961f\u5217\u4e2d\u7684\u8282\u70b9\uff0c\u76f4\u5230\u961f\u5c3e\u7b49\u4e8e\u961f\u5934 while (Q.rear != p) { i++; p = p->next; } return i; } // \u6253\u5370\u961f\u5217\u4e2d\u7684\u5185\u5bb9 void Q_Print(LinkQueue Q) { int i = 0; QNodePtr p; p = Q.front; while (Q.rear != p) { i++; cout << p->next->data << endl; p = p->next; } } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5219\u7528e\u8fd4\u56deQ\u7684\u961f\u5934\u5143\u7d20\uff0c\u5e76\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de-1 int Q_GetHead(LinkQueue Q, int &e) { QNodePtr p; if (Q.front == Q.rear) return -1; p = Q.front->next; e = p->data; return 1; } // \u63d2\u5165\u5143\u7d20e\u4e3aQ\u7684\u65b0\u7684\u961f\u5c3e\u5143\u7d20 void Q_Put(LinkQueue *Q, int e) { QNodePtr p = (QNodePtr)malloc(sizeof(QNode)); if (!p) // \u5b58\u50a8\u5206\u914d\u5931\u8d25 exit(OVERFLOW); p->data = e; p->next = NULL; //FIFO\uff0c\u5c06\u65b0\u8282\u70b9\u8ffd\u52a0\u5230\u5c3e\u8282\u70b9\u540e\u9762 Q->rear->next = p; //\u5c06\u65b0\u7684\u8282\u70b9\u53d8\u6210\u5c3e\u8282\u70b9 Q->rear = p; } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5220\u9664Q\u7684\u961f\u5934\u5143\u7d20\uff0c\u7528e\u8fd4\u56de\u5176\u503c\uff0c\u5e76\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de-1 int Q_Poll(LinkQueue *Q,int &e) { QNodePtr p; if (Q->front == Q->rear) return -1; //\u53d6\u51fa\u5934\u8282\u70b9 p = Q->front->next; //\u53d6\u51fa\u5934\u8282\u70b9\u7684\u6570\u636e e = p->data; cout << e << endl; Q->front->next = p->next; if (Q->rear == p) Q->rear = Q->front; free(p); cout << e << endl; return 1; } \u5faa\u73af\u961f\u5217 \u00b6 \u5faa\u73af\u961f\u5217\u53ef\u4ee5\u66f4\u7b80\u5355\u9632\u6b62\u4f2a\u6ea2\u51fa\u7684\u53d1\u751f\uff0c\u4f46\u961f\u5217\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\u3002 // \u961f\u5217\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784(\u5faa\u73af\u961f\u5217) #define MAX_QSIZE 5 // \u6700\u5927\u961f\u5217\u957f\u5ea6+1 typedef struct { int *base; // \u521d\u59cb\u5316\u7684\u52a8\u6001\u5206\u914d\u5b58\u50a8\u7a7a\u95f4 int front; // \u5934\u6307\u9488\uff0c\u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u6307\u5411\u961f\u5217\u5934\u5143\u7d20 int rear; // \u5c3e\u6307\u9488\uff0c\u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u6307\u5411\u961f\u5217\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e } SqQueue; // \u6784\u9020\u4e00\u4e2a\u7a7a\u961f\u5217Q SqQueue* Q_Init() { SqQueue *Q = (SqQueue*)malloc(sizeof(SqQueue)); // \u5b58\u50a8\u5206\u914d\u5931\u8d25 if (!Q){ exit(OVERFLOW); } Q->base = (int *)malloc(MAX_QSIZE * sizeof(int)); // \u5b58\u50a8\u5206\u914d\u5931\u8d25 if (!Q->base){ exit(OVERFLOW); } Q->front = Q->rear = 0; return Q; } // \u9500\u6bc1\u961f\u5217Q\uff0cQ\u4e0d\u518d\u5b58\u5728 void Q_Destroy(SqQueue *Q) { if (Q->base) free(Q->base); Q->base = NULL; Q->front = Q->rear = 0; free(Q); } // \u5c06Q\u6e05\u4e3a\u7a7a\u961f\u5217 void Q_Clear(SqQueue *Q) { Q->front = Q->rear = 0; } // \u82e5\u961f\u5217Q\u4e3a\u7a7a\u961f\u5217\uff0c\u5219\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de-1 int Q_Empty(SqQueue Q) { if (Q.front == Q.rear) // \u961f\u5217\u7a7a\u7684\u6807\u5fd7 return 1; else return -1; } // \u8fd4\u56deQ\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5373\u961f\u5217\u7684\u957f\u5ea6 int Q_Length(SqQueue Q) { return (Q.rear - Q.front + MAX_QSIZE) % MAX_QSIZE; } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5219\u7528e\u8fd4\u56deQ\u7684\u961f\u5934\u5143\u7d20\uff0c\u5e76\u8fd4\u56deOK\uff1b\u5426\u5219\u8fd4\u56deERROR int Q_GetHead(SqQueue Q, int &e) { if (Q.front == Q.rear) // \u961f\u5217\u7a7a return -1; e = Q.base[Q.front]; return 1; } // \u6253\u5370\u961f\u5217\u4e2d\u7684\u5185\u5bb9 void Q_Print(SqQueue Q) { int p = Q.front; while (Q.rear != p) { cout << Q.base[p] << endl; p = (p + 1) % MAX_QSIZE; } } // \u63d2\u5165\u5143\u7d20e\u4e3aQ\u7684\u65b0\u7684\u961f\u5c3e\u5143\u7d20 int Q_Put(SqQueue *Q, int e) { if ((Q->rear + 1) % MAX_QSIZE == Q->front) // \u961f\u5217\u6ee1 return -1; Q->base[Q->rear] = e; Q->rear = (Q->rear + 1) % MAX_QSIZE; return 1; } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5219\u5220\u9664Q\u7684\u961f\u5934\u5143\u7d20\uff0c\u7528e\u8fd4\u56de\u5176\u503c\uff0c\u5e76\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de-1 int Q_Poll(SqQueue *Q, int &e) { if (Q->front == Q->rear) // \u961f\u5217\u7a7a return -1; e = Q->base[Q->front]; Q->front = (Q->front + 1) % MAX_QSIZE; return 1; } \u53cc\u7aef\u961f\u5217 \u00b6 \u53cc\u7aef\u961f\u5217( deque \uff0c\u5168\u540d double-ended queue )\u662f\u4e00\u79cd\u5177\u6709\u961f\u5217\u548c\u6808\u6027\u8d28\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u3002\u53cc\u7aef\u961f\u5217\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u4ece\u4e24\u7aef\u5f39\u51fa\uff0c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u9650\u5b9a\u5728\u961f\u5217\u7684\u4e24\u8fb9\u8fdb\u884c\u3002 \u6808 \u00b6 \u6808( stack )\u53c8\u79f0\u4e3a\u5806\u53e0\uff0c\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u5141\u8bb8\u5728\u6709\u5e8f\u7684\u7ebf\u6027\u6570\u636e\u96c6\u5408\u7684\u4e00\u7aef(\u79f0\u4e3a\u5806\u6808\u9876\u7aef top )\u8fdb\u884c\u52a0\u5165\u6570\u636e( push )\u548c\u79fb\u9664\u6570\u636e( pop )\u7684\u8fd0\u7b97\u3002\u56e0\u800c\u6309\u7167\u540e\u8fdb\u5148\u51fa( LIFO \uff0c Last In First Out )\u7684\u539f\u7406\u8fd0\u4f5c\u3002 \u6808\u5e38\u7528\u4e00\u7ef4\u6570\u7ec4\u6216\u94fe\u8868\u6765\u5b9e\u73b0\u3002 \u7279\u70b9 \u00b6 \u5148\u5165\u540e\u51fa\uff0c\u540e\u5165\u5148\u51fa\u3002 \u9664\u5934\u5c3e\u8282\u70b9\u4e4b\u5916\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u4e00\u4e2a\u524d\u9a71\uff0c\u4e00\u4e2a\u540e\u7ee7\u3002 \u64cd\u4f5c \u00b6 \u6808\u4f7f\u7528\u4e24\u79cd\u57fa\u672c\u64cd\u4f5c\uff1a \u63a8\u5165\uff1a\u5c06\u6570\u636e\u653e\u5165\u5806\u6808\u9876\u7aef\uff0c\u5806\u6808\u9876\u7aef\u79fb\u5230\u65b0\u653e\u5165\u7684\u6570\u636e\u3002 \u5f39\u51fa\uff1a\u5c06\u5806\u6808\u9876\u7aef\u6570\u636e\u79fb\u9664\uff0c\u5806\u6808\u9876\u7aef\u79fb\u5230\u79fb\u9664\u540e\u7684\u4e0b\u4e00\u7b14\u6570\u636e\u3002 \u6570\u7ec4\u6808 \u00b6 #include <stdio.h> #include <stdlib.h> #include <stdbool.h> #define stack struct Stack #define STACK_POP_ERR 42 // \u5806\u758a\u8cc7\u6599\u7d50\u69cb \u5806\u6808\u6570\u636e\u7ed3\u6784 struct Stack { int val[10]; // \u9663\u5217\u7a7a\u9593 int top; // \u5806\u758a\u9802\u7aef\u6307\u6a19\uff08\u6808\u9876\uff09 }; // \u6aa2\u67e5\u5806\u758a\u662f\u5426\u70ba\u7a7a bool empty(stack *stk) { return stk->top == 0; } // \u63a8\u5165\u8cc7\u6599 void push(stack *stk, int x) { stk->top = stk->top + 1; stk->val[stk->top] = x; } // \u5f48\u51fa\u5e76\u8fd4\u56de\u8cc7\u6599 int pop(stack *stk) { if (empty(stk)) return STACK_POP_ERR; // \u4e0d\u80fd\u5f48\u51fa else { stk->top = stk->top - 1; return stk->val[stk->top + 1]; } } int main() { // \u5ba3\u544a\u5e76\u521d\u59cb\u5316\u8cc7\u6599\u7d50\u69cb\u7a7a\u9593 stack stk; stk.top = 0; // \u63a8\u5165\u56db\u4e2a push(&stk, 3); push(&stk, 4); push(&stk, 1); push(&stk, 9); // \u5f39\u51fa\u4e09\u4e2a printf(\"%d \", pop(&stk)); printf(\"%d \", pop(&stk)); printf(\"%d \", pop(&stk)); return 0; } \u94fe\u5f0f\u6808 \u00b6 #include <stdio.h> #include <conio.h> #include <stdlib.h> #define elemType int /* \u94fe\u6808\u5143\u7d20\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u6574\u578b\u4e3a\u4f8b */ #define SNODE_SIZE sizeof (struct sNode) /* \u94fe\u6808\u7ed3\u70b9\u7a7a\u95f4\u5927\u5c0f */ #define status int /* \u72b6\u6001\u578b\u53d8\u91cf */ #define OVERFLOW -1 /* \u5185\u5b58\u6ea2\u51fa\u72b6\u6001\u7801 */ #define ERROR 0 /* \u9519\u8bef\u72b6\u6001\u7801 */ #define OK 1 /* \u6b63\u786e\u72b6\u6001\u7801 */ /* \u94fe\u6808\u7ed3\u70b9\u5b58\u50a8\u7ed3\u6784 */ typedef struct sNode { elemType data; struct sNode *next; } sNode, *sNodePtr; /* \u94fe\u6808\u5b58\u50a8\u7ed3\u6784 */ typedef struct linkStack { sNodePtr top; /* \u6808\u9876\u6307\u9488 */ } linkStack; /* \u521d\u59cb\u5316 */ /* \u64cd\u4f5c\u7ed3\u679c\uff1a\u6784\u9020\u4e00\u4e2a\u5e26\u5934\u7ed3\u70b9\u7684\u7a7a\u94fe\u6808S */ void initStack (linkStack *S) { S->top = (sNodePtr) malloc (SNODE_SIZE); /* \u4ea7\u751f\u5934\u7ed3\u70b9\uff0c\u6808\u9876\u6307\u9488\u6307\u5411\u6b64\u5934\u7ed3\u70b9 */ if (!S->top) /* \u5185\u5b58\u5206\u914d\u5931\u8d25 */ exit (OVERFLOW); S->top->next = NULL; } /* \u9500\u6bc1 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u9500\u6bc1\u94fe\u6808S */ void destroyStack (linkStack *S) { sNodePtr p, q; p = S->top; /* p\u6307\u5411S\u7684\u5934\u7ed3\u70b9 */ while (p) { q = p->next; /* q\u6307\u5411p\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ free (p); /* \u56de\u6536p\u6307\u5411\u7684\u7ed3\u70b9 */ p = q; /* p\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ } /* \u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ } /* \u6e05\u7a7a */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u5c06S\u91cd\u7f6e\u4e3a\u7a7a\u6808 */ void clearStack (linkStack *S) { sNodePtr p, q; p = S->top->next; /* p\u6307\u5411\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ while (p) { q = p->next; /* q\u6307\u5411p\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ free (p); /* \u56de\u6536p\u6307\u5411\u7684\u7ed3\u70b9 */ p = q; /* p\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ } /* \u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ S->top->next = NULL; } /* \u5224\u65ad\u94fe\u6808\u662f\u5426\u4e3a\u7a7a */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u82e5S\u4e3a\u7a7a\u94fe\u6808\uff0c\u5219\u8fd4\u56deTRUE\uff0c\u5426\u5219\u8fd4\u56deFALSE */ status stackIsEmpty (linkStack *S) { return S->top->next == NULL; } /* \u6c42\u94fe\u6808\u957f\u5ea6 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u8fd4\u56deS\u4e2d\u6570\u636e\u5143\u7d20\u4e2a\u6570 */ int stackLength (linkStack *S) { int i = 0; sNodePtr p; p = S->top->next; /* p\u6307\u5411\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ while (p) { /* \u672a\u5230\u6808\u5c3e */ i++; p = p->next; } return i; } /* \u83b7\u53d6\u6808\u9876\u5143\u7d20 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u5f53\u6808\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5c06\u6808\u9876\u5143\u7d20\u5176\u503c\u8d4b\u7ed9e\u5e76\u8fd4\u56deOK\uff0c\u5426\u5219\u8fd4\u56deERROR */ status getTopElem (linkStack *S, elemType *e) { sNodePtr p; if (stackIsEmpty (S)) return ERROR; p = S->top->next; /* p\u6307\u5411\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ *e = p->data; return OK; } /* \u5165\u6808 */ /* \u64cd\u4f5c\u7ed3\u679c\uff1a\u5728S\u7684\u6808\u9876\u63d2\u5165\u65b0\u7684\u5143\u7d20e */ status push (linkStack *S, elemType e) { sNodePtr p; p = (sNodePtr) malloc (SNODE_SIZE); /* \u4ea7\u751f\u65b0\u7ed3\u70b9 */ if (!p) /* \u5185\u5b58\u5206\u914d\u5931\u8d25 */ exit (OVERFLOW); p->data = e; p->next = S->top->next; /* \u5c06\u65b0\u7ed3\u70b9\u94fe\u63a5\u5230\u539f\u6808\u9876 */ S->top->next = p; /* \u6808\u9876\u6307\u5411\u65b0\u7ed3\u70b9 */ } /* \u51fa\u6808 */ /* \u64cd\u4f5c\u7ed3\u679c\uff1a\u5220\u9664S\u7684\u6808\u9876\u5143\u7d20\uff0c\u5e76\u7531e\u8fd4\u56de\u5176\u503c */ status pop (linkStack *S, elemType *e) { sNodePtr p; if (stackIsEmpty (S)) return ERROR; p = S->top->next; /* p\u6307\u5411\u94fe\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ *e = p->data; /* \u53d6\u51fa\u6570\u636e */ S->top->next = p->next; free (p); /* \u5220\u9664\u8be5\u7ed3\u70b9 */ if (S->top == p) /* \u6808\u4e3a\u7a7a */ S->top->next = NULL; return OK; } /* \u6253\u5370\u6808\u5185\u5bb9 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u5f53\u6808\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u6253\u5370\u6808\u5185\u5bb9\u5e76\u8fd4\u56deOK\uff0c\u5426\u5219\u8fd4\u56deERROR */ status printStack (linkStack *S) { sNodePtr p; if (stackIsEmpty (S)) return ERROR; p = S->top->next; while (p) { printf (\"%d\\t\", p->data); p = p->next; } putchar ('\\n'); return OK; } \u5e94\u7528 \u00b6 \u56de\u6eaf \u9012\u5f52 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u6811 \u00b6 \u5b9a\u4e49 \u00b6 \u6811( tree )\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u6216\u662f\u5b9e\u73b0\u8fd9\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u6a21\u62df\u5177\u6709\u6811\u72b6\u7ed3\u6784\u6027\u8d28\u7684\u6570\u636e\u96c6\u5408\u3002\u5b83\u662f\u7531 n ( n>0 )\u4e2a\u6709\u9650\u8282\u70b9\u7ec4\u6210\u4e00\u4e2a\u5177\u6709\u5c42\u6b21\u5173\u7cfb\u7684\u96c6\u5408\u3002\u5b83\u5177\u6709\u4ee5\u4e0b\u7684\u7279\u70b9\uff1a \u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u6709\u6709\u9650\u4e2a\u5b50\u8282\u70b9\u6216\u65e0\u5b50\u8282\u70b9\uff1b \u6ca1\u6709\u7236\u8282\u70b9\u7684\u8282\u70b9\u79f0\u4e3a\u6839\u8282\u70b9\uff1b \u6bcf\u4e00\u4e2a\u975e\u6839\u8282\u70b9\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff1b \u9664\u4e86\u6839\u8282\u70b9\u5916\uff0c\u6bcf\u4e2a\u5b50\u8282\u70b9\u53ef\u4ee5\u5206\u4e3a\u591a\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u6811\uff1b \u6811\u91cc\u9762\u6ca1\u6709\u73af\u8def( cycle )\u3002 \u672f\u8bed \u00b6 \u8282\u70b9\u7684\u5ea6 \uff1a\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5ea6\uff1b \u6811\u7684\u5ea6 \uff1a\u4e00\u68f5\u6811\u4e2d\uff0c\u6700\u5927\u7684\u8282\u70b9\u5ea6\u79f0\u4e3a\u6811\u7684\u5ea6\uff1b \u53f6\u8282\u70b9 \u6216 \u7ec8\u7aef\u8282\u70b9 \uff1a\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\uff1b \u975e\u7ec8\u7aef\u8282\u70b9 \u6216 \u5206\u652f\u8282\u70b9 \uff1a\u5ea6\u4e0d\u4e3a\u96f6\u7684\u8282\u70b9\uff1b \u7236\u4eb2\u8282\u70b9\u6216 \u7236\u8282\u70b9 \uff1a\u82e5\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u5b50\u8282\u70b9\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u79f0\u4e3a\u5176\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\uff1b \u5b69\u5b50\u8282\u70b9\u6216 \u5b50\u8282\u70b9 \uff1a\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff1b \u5144\u5f1f\u8282\u70b9 \uff1a\u5177\u6709\u76f8\u540c\u7236\u8282\u70b9\u7684\u8282\u70b9\u4e92\u79f0\u4e3a\u5144\u5f1f\u8282\u70b9\uff1b \u8282\u70b9\u7684 \u5c42 \u6b21\uff1a\u4ece\u6839\u5f00\u59cb\u5b9a\u4e49\u8d77\uff0c\u6839\u4e3a\u7b2c 1 \u5c42\uff0c\u6839\u7684\u5b50\u8282\u70b9\u4e3a\u7b2c 2 \u5c42\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff1b \u6df1\u5ea6 \uff1a\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 n \uff0c n \u7684\u6df1\u5ea6\u4e3a\u4ece\u6839\u5230 n \u7684\u552f\u4e00\u8def\u5f84\u957f\uff0c\u6839\u7684\u6df1\u5ea6\u4e3a 0 \uff1b \u9ad8\u5ea6 \uff1a\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 n \uff0c n \u7684\u9ad8\u5ea6\u4e3a\u4ece n \u5230\u4e00\u7247\u6811\u53f6\u7684\u6700\u957f\u8def\u5f84\u957f\uff0c\u6240\u6709\u6811\u53f6\u7684\u9ad8\u5ea6\u4e3a 0 \uff1b \u5802\u5144\u5f1f\u8282\u70b9 \uff1a\u7236\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7684\u8282\u70b9\u4e92\u4e3a\u5802\u5144\u5f1f\uff1b \u8282\u70b9\u7684\u7956\u5148 \uff1a\u4ece\u6839\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u5206\u652f\u4e0a\u7684\u6240\u6709\u8282\u70b9\uff1b \u5b50\u5b59 \uff1a\u4ee5\u67d0\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4efb\u4e00\u8282\u70b9\u90fd\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u3002 \u68ee\u6797 \uff1a\u7531 m ( m>=0 )\u68f5\u4e92\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408\u79f0\u4e3a\u68ee\u6797\uff1b \u5206\u7c7b \u00b6 \u65e0\u5e8f\u6811\uff1a\u6811\u4e2d\u4efb\u610f\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e4b\u95f4\u6ca1\u6709\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd9\u79cd\u6811\u79f0\u4e3a\u65e0\u5e8f\u6811\uff0c\u4e5f\u79f0\u4e3a \u81ea\u7531\u6811 \uff1b \u6709\u5e8f\u6811\uff1a\u6811\u4e2d\u4efb\u610f\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e4b\u95f4\u6709\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd9\u79cd\u6811\u79f0\u4e3a\u6709\u5e8f\u6811\uff1b \u4e8c\u53c9\u6811 \uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u542b\u6709\u4e24\u4e2a\u5b50\u6811\u7684\u6811\u79f0\u4e3a\u4e8c\u53c9\u6811\uff1b \u5b8c\u5168\u4e8c\u53c9\u6811 \uff1a\u5bf9\u4e8e\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5047\u8bbe\u5176\u6df1\u5ea6\u4e3a d ( d>1 )\u3002\u9664\u4e86\u7b2c d \u5c42\u5916\uff0c\u5176\u5b83\u5404\u5c42\u7684\u8282\u70b9\u6570\u76ee\u5747\u5df2\u8fbe\u6700\u5927\u503c\uff0c\u4e14\u7b2c d \u5c42\u6240\u6709\u8282\u70b9\u4ece\u5de6\u5411\u53f3\u8fde\u7eed\u5730\u7d27\u5bc6\u6392\u5217\uff0c\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u88ab\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\uff1b \u6ee1\u4e8c\u53c9\u6811 \uff1a\u6240\u6709\u53f6\u8282\u70b9\u90fd\u5728\u6700\u5e95\u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff1b \u5e73\u8861\u4e8c\u53c9\u6811 ( AVL \u6811)\uff1a\u5f53\u4e14\u4ec5\u5f53\u4efb\u4f55\u8282\u70b9\u7684\u4e24\u68f5\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u5927\u4e8e 1 \u7684\u4e8c\u53c9\u6811\uff1b \u6392\u5e8f\u4e8c\u53c9\u6811 ( \u4e8c\u53c9\u67e5\u627e\u6811 Binary Search Tree )\uff1a\u4e5f\u79f0\u4e8c\u53c9\u641c\u7d22\u6811\u3001\u6709\u5e8f\u4e8c\u53c9\u6811\uff1b \u970d\u592b\u66fc\u6811 \uff1a\u5e26\u6743\u8def\u5f84\u6700\u77ed\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u54c8\u592b\u66fc\u6811\u6216\u6700\u4f18\u4e8c\u53c9\u6811\uff1b B \u6811\uff1a\u4e00\u79cd\u5bf9\u8bfb\u5199\u64cd\u4f5c\u8fdb\u884c\u4f18\u5316\u7684\u81ea\u5e73\u8861\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u80fd\u591f\u4fdd\u6301\u6570\u636e\u6709\u5e8f\uff0c\u62e5\u6709\u591a\u4e8e\u4e24\u4e2a\u5b50\u6811\u3002 \u6027\u8d28 \u00b6 \u5728\u4e8c\u53c9\u6811\u7684\u7b2c i \u5c42\u4e0a\u6700\u591a\u6709 \\(2^{i-1}(i>=1)\\) \u4e2a\u8282\u70b9 \u3002 \u4e8c\u53c9\u6811\u4e2d\u5982\u679c\u6df1\u5ea6\u4e3a k \uff0c\u90a3\u4e48\u6700\u591a\u6709 \\(2^k-1(k>=1)\\) \u4e2a\u8282\u70b9\u3002 \u5bf9\u4efb\u4f55\u975e\u7a7a\u4e8c\u53c9\u6811 \uff0c\u82e5 n0 \u8868\u793a\u5ea6\u6570\u4e3a 0 \u7684\u8282\u70b9 n2 \u8868\u793a\u5ea6\u6570\u4e3a 2 \u7684\u8282\u70b9,\u90a3\u4e48 n0=n2+1 \u3002 \u5177\u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a log2 n + 1 \u5b58\u50a8 \u00b6 \u53cc\u4eb2\u8868\u793a\u6cd5 \u00b6 \u5047\u8bbe\u4ee5\u4e00\u7ec4\u8fde\u7eed\u7684\u7a7a\u95f4\u5b58\u50a8\u6811\u7684\u8282\u70b9\uff0c\u540c\u65f6\u5728\u6bcf\u4e2a\u8282\u70b9\u4e2d\u9644\u8bbe\u4e00\u4e2a\u6307\u793a\u5668\u6307\u793a\u5176\u53cc\u4eb2\u8282\u70b9\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002\u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u5229\u7528\u4e86\u6bcf\u4e00\u4e2a\u8282\u70b9(\u9664\u6839\u8282\u70b9\u5916)\u90fd\u53ea\u6709\u4e00\u4e2a\u53cc\u4eb2\u7684\u6027\u8d28\u3002 \u5b69\u5b50\u8868\u793a\u6cd5 \u00b6 \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6240\u6709\u8282\u70b9\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u5b58\u50a8\u8be5\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u3002 \u5b69\u5b50\u5144\u5f1f\u8868\u793a\u6cd5 \u00b6 \u5bf9\u4e8e\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u5de6\u5b69\u5b50\u662f\u8be5\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\uff0c\u53f3\u5b69\u5b50\u662f\u4e0b\u4e00\u4e2a\u5144\u5f1f\u8282\u70b9\u3002 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8 \u00b6 \u4f7f\u7528\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\uff0c\u5bf9\u5b8c\u5168\u4e8c\u53c9\u6811\u8fd9\u79cd\u7ed3\u6784\u662f\u975e\u5e38\u5408\u9002\u7684\u3002 \u53ef\u4ee5\u6309\u7167\u4ece\u4e0a\u4e4b\u4e0b\uff0c\u4ece\u5de6\u81f3\u53f3\u987a\u5e8f\u5b58\u50a8 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684 \u7ed3\u70b9\u7236\u5b50\u5173\u7cfb \u3002 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\uff0c\u6709\u4ee5\u4e0b\u7279\u70b9 \u975e\u6839\u8282\u70b9(\u5e8f\u53f7 i>1 )\u7684\u7236\u8282\u70b9\u5e8f\u53f7\u6570\u7ec4\u4e0b\u6807\u662f int(i/2) \u7ed3\u70b9(\u5e8f\u53f7\u4e3a i )\u7684\u5de6\u5b69\u5b50\u7ed3\u70b9\u7684\u5e8f\u53f7\u662f 2i \uff0c\u5982\u679c 2i>n \uff0c\u5219\u6ca1\u6709\u5de6\u5b69\u5b50 \u7ed3\u70b9(\u5e8f\u53f7\u4e3a i )\u7684\u53f3\u5b69\u5b50\u7ed3\u70b9\u7684\u5e8f\u53f7\u662f 2i+1 \uff0c\u5982\u679c 2i+1>n \uff0c\u5219\u6ca1\u6709\u53f3\u5b69\u5b50 \u4e00\u822c\u666e\u901a\u7684\u4e8c\u53c9\u6811\uff0c\u5728\u5176\u7a7a\u4f59\u4f4d\u7f6e\u8865\u5145\u63a7\u5236\uff0c\u5f53\u505a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u91c7\u7528\u6570\u7ec4\u7ed3\u6784\u5b58\u50a8\uff0c\u4f46\u4f1a\u5bfc\u81f4\u5b58\u50a8\u7a7a\u95f4\u7684\u6d6a\u8d39\u3002 \u904d\u5386 \u00b6 \u6811\u7684\u904d\u5386\u65b9\u5f0f\u5927\u81f4\u5206\u522b\u4e24\u79cd\uff0c\u6df1\u5ea6\u4f18\u5148\u904d\u5386( DFS )\u548c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386( BFS )\u3002 \u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\u5c5e\u4e8e DFS \uff0c\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u4f46\u4e5f\u5e94\u8be5\u4e86\u89e3\u975e\u9012\u5f52\u7684\u7248\u672c\uff1b\u5c42\u5e8f\u904d\u5386\u5c5e\u4e8e BFS \u3002 \u524d\u5e8f\u904d\u5386 \u00b6 \u82e5\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff1b\u5426\u5219 \u5148\u8bbf\u95ee\u6839\u8282\u70b9 \u524d\u5e8f\u904d\u5386\u5de6\u5b50\u6811 \u524d\u5e8f\u904d\u5386\u53f3\u5b50\u6811 \u4e2d\u5e8f\u904d\u5386 \u00b6 \u82e5\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff1b\u5426\u5219 \u4e2d\u5e8f\u904d\u5386\u5de6\u5b50\u6811 \u8bbf\u95ee\u6839\u8282\u70b9 \u4e2d\u5e8f\u904d\u5386\u53f3\u5b50\u6811 \u540e\u5e8f\u904d\u5386 \u00b6 \u82e5\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff1b\u5426\u5219 \u540e\u5e8f\u904d\u5386\u5de6\u5b50\u6811 \u540e\u5e8f\u904d\u5386\u53f3\u5b50\u6811 \u8bbf\u95ee\u6839\u8282\u70b9 \u5c42\u5e8f\u904d\u5386 \u00b6 \u6309\u7167\u987a\u5e8f\u8f93\u51fa\u6811\u7684\u6bcf\u4e00\u5c42\u8282\u70b9\u3002 \u7ebf\u7d22\u4e8c\u53c9\u6811 \u00b6 \u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a \u975e\u7ebf\u6027\u7684\u4e8c\u53c9\u6811\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8f6c\u5316\u4e3a \u7ebf\u6027\u7ed3\u6784 \uff1a\u6240\u6709\u539f\u672c\u4e3a\u7a7a\u7684\u53f3\u5b69\u5b50\u6307\u9488\u6539\u4e3a\u6307\u5411\u8be5\u8282\u70b9\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u7684\u540e\u7ee7\uff0c\u6240\u6709\u539f\u672c\u4e3a\u7a7a\u7684\u5de6\u5b69\u5b50\u6307\u9488\u6539\u4e3a\u6307\u5411\u8be5\u8282\u70b9\u7684\u4e2d\u5e8f\u5e8f\u5217\u7684\u524d\u9a71\u3002 \u7ebf\u7d22\u4e8c\u53c9\u6811\u80fd\u7ebf\u6027\u5730\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u4ece\u800c\u6bd4\u9012\u5f52\u7684\u4e2d\u5e8f\u904d\u5386\u66f4\u5feb \u3002 \u4f7f\u7528\u7ebf\u7d22\u4e8c\u53c9\u6811\u4e5f\u80fd\u591f\u65b9\u4fbf\u7684\u627e\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u8fd9\u6bd4\u663e\u5f0f\u5730\u4f7f\u7528\u7236\u4eb2\u8282\u70b9\u6307\u9488\u6216\u8005\u6808\u6548\u7387\u66f4\u9ad8 \u3002\u8fd9\u5728\u6808\u7a7a\u95f4\u6709\u9650\uff0c\u6216\u8005\u65e0\u6cd5\u4f7f\u7528\u5b58\u50a8\u7236\u8282\u70b9\u7684\u6808\u65f6\u5f88\u6709\u4f5c\u7528(\u5bf9\u4e8e\u901a\u8fc7\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6765\u67e5\u627e\u7236\u8282\u70b9\u800c\u8a00)\u3002 \u8003\u8651\u8fd9\u6837\u7684\u4f8b\u5b50\uff1a\u4e00\u4e2a\u8282\u70b9 k \u6709\u4e00\u4e2a\u53f3\u5b69\u5b50 r \uff0c\u90a3\u4e48 r \u7684\u5de6\u6307\u9488\u53ef\u80fd\u662f\u6307\u5411\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\uff0c\u6216\u662f\u4e00\u4e2a\u6307\u56de k \u7684\u7ebf\u7d22\u3002\u5982\u679c r \u6709\u5de6\u5b69\u5b50\uff0c\u8fd9\u4e2a\u5de6\u5b69\u5b50\u540c\u6837\u4e5f\u5e94\u8be5\u6709\u4e00\u4e2a\u5de6\u5b69\u5b50\u6216\u662f\u6307\u56de k \u7684\u7ebf\u7d22\u3002\u5bf9\u4e8e\u6240\u6709\u7684\u5de6\u5b69\u5b50\u540c\u7406\u3002\u56e0\u6b64\u6cbf\u7740\u8fd9\u4e9b\u4ece r \u53d1\u51fa\u7684\u5de6\u6307\u9488\uff0c\u6700\u7ec8\u4f1a\u627e\u5230\u4e00\u4e2a\u6307\u56de k \u7684\u7ebf\u7d22\u3002\u8fd9\u79cd\u7279\u6027\u662f\u5bf9\u79f0\u7684\uff1a\u5f53 q \u662f p \u7684\u5de6\u5b69\u5b50\u65f6\uff0c\u53ef\u4ee5\u6cbf\u7740 q \u7684\u53f3\u5b69\u5b50\u627e\u5230\u4e00\u4e2a\u6307\u56de p \u7684\u7ebf\u7d22\u3002 \u4f20\u7edf\u7684\u4e8c\u53c9\u6811\u4e00\u822c\u90fd\u662f\u4ee5\u94fe\u5f0f\u5b58\u50a8\u7684\u7ed3\u6784\u6765\u8868\u793a\u3002\u8fd9\u6837\uff0c\u4e8c\u53c9\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u7528\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u94fe\u8282\u70b9\u6765\u5b58\u50a8\uff0c\u6bcf\u4e2a\u94fe\u8282\u70b9\u5c31\u5305\u542b\u4e86\u82e5\u5e72\u4e2a\u6307\u9488\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u4f20\u7edf\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u53ea\u80fd\u8868\u73b0\u51fa\u4e8c\u53c9\u6811\u4e2d\u8282\u70b9\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u800c\u4e14\u4e0d\u80fd\u5229\u7528\u7a7a\u4f59\u7684\u6307\u9488\u6765\u76f4\u63a5\u5f97\u5230\u67d0\u4e2a\u8282\u70b9\u7684\u5728\u7279\u5b9a\u7684\u904d\u5386\u987a\u5e8f(\u5148\u5e8f\uff0c\u4e2d\u5e8f\uff0c\u540e\u5e8f)\u4e2d\u7684\u76f4\u63a5\u524d\u9a71\u548c\u76f4\u63a5\u540e\u7ee7\u3002\u901a\u8fc7\u5206\u6790\u4f20\u7edf\u7684\u4e8c\u53c9\u6811\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u8868\u793a\u7684\u4e8c\u53c9\u6811\u4e2d\uff0c\u5b58\u5728\u5927\u91cf\u7684\u7a7a\u95f2\u6307\u9488\u3002\u82e5\u80fd\u5229\u7528\u8fd9\u4e9b\u7a7a\u6307\u9488\u57df\u6765\u5b58\u653e\u6307\u5411\u8be5\u8282\u70b9\u7684\u76f4\u63a5\u524d\u9a71\u6216\u662f\u76f4\u63a5\u540e\u7ee7\u7684\u6307\u9488\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c\u67d0\u4e9b\u66f4\u65b9\u4fbf\u7684\u8fd0\u7b97\u3002\u8fd9\u4e9b\u88ab\u91cd\u65b0\u5229\u7528\u8d77\u6765\u7684\u7a7a\u6307\u9488\u5c31\u88ab\u79f0\u4e3a\u7ebf\u7d22\uff0c\u52a0\u4e0a\u4e86\u8fd9\u4e9b\u7ebf\u7d22\u7684\u4e8c\u53c9\u6811\u5c31\u662f\u7ebf\u7d22\u4e8c\u53c9\u6811\u3002 \u5bf9\u4e8c\u53c9\u6811\u4ee5\u67d0\u79cd\u904d\u5386\u987a\u5e8f\u8fdb\u884c\u626b\u63cf\u5e76\u4e3a\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u79f0\u4e3a\u4e8c\u53c9\u6811\u7684\u7ebf\u7d22\u5316\uff0c\u8fdb\u884c\u7ebf\u7d22\u5316\u7684\u76ee\u7684\u662f\u52a0\u5feb\u67e5\u627e\u4e8c\u53c9\u6811\u4e2d\u67d0\u8282\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6 \u3002 \u90a3\u4e48\u5728\u6709 N \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u4e2d\u9700\u8981\u5229\u7528 N+1 \u4e2a\u7a7a\u6307\u9488\u6dfb\u52a0\u7ebf\u7d22\u3002\u8fd9\u662f\u56e0\u4e3a\u5728 N \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709 2 \u4e2a\u6307\u9488\uff0c\u6240\u4ee5\u4e00\u5171\u6709 2N \u4e2a\u6307\u9488\uff0c\u9664\u4e86\u6839\u8282\u70b9\u4ee5\u5916\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u6307\u9488\u4ece\u5b83\u7684\u7236\u8282\u70b9\u6307\u5411\u5b83\uff0c\u6240\u4ee5\u4e00\u5171\u4f7f\u7528\u4e86 N-1 \u4e2a\u6307\u9488\u3002\u6240\u4ee5\u5269\u4e0b 2N-(N-1) = N+1 \u4e2a\u7a7a\u6307\u9488\u3002 Huffman \u6811 \u00b6 \u970d\u592b\u66fc\u6811\u53c8\u79f0\u6700 \u4f18\u4e8c\u53c9\u6811 \uff0c\u662f\u4e00\u79cd\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u4e8c\u53c9\u6811\u3002\u6240\u8c13\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\uff0c\u5c31\u662f\u6811\u4e2d\u6240\u6709\u7684\u53f6\u7ed3\u70b9\u7684\u6743\u503c\u4e58\u4e0a\u5176\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6(\u82e5\u6839\u7ed3\u70b9\u4e3a 0 \u5c42\uff0c\u53f6\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a\u53f6\u7ed3\u70b9\u7684\u5c42\u6570)\u3002\u6811\u7684\u8def\u5f84\u957f\u5ea6\u662f\u4ece\u6811\u6839\u5230\u6bcf\u4e00\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\uff0c\u8bb0\u4e3a WPL=(W1*L1+W2*L2+W3*L3+...+Wn*Ln) \uff0c N \u4e2a\u6743\u503c Wi(i=1,2,...,n) \u6784\u6210\u4e00\u68f5\u6709 N \u4e2a\u53f6\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u76f8\u5e94\u7684\u53f6\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a Li(i=1,2,...,n) \u3002\u53ef\u4ee5\u8bc1\u660e\u970d\u592b\u66fc\u6811\u7684 WPL \u662f\u6700\u5c0f\u7684\u3002 Huffman \u7b97\u6cd5 \u5047\u8bbe\u6709 n \u4e2a\u6743\u503c\uff0c\u5219\u6784\u9020\u51fa\u7684\u54c8\u592b\u66fc\u6811\u6709 n \u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002 n \u4e2a\u6743\u503c\u5206\u522b\u8bbe\u4e3a w1,w2,\u2026,wn \uff0c\u5219\u54c8\u592b\u66fc\u6811\u7684\u6784\u9020\u89c4\u5219\u4e3a\uff1a I. \u5c06 w1,w2,\u2026\uff0cwn \u770b\u6210\u662f\u6709 n \u68f5\u6811\u7684\u68ee\u6797(\u6bcf\u68f5\u6811\u4ec5\u6709\u4e00\u4e2a\u7ed3\u70b9)\uff1b II. \u5728\u68ee\u6797\u4e2d\u9009\u51fa\u4e24\u4e2a\u6839\u7ed3\u70b9\u7684\u6743\u503c\u6700\u5c0f\u7684\u6811\u5408\u5e76\uff0c\u4f5c\u4e3a\u4e00\u68f5\u65b0\u6811\u7684\u5de6\u3001\u53f3\u5b50\u6811\uff0c\u4e14\u65b0\u6811\u7684\u6839\u7ed3\u70b9\u6743\u503c\u4e3a\u5176\u5de6\u3001\u53f3\u5b50\u6811\u6839\u7ed3\u70b9\u6743\u503c\u4e4b\u548c\uff1b III. \u4ece\u68ee\u6797\u4e2d\u5220\u9664\u9009\u53d6\u7684\u4e24\u68f5\u6811\uff0c\u5e76\u5c06\u65b0\u6811\u52a0\u5165\u68ee\u6797\uff1b IV. \u91cd\u590d\u6b65\u9aa4 I,II \uff0c\u76f4\u5230\u68ee\u6797\u4e2d\u53ea\u5269\u4e0b\u4e00\u68f5\u6811\u4e3a\u6b62\uff0c\u8be5\u6811\u5373\u4e3a\u6240\u6c42\u7684\u54c8\u592b\u66fc\u6811 \u56fe \u00b6 \u5b9a\u4e49 \u00b6 \u56fe\u662f\u7531\u9876\u70b9\u548c\u8fb9\u7ec4\u6210\u7684\uff0c\u53ef\u4ee5\u65e0\u8fb9\uff0c\u4f46\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u9876\u70b9\u3002 \\[ G = (V,E) \\] V \u4ee3\u8868\u56fe\u4e2d\u8282\u70b9\u7684\u96c6\u5408\uff0c E \u4ee3\u8868\u56fe\u4e2d\u8fb9\u6216\u662f\u5173\u7cfb\u7684\u96c6\u5408\u3002 \u7a20\u5bc6\u56fe \uff1a\u56fe\u4e2d E \u7684\u6761\u6570\u63a5\u8fd1 \\(V^2\\) \u4e5f\u5c31\u662f\uff0c\u63a5\u8fd1\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u76f8\u8fde\u3002 \u7a00\u758f\u56fe \uff1a\u56fe\u4e2d E \u7684\u6761\u6570\u8fdc\u5c0f\u4e8e \\(V^2\\) \u3002 \u5206\u7c7b \u00b6 \u56fe\u53ef\u4ee5\u5206\u4e3a \u6709\u5411\u56fe \u548c \u65e0\u5411\u56fe \uff0c\u5728\u56fe\u4e2d\uff1a (v, w) \u8868\u793a\u65e0\u5411\u8fb9\uff0c\u5373 v \u548c w \u662f\u4e92\u901a\u7684 <v, w> \u8868\u793a\u6709\u5411\u8fb9\uff0c\u8be5\u8fb9\u59cb\u4e8e v \uff0c\u7ec8\u4e8e w \u56fe\u53ef\u4ee5\u5206\u4e3a \u6709\u6743\u56fe \u548c \u65e0\u6743\u56fe \uff1a \u6709\u6743\u56fe\uff1a\u6bcf\u6761\u8fb9\u5177\u6709\u4e00\u5b9a\u7684\u6743\u91cd (weight) \uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u6570\u5b57 \u65e0\u6743\u56fe\uff1a\u6bcf\u6761\u8fb9\u5747\u6ca1\u6709\u6743\u91cd\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6743\u91cd\u90fd\u76f8\u540c \u56fe\u53c8\u53ef\u4ee5\u5206\u4e3a \u8fde\u901a\u56fe \u548c \u975e\u8fde\u901a\u56fe \uff1a \u8fde\u901a\u56fe\uff1a\u6240\u6709\u7684\u70b9\u90fd\u6709\u8def\u5f84\u76f8\u8fde \u975e\u8fde\u901a\u56fe\uff1a\u5b58\u5728\u67d0\u4e24\u4e2a\u70b9\u6ca1\u6709\u8def\u5f84\u76f8\u8fde \u672f\u8bed \u00b6 \u56fe\u4e2d\u7684\u9876\u70b9\u6709\u5ea6\u7684\u6982\u5ff5\uff1a \u5ea6( Degree )\uff1a\u6240\u6709\u4e0e\u5b83\u8fde\u63a5\u70b9\u7684\u4e2a\u6570\u4e4b\u548c \u5165\u5ea6( Indegree )\uff1a\u5b58\u5728\u4e8e\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u63a5\u5165\u8be5\u70b9\u7684\u8fb9\u6570\u4e4b\u548c \u51fa\u5ea6( Outdegree )\uff1a\u5b58\u5728\u4e8e\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u63a5\u51fa\u8be5\u70b9\u7684\u8fb9\u6570\u4e4b\u548c \u8868\u793a \u00b6 \u90bb\u63a5\u77e9\u9635 \u00b6 \u4f7f\u7528\u4e00\u4e2a V\u00d7V \u7684\u4e8c\u4f4d\u6570\u7ec4 ve \u8868\u793a\u77e9\u9635\uff0c\u5047\u8bbe i \u8282\u70b9\u4e8e j \u8282\u70b9\u8fde\u901a\uff0c\u90a3\u4e48 ve[i][j]=1 \u3002 \u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u8868\u793a\u6709\u5411\u56fe\uff0c\u548c\u6709\u6743\u91cd\u56fe\uff1a ve[j][i]=3 \u8868\u793a j -> i \u6743\u91cd\u4e3a 3 \u3002 \u5728 n \u4e2a\u9876\u70b9\u7684\u56fe\u9700\u8981\u6709\u4e00\u4e2a n \u00d7 n \u5927\u5c0f\u7684\u77e9\u9635 \u5728\u4e00\u4e2a\u65e0\u6743\u56fe\u4e2d\uff0c\u77e9\u9635\u5750\u6807\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u503c\u4e3a 1 \u4ee3\u8868\u4e24\u4e2a\u70b9\u662f\u76f8\u8fde\u7684\uff0c 0 \u8868\u793a\u4e24\u70b9\u662f\u4e0d\u76f8\u8fde\u7684 \u5728\u4e00\u4e2a\u6709\u6743\u56fe\u4e2d\uff0c\u77e9\u9635\u5750\u6807\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u503c\u4ee3\u8868\u8be5\u4e24\u70b9\u4e4b\u95f4\u7684\u6743\u91cd\uff0c 0 \u8868\u793a\u8be5\u4e24\u70b9\u4e0d\u76f8\u8fde \u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u90bb\u63a5\u77e9\u9635\u5173\u4e8e\u5bf9\u89d2\u7ebf\u76f8\u7b49 \u4f18\u70b9 \u5bf9\u4e8e\u7a20\u5bc6\u56fe\u80fd\u591f\u6709\u6548\u7684\u8282\u7701\u7a7a\u95f4\u3002 \u8868\u793a\u4e0a\u5f88\u76f4\u89c2\uff0c\u5bb9\u6613\u5224\u65ad\u51fa\u90a3\u4e24\u70b9\u4e4b\u95f4\u76f8\u8fde\u3002 \u7f3a\u70b9 \u5728\u77e9\u9635\u751f\u6210\u65f6\uff0c\u8282\u70b9\u4e2a\u6570\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0c\u53ea\u80fd\u6dfb\u52a0\u8fb9\uff0c\u4e0d\u80fd\u518d\u6dfb\u52a0\u8282\u70b9\u3002 \u5982\u679c\u8981\u6dfb\u52a0\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u91cd\u65b0\u5206\u914d\u77e9\u9635\uff0c\u4ee3\u4ef7\u5927\u3002 \u5bf9\u4e8e\u7a00\u758f\u56fe\uff0c\u6d6a\u8d39\u7a7a\u95f4\u3002 \u5728\u67d0\u4e9b\u7b97\u6cd5\u7684\u65f6\u5019\u9700\u8981\u4e3a\u8282\u70b9\u4fdd\u5b58\u989d\u5916\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528\u989d\u5916\u7684\u5bb9\u5668 \u90bb\u63a5\u94fe\u8868 \u00b6 \u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u8868\u793a\u6bcf\u4e2a\u8282\u70b9\uff1a struct Node { int ket; Node to; //..\u5176\u4ed6\u4fe1\u606f } \u5176\u4e2d to \u53d8\u91cf\u6307\u5411\u94fe\u63a5\u8be5\u8282\u70b9 i \u6307\u5411\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9 j \uff0c\u7136\u540e j \u8282\u70b9\u4e2d\u7684 to \u6307\u5411 i \u8282\u70b9\u6307\u5411\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u90bb\u63a5\u77e9\u9635\u8868\u793a\u7684\u65b9\u6cd5\u7075\u6d3b\u65b9\u4fbf\uff0c\u80fd\u591f\u4e34\u65f6\u6dfb\u52a0\u8282\u70b9\u548c\u8fb9\u3002 \u8868\u793a\u6709\u5411\u56fe\uff0c\u6709\u6743\u91cd\u56fe\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u7b97\u6cd5\uff0c\u6dfb\u52a0\u4e0d\u540c\u7684\u53d8\u91cf\u3002\u4f46\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u4f53\u79ef\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5b58\u50a8\u7740\u4e00\u4e2a\u94fe\u8868\uff0c\u7528\u6765\u6307\u5411\u6240\u6709\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u70b9 \u5bf9\u4e8e\u6709\u6743\u56fe\u6765\u8bf4\uff0c\u94fe\u8868\u4e2d\u5143\u7d20\u503c\u5bf9\u5e94\u7740\u6743\u91cd \u7f3a\u70b9 \u7a20\u5bc6\u56fe\u4e2d\u6d6a\u8d39\u7a7a\u95f4 \u4e0d\u76f4\u89c2\uff0c\u5728\u6709\u5411\u56fe\u4e2d\u5982\u679c\u8981\u540c\u65f6\u8868\u793a\u6307\u5411\u672c\u8282\u70b9\u7684\u8282\u70b9\uff0c\u548c\u672c\u8282\u70b9\u6307\u5411\u7684\u8282\u70b9\uff0c\u9700\u8981\u989d\u5916\u7684\u4e00\u4e2a\u5b57\u6bb5\u3002 \u793a\u610f\u56fe \u00b6 \u65e0\u5411\u65e0\u6743\u56fe \u00b6 \u65e0\u5411\u6709\u6743\u56fe \u00b6 \u6709\u5411\u6709\u6743\u56fe \u00b6 \u5bf9\u6bd4 \u00b6 \u90bb\u63a5\u77e9\u9635\u7531\u4e8e\u6ca1\u6709\u76f8\u8fde\u7684\u8fb9\u4e5f\u5360\u6709\u7a7a\u95f4\uff0c\u56e0\u6b64\u5b58\u5728\u6d6a\u8d39\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u800c\u90bb\u63a5\u94fe\u8868\u5219\u6bd4\u8f83\u5408\u7406\u5730\u5229\u7528\u7a7a\u95f4 \u90bb\u63a5\u94fe\u8868\u6bd4\u8f83\u8017\u65f6\uff0c\u727a\u7272\u5f88\u5927\u7684\u65f6\u95f4\u6765\u67e5\u627e\uff0c\u56e0\u6b64\u6bd4\u8f83\u8017\u65f6\uff0c\u800c\u90bb\u63a5\u77e9\u9635\u6cd5\u76f8\u6bd4\u90bb\u63a5\u94fe\u8868\u6cd5\u6765\u8bf4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\u3002 \u904d\u5386 \u00b6 \u6df1\u5ea6\u4f18\u5148\u904d\u5386( Depth First Search \uff0c DFS ) \u00b6 \u57fa\u672c\u601d\u8def \u00b6 \u4ece\u56fe\u4e2d\u67d0\u9876\u70b9 v \u51fa\u53d1 \u8bbf\u95ee\u9876\u70b9 v \u4ece v \u7684\u672a\u88ab\u8bbf\u95ee\u7684\u90bb\u63a5\u70b9\u4e2d\u9009\u53d6\u4e00\u4e2a\u9876\u70b9 w \uff0c\u4ece w \u51fa\u53d1\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386 \u91cd\u590d\u4e0a\u8ff0\u4e24\u6b65\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u548c v \u6709\u8def\u5f84\u76f8\u901a\u7684\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u5230 \u4f2a\u4ee3\u7801 \u00b6 //\u7c7b\u4f3c\u4e8e\u6811\u7684\u5148\u5e8f\u904d\u5386 public void DFS(Vertex V) { visited[V] = true; for(W : each adjacent potin of V) { if(!visited[W]) { DFS(W); } } } \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22( Breadth First Search \uff0c BFS ) \u00b6 BFS \u9700\u8981\u4e00\u4e2a\u961f\u5217\u4ee5\u4fdd\u6301\u904d\u5386\u8fc7\u7684\u9876\u70b9\u987a\u5e8f\uff0c\u4ee5\u4fbf\u6309\u51fa\u961f\u7684\u987a\u5e8f\u518d\u53bb\u8bbf\u95ee\u8fd9\u4e9b\u9876\u70b9\u7684\u90bb\u63a5\u9876\u70b9\u3002 \u5b9e\u73b0\u601d\u8def \u00b6 \u9876\u70b9 v \u5165\u961f\u5217 \u5f53\u961f\u5217\u975e\u7a7a\u65f6\u5219\u7ee7\u7eed\u6267\u884c\uff0c\u5426\u5219\u7b97\u6cd5\u7ed3\u675f \u51fa\u961f\u5217\u53d6\u5f97\u961f\u5934\u9876\u70b9 v \uff1b\u8bbf\u95ee\u9876\u70b9 v \u5e76\u6807\u8bb0\u9876\u70b9 v \u5df2\u88ab\u8bbf\u95ee \u67e5\u627e\u9876\u70b9 v \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u9876\u70b9 col \u82e5 v \u7684\u90bb\u63a5\u9876\u70b9 col \u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\uff0c\u5219 col \u7ee7\u7eed \u67e5\u627e\u9876\u70b9 v \u7684\u53e6\u4e00\u4e2a\u65b0\u7684\u90bb\u63a5\u9876\u70b9 col \uff0c\u8f6c\u5230\u6b65\u9aa4 5 \u5165\u961f\u5217\uff0c\u76f4\u5230\u9876\u70b9 v \u7684\u6240\u6709\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u70b9\u5904\u7406\u5b8c\u3002\u8f6c\u5230\u6b65\u9aa4 2 \u62d3\u6251\u6392\u5e8f \u00b6 \u662f\u4ec0\u4e48 \u00b6 \u56fe\u4e2d\u8282\u70b9\u89c6\u4e3a\u4e8b\u4ef6\uff0c\u62d3\u6251\u6392\u5e8f\u7684\u76ee\u7684\u662f\u4f9d\u636e\u56fe\u4e2d\u4e8b\u4ef6\u53d1\u751f\u7684\u5148\u540e\u987a\u5e8f\u7ed9\u51fa\u4e00\u4e2a\u53ef\u80fd\u7684\u6392\u5e8f\u3002 \u56fe\u80fd\u591f\u8fdb\u884c\u56fe\u8c31\u6392\u5e8f\u7684\u524d\u63d0\uff1a \u6709\u5411\u56fe\uff1a\u6709\u5411\u56fe\u624d\u80fd\u8868\u793a\u4e24\u4ef6\u4e8b\u60c5\u4e4b\u95f4\u53d1\u751f\u7684\u5148\u540e\u5173\u7cfb\u3002 \u65e0\u73af\uff1a\u4e5f\u5c31\u662f\u4e0d\u5b58\u5728\u73af\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u90a3\u4e48\u4e8b\u4ef6\u53d1\u751f\u7684\u5148\u540e\u5173\u7cfb\u5c06\u4e0d\u786e\u5b9a\u3002 \u5168\u5e8f\u548c\u504f\u5e8f \u00b6 \u5168\u5e8f\u6307\u7684\u662f\u4e00\u4e2a\u96c6\u5408\u4e2d \u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u80fd\u591f\u6bd4\u8f83 \uff0c\u4e5f\u5c31\u662f\u8bf4\u80fd\u591f\u6392\u5e8f\u3002 \u504f\u5e8f\u6307\u7684\u662f\uff0c\u96c6\u5408\u4e2d\u5b58\u5728\u4e0d\u80fd\u6bd4\u8f83\u7684\u5143\u7d20(\u8fd9\u91cc\u7684\u4e0d\u80fd\u662f\u6307\u7684\u67d0\u4e00\u5bf9\u4e4b\u95f4\u4e0d\u80fd\uff0c\u800c\u4e0d\u662f\u8be5\u5143\u7d20\u548c\u5176\u4ed6\u5143\u7d20\u4e0d\u80fd\u6bd4\u8f83)\u6bd4\u5982\u8bf4\uff0c\u5feb\u6392\u662f\u4e00\u79cd\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\uff0c\u56e0\u4e3a\u4e24\u4e2a\u503c\u76f8\u540c\u7684\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u3002\u800c\u9009\u62e9\u6392\u5e8f\u9664\u4e86\u6bd4\u8f83\u6307\u7684\u5927\u5c0f\u4ee5\u5916\uff0c\u8fd8\u6bd4\u8f83\u4e86\u4e24\u4e2a\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u3002 \u6700\u5c0f\u751f\u6210\u6811( Minimum Spanning Trees , MST ) \u00b6 \u63d0\u51fa\u95ee\u9898 \u00b6 \u8981\u5728 n \u4e2a\u57ce\u5e02\u4e4b\u95f4\u94fa\u8bbe\u5149\u7f06\uff0c\u4e3b\u8981\u76ee\u6807\u662f\u8981\u4f7f\u8fd9 n \u4e2a\u57ce\u5e02\u7684\u4efb\u610f\u4e24\u4e2a\u4e4b\u95f4\u90fd\u53ef\u4ee5\u901a\u4fe1\uff0c\u4f46\u94fa\u8bbe\u5149\u7f06\u7684\u8d39\u7528\u5f88\u9ad8\uff0c\u4e14\u5404\u4e2a\u57ce\u5e02\u4e4b\u95f4\u94fa\u8bbe\u5149\u7f06\u7684\u8d39\u7528\u4e0d\u540c\uff0c\u56e0\u6b64\u53e6\u4e00\u4e2a\u76ee\u6807\u662f\u8981\u4f7f\u94fa\u8bbe\u5149\u7f06\u7684\u603b\u8d39\u7528\u6700\u4f4e\u3002\u8fd9\u5c31\u9700\u8981\u627e\u5230\u5e26\u6743\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002 \u7279\u70b9 \u00b6 \u8be5\u6811\u662f\u8fde\u901a\u7684 \u6743\u503c\u4e4b\u548c\u6700\u5c0f \u8fb9\u6570\u6bd4\u9876\u70b9\u4e2a\u6570\u5c11 1 \u5b58\u5728\u4e2a\u6570 \u00b6 \u6700\u5c0f\u751f\u6210\u6811\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u3002 \u5f53\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u6743\u503c\u90fd\u76f8\u540c\u65f6\uff0c\u8be5\u56fe\u7684\u6240\u6709\u751f\u6210\u6811\u90fd\u662f\u6700\u5c0f\u751f\u6210\u6811 \u5982\u679c\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u6743\u503c\u90fd\u4e92\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6700\u5c0f\u751f\u6210\u6811\u5c06\u53ea\u6709\u4e00\u4e2a \u751f\u6210\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u4e00\u822c\u6709\u4e24\u79cd\uff0c\u5206\u522b\u662f Prim \u7b97\u6cd5\u548c Kruskal \u7b97\u6cd5 Prim \u7b97\u6cd5 \u00b6 \u7b97\u6cd5\u6b65\u9aa4 \u8f93\u5165\uff1a\u4e00\u4e2a\u52a0\u6743\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u9876\u70b9\u96c6\u5408\u4e3a V \uff0c\u8fb9\u96c6\u5408\u4e3a E \uff1b \u521d\u59cb\u5316\uff1a \\(V_{new}= \\{x\\}\\) \uff0c\u5176\u4e2d x \u4e3a\u96c6\u5408 V \u4e2d\u7684\u4efb\u4e00\u8282\u70b9(\u8d77\u59cb\u70b9)\uff0c \\(Enew = \\{\\}\\) (\u4e3a\u7a7a)\uff1b \u5728\u96c6\u5408 E \u4e2d\u9009\u53d6\u6743\u503c\u6700\u5c0f\u7684\u8fb9 <u, v> \uff0c\u5176\u4e2d u \u4e3a\u96c6\u5408 \\(V_{new}\\) \u4e2d\u7684\u5143\u7d20\uff0c\u800c v \u4e0d\u5728 \\(V_{new}\\) \u96c6\u5408\u5f53\u4e2d\uff0c\u5e76\u4e14 \\(v\u2208V\\) (\u5982\u679c\u5b58\u5728\u6709\u591a\u6761\u6ee1\u8db3\u524d\u8ff0\u6761\u4ef6\u5373\u5177\u6709\u76f8\u540c\u6743\u503c\u7684\u8fb9\uff0c\u5219\u53ef\u4efb\u610f\u9009\u53d6\u5176\u4e2d\u4e4b\u4e00)\uff1b \u5c06 v \u52a0\u5165\u96c6\u5408 \\(V_{new}\\) \u4e2d\uff0c\u5c06 <u, v> \u8fb9\u52a0\u5165\u96c6\u5408 \\(E_{new}\\) \u4e2d\uff1b \u91cd\u590d\u6b65\u9aa4 3 \u3001 4 \u76f4\u5230 \\(V_{new} = V\\) \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(V^2)\\) Kruskal \u7b97\u6cd5 \u00b6 \u9700\u8981\u4e00\u4e2a\u96c6\u5408\u7528\u6765\u5347\u5e8f\u5b58\u50a8\u6240\u6709\u8fb9\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u5148\u6784\u9020\u4e00\u4e2a\u53ea\u542b\u6709 n \u4e2a\u9876\u70b9\uff0c\u800c\u8fb9\u96c6\u4e3a\u7a7a\u7684\u5b50\u56fe\uff1b \u4ece\u8fb9\u96c6 E \u4e2d\u9009\u53d6\u4e00\u6761\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u82e5\u8be5\u6761\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5206\u5c5e\u4e0d\u540c\u7684\u6811\uff0c\u5219\u5c06\u5176\u52a0\u5165\u5b50\u56fe\u3002(\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u8fd9\u4e24\u4e2a\u9876\u70b9\u5206\u522b\u6240\u5728\u7684\u4e24\u68f5\u6811\u5408\u6210\u4e00\u68f5\u6811)\u53cd\u4e4b\uff0c\u82e5\u8be5\u6761\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5df2\u843d\u5728\u540c\u4e00\u68f5\u6811\u4e0a\uff0c\u5219\u4e0d\u53ef\u53d6\uff0c\u800c\u5e94\u8be5\u53d6\u4e0b\u4e00\u6761\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u518d\u8bd5\u4e4b\uff1b \u91cd\u590d\u6b65\u9aa4 2 \uff0c\u76f4\u5230\u6240\u6709\u70b9\u8fde\u901a\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(Elog_2V)\\) \u6700\u77ed\u8def\u5f84\u95ee\u9898 \u00b6 Dijkstra \u7b97\u6cd5 \u00b6 \u662f\u4ec0\u4e48 \u00b6 Dijkstra \u7b97\u6cd5\u662f\u5178\u578b\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u4e3b\u8981\u7279\u70b9\u662f\u4ee5\u8d77\u59cb\u70b9\u4e3a\u4e2d\u5fc3\u5411\u5916\u5c42\u5c42\u6269\u5c55\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7ec8\u70b9\u4e3a\u6b62\u3002 Dijkstra \u7b97\u6cd5\u8981\u6c42\u56fe\u4e2d\u4e0d\u5b58\u5728\u8d1f\u6743\u8fb9\u3002 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u5728\u65e0\u5411\u56fe G=(V,E) \u4e2d\uff0c\u5047\u8bbe\u6bcf\u6761\u8fb9 E[i] \u7684\u957f\u5ea6\u4e3a w[i] \uff0c\u627e\u5230\u7531\u9876\u70b9 V0 \u5230\u5176\u4f59\u5404\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002 \u7b97\u6cd5\u601d\u60f3 \u00b6 \u8bbe G=(V,E) \u662f\u4e00\u4e2a\u5e26\u6743\u6709\u5411\u56fe\uff0c\u628a\u56fe\u4e2d\u9876\u70b9\u96c6\u5408 V \u5206\u6210\u4e24\u7ec4\uff0c\u7b2c\u4e00\u7ec4\u4e3a\u5df2\u6c42\u51fa\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u96c6\u5408(\u7528 S \u8868\u793a\uff0c\u521d\u59cb\u65f6 S \u4e2d\u53ea\u6709\u4e00\u4e2a\u6e90\u70b9\uff0c\u4ee5\u540e\u6bcf\u6c42\u5f97\u4e00\u6761\u6700\u77ed\u8def\u5f84 , \u5c31\u5c06\u52a0\u5165\u5230\u96c6\u5408 S \u4e2d\uff0c\u76f4\u5230\u5168\u90e8\u9876\u70b9\u90fd\u52a0\u5165\u5230 S \u4e2d\uff0c\u7b97\u6cd5\u5c31\u7ed3\u675f\u4e86)\uff0c\u7b2c\u4e8c\u7ec4\u4e3a\u5176\u4f59\u672a\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u96c6\u5408(\u7528 U \u8868\u793a)\uff0c\u6309\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u7684\u9012\u589e\u6b21\u5e8f\u4f9d\u6b21\u628a\u7b2c\u4e8c\u7ec4\u7684\u9876\u70b9\u52a0\u5165 S \u4e2d\u3002\u5728\u52a0\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0c\u603b\u4fdd\u6301\u4ece\u6e90\u70b9 v \u5230 S \u4e2d\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e0d\u5927\u4e8e\u4ece\u6e90\u70b9 v \u5230 U \u4e2d\u4efb\u4f55\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u4e2a\u8ddd\u79bb\uff0c S \u4e2d\u7684\u9876\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u4ece v \u5230\u6b64\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c U \u4e2d\u7684\u9876\u70b9\u7684\u8ddd\u79bb\uff0c\u662f\u4ece v \u5230\u6b64\u9876\u70b9\u53ea\u5305\u62ec S \u4e2d\u7684\u9876\u70b9\u4e3a\u4e2d\u95f4\u9876\u70b9\u7684\u5f53\u524d\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 I. \u521d\u59cb\u65f6\uff0c S \u53ea\u5305\u542b\u6e90\u70b9\uff0c\u5373 S\uff1d{v} \uff0c v \u7684\u8ddd\u79bb\u4e3a 0 \u3002 U \u5305\u542b\u9664 v \u5916\u7684\u5176\u4ed6\u9876\u70b9\uff0c\u5373\uff1a U=V-{v} \uff0c\u82e5 v \u4e0e U \u4e2d\u9876\u70b9 u \u6709\u8fb9\uff0c\u5219 <u,v> \u6b63\u5e38\u6709\u6743\u503c\uff0c\u82e5 u \u4e0d\u662f v \u7684\u51fa\u8fb9\u90bb\u63a5\u70b9\uff0c\u5219 <u,v> \u6743\u503c\u4e3a \u221e \u3002 II. \u4ece U \u4e2d\u9009\u53d6\u4e00\u4e2a\u8ddd\u79bb v \u6700\u5c0f\u7684\u9876\u70b9 k \uff0c\u628a k \u52a0\u5165 S \u4e2d(\u8be5\u9009\u5b9a\u7684\u8ddd\u79bb\u5c31\u662f v \u5230 k \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6)\u3002 III. \u4ee5 k \u4e3a\u65b0\u8003\u8651\u7684\u4e2d\u95f4\u70b9\uff0c\u4fee\u6539 U \u4e2d\u5404\u9876\u70b9\u7684\u8ddd\u79bb\uff1b\u82e5\u4ece\u6e90\u70b9 v \u5230\u9876\u70b9 u \u7684\u8ddd\u79bb(\u7ecf\u8fc7\u9876\u70b9 k )\u6bd4\u539f\u6765\u8ddd\u79bb(\u4e0d\u7ecf\u8fc7\u9876\u70b9 k )\u77ed\uff0c\u5219\u4fee\u6539\u9876\u70b9 u \u7684\u8ddd\u79bb\u503c\uff0c\u4fee\u6539\u540e\u7684\u8ddd\u79bb\u503c\u7684\u9876\u70b9 k \u7684\u8ddd\u79bb\u52a0\u4e0a\u8fb9\u4e0a\u7684\u6743\u3002 IV. \u91cd\u590d\u6b65\u9aa4 II \u548c III \u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u5305\u542b\u5728 S \u4e2d\u3002 \u793a\u610f\u56fe\u5982\u4e0b\u3002 \u4f2a\u4ee3\u7801 \u00b6 function Dijkstra(G, w, s) for each vertex v in V[G] // \u521d\u59cb\u5316 d[v] := infinity // \u5c06\u5404\u70b9\u7684\u5df2\u77e5\u6700\u77ed\u8ddd\u79bb\u5148\u8bbe\u6210\u65e0\u7a77\u5927 previous[v] := undefined // \u5404\u70b9\u7684\u5df2\u77e5\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u524d\u8d8b\u90fd\u672a\u77e5 d[s] := 0 // \u56e0\u4e3a\u51fa\u53d1\u70b9\u5230\u51fa\u53d1\u70b9\u95f4\u4e0d\u9700\u79fb\u52a8\u4efb\u4f55\u8ddd\u79bb\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5c06s\u5230s\u7684\u6700\u5c0f\u8ddd\u79bb\u8bbe\u4e3a0 S := empty set Q := set of all vertices while Q is not an empty set // Dijkstra\u7b97\u6cd5\u4e3b\u4f53 u := Extract_Min(Q) S.append(u) for each edge outgoing from u as (u,v) if d[v] > d[u] + w(u,v) // \u62d3\u5c55\u8fb9\uff08u,v\uff09\u3002w(u,v)\u4e3a\u4eceu\u5230v\u7684\u8def\u5f84\u957f\u5ea6\u3002 d[v] := d[u] + w(u,v) // \u66f4\u65b0\u8def\u5f84\u957f\u5ea6\u5230\u66f4\u5c0f\u7684\u90a3\u4e2a\u548c\u503c\u3002 previous[v] := u // \u7eaa\u5f55\u524d\u8d8b\u9876\u70b9 Floyd \u7b97\u6cd5 \u00b6 \u662f\u4ec0\u4e48 \u00b6 Floyd-Warshall \u7b97\u6cd5\u662f\u89e3\u51b3\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u5f84\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u6709\u5411\u56fe\u6216\u8d1f\u6743\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u540c\u65f6\u4e5f\u88ab\u7528\u4e8e\u8ba1\u7b97\u6709\u5411\u56fe\u7684\u4f20\u9012\u95ed\u5305\u3002 Floyd-Warshall \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^3)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^2)\\) \u3002 \u7b97\u6cd5\u601d\u60f3 \u00b6 Floyd \u7b97\u6cd5\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9996\u5148\u6211\u4eec\u7684\u76ee\u6807\u662f\u5bfb\u627e\u4ece\u70b9 i \u5230\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u3002\u4ece\u52a8\u6001\u89c4\u5212\u7684\u89d2\u5ea6\u770b\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u76ee\u6807\u91cd\u65b0\u505a\u4e00\u4e2a\u8be0\u91ca\u3002 \u4ece\u4efb\u610f\u8282\u70b9 i \u5230\u4efb\u610f\u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u4e0d\u5916\u4e4e 2 \u79cd\u53ef\u80fd\uff0c\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ece i \u5230 j\uff0c\u7b2c\u4e8c\u79cd\u662f\u4ece i \u7ecf\u8fc7\u82e5\u5e72\u4e2a\u8282\u70b9 k \u5230 j \u3002\u6240\u4ee5\uff0c\u5047\u8bbe distance(i,j) \u4e3a\u8282\u70b9 u \u5230\u8282\u70b9 v \u7684\u6700\u77ed\u8def\u5f84\u7684\u8ddd\u79bb\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 k \uff0c\u68c0\u67e5 distance(i,k) + distance(k,j) < distance(i,j) \u662f\u5426\u6210\u7acb\uff0c\u5982\u679c\u6210\u7acb\uff0c\u8bc1\u660e\u4ece i \u5230 k \u518d\u5230 j \u7684\u8def\u5f84\u6bd4 i \u76f4\u63a5\u5230 j \u7684\u8def\u5f84\u77ed\uff0c\u5c31\u8bbe\u7f6e distance(i,j) = distance(i,k) + distance(k,j) \uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5f53\u904d\u5386\u5b8c\u6240\u6709\u8282\u70b9 k \uff0c distance(i,j) \u4e2d\u8bb0\u5f55\u7684\u4fbf\u662f i \u5230 j \u7684\u6700\u77ed\u8def\u5f84\u7684\u8ddd\u79bb\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 I. \u4ece\u4efb\u610f\u4e00\u6761\u5355\u8fb9\u8def\u5f84\u5f00\u59cb\u3002\u6240\u6709\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u8fb9\u7684\u6743\uff0c\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fb9\u76f8\u8fde\uff0c\u5219\u6743\u4e3a\u65e0\u7a77\u5927\u3002 II. \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u9876\u70b9 u \u548c v \uff0c\u770b\u770b\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u9876\u70b9 w \u4f7f\u5f97\u4ece u \u5230 w \u518d\u5230 v \u6bd4\u5df1\u77e5\u7684\u8def\u5f84\u66f4\u77ed\u3002\u5982\u679c\u662f\u66f4\u65b0\u5b83\u3002 \u4f2a\u4ee3\u7801 \u00b6 let dist be a |V| \u00d7 |V| array of minimum distances initialized to \u221e (infinity) for each vertex v dist[v][v] \u2190 0 for each edge (u,v) dist[u][v] \u2190 w(u,v) // the weight of the edge (u,v) for k from 1 to |V| for i from 1 to |V| for j from 1 to |V| if dist[i][j] > dist[i][k] + dist[k][j] dist[i][j] \u2190 dist[i][k] + dist[k][j] end if \u53c2\u8003\u8d44\u6599 \u00b6 \u6570\u636e\u7ed3\u6784 - Wikipedia","title":"Data Structure"},{"location":"cs/ds/#_1","text":"","title":"\u6570\u636e\u7ed3\u6784"},{"location":"cs/ds/#_2","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"cs/ds/#_3","text":"\u5bf9\u5ba2\u89c2\u4e8b\u7269\u7684\u7b26\u53f7\u8868\u793a\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u662f\u6307\uff0c\u6240\u6709\u80fd\u8f93\u5165\u8ba1\u7b97\u673a\u4e2d\u5e76\u88ab\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5904\u7406\u7684\u7b26\u53f7\u7684\u603b\u79f0\u3002","title":"\u6570\u636e"},{"location":"cs/ds/#_4","text":"\u6570\u636e\u7684\u57fa\u672c\u5143\u7d20\uff0c\u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e2d\u90a3\u4e2a\u901a\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u8003\u8651\u548c\u7814\u7a76\u3002\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u53ef\u4ee5\u7531\u82e5\u5e72\u4e2a \u6570\u636e\u9879 \u7ec4\u6210\u3002","title":"\u6570\u636e\u5143\u7d20"},{"location":"cs/ds/#_5","text":"\u6027\u8d28\u76f8\u540c\u7684\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408\uff0c\u662f\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6\u3002","title":"\u6570\u636e\u5bf9\u8c61"},{"location":"cs/ds/#_6","text":"\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u6570\u636e\u7ed3\u6784 (Data Structure) \u662f \u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u3001\u7ec4\u7ec7\u6570\u636e\u7684\u65b9\u5f0f \u3002 \u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff1a \\[ DataStructure = (D,S) \\] D \u662f\u6570\u636e\u5143\u7d20\u7684\u6709\u9650\u96c6\uff0cS \u662f D \u4e0a\u7684\u6709\u9650\u96c6\u3002 \u6570\u636e\u7ed3\u6784\u610f\u5473\u7740\u63a5\u53e3\u6216\u5c01\u88c5\uff1a\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u53ef\u88ab\u89c6\u4e3a\u4e24\u4e2a\u51fd\u6570\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u6216\u8005\u662f\u7531\u6570\u636e\u7c7b\u578b\u8054\u5408\u7ec4\u6210\u7684\u5b58\u50a8\u5185\u5bb9\u7684\u8bbf\u95ee\u65b9\u6cd5\u5c01\u88c5\u3002 \u7cfb\u7edf\u67b6\u6784\u7684\u5173\u952e\u56e0\u7d20\u662f\u6570\u636e\u7ed3\u6784\u800c\u975e\u7b97\u6cd5\u7684\u89c1\u89e3\uff0c\u5bfc\u81f4\u4e86\u591a\u79cd\u5f62\u5f0f\u5316\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7f16\u7a0b\u8bed\u8a00\u7684\u51fa\u73b0\u3002\u7edd\u5927\u591a\u6570\u7684\u8bed\u8a00\u90fd\u5e26\u6709\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u6a21\u5757\u5316\u601d\u60f3\uff0c\u900f\u8fc7\u5c06\u6570\u636e\u7ed3\u6784\u7684\u5177\u4f53\u5b9e\u73b0\u5c01\u88c5\u9690\u85cf\u4e8e\u7528\u6237\u754c\u9762\u4e4b\u540e\u7684\u65b9\u6cd5\uff0c\u6765\u8ba9\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u5b89\u5168\u5730\u91cd\u7528\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u3002C++\u3001Java\u3001Python \u7b49\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u4f7f\u7528\u7c7b\u6765\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002","title":"\u6570\u636e\u7ed3\u6784"},{"location":"cs/ds/#_7","text":"\u6570\u636e\u5bf9\u8c61\u4e2d\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002\u5b58\u5728\u4ee5\u4e0b\u51e0\u7c7b\u3002 \u96c6\u5408 \u9664\u4e86 \u540c\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408 \u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u5173\u7cfb \u7ebf\u6027\u7ed3\u6784 \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb \u6811\u5f62\u7ed3\u6784 \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u591a\u4e2a\u7684\u5173\u7cfb \u56fe\u7ed3\u6784 \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5173\u7cfb","title":"\u903b\u8f91\u7ed3\u6784"},{"location":"cs/ds/#_8","text":"\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u5f62\u5f0f\u3002 \u987a\u5e8f\u5b58\u50a8\u7ed3\u6784 \u662f\u628a\u6570\u636e\u5143\u7d20\u5b58\u653e\u5728\u5730\u5740\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u91cc\uff0c\u5176\u6570\u636e\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u548c\u7269\u7406\u5173\u7cfb\u662f\u4e00\u81f4\u7684\u3002 \u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 \u628a\u6570\u636e\u5143\u7d20\u5b58\u653e\u5728\u4efb\u610f\u7684\u5b58\u50a8\u5355\u5143\u91cc\uff0c\u8fd9\u7ec4\u5b58\u50a8\u5355\u5143\u53ef\u4ee5\u662f\u8fde\u7eed\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8fde\u7eed\u7684\u3002\u6570\u636e\u5143\u7d20\u7684\u5b58\u50a8\u5173\u7cfb\u5e76\u4e0d\u80fd\u53cd\u6620\u5176\u903b\u8f91\u5173\u7cfb\uff0c\u56e0\u6b64\u9700\u8981\u7528\u4e00\u4e2a\u6307\u9488\u5b58\u653e\u6570\u636e\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd9\u6837\u901a\u8fc7\u5730\u5740\u5c31\u53ef\u4ee5\u627e\u5230\u76f8\u5173\u8054\u6570\u636e\u7684\u4f4d\u7f6e\u3002","title":"\u7269\u7406\u7ed3\u6784 (\u4e5f\u79f0\u5b58\u50a8\u7ed3\u6784)"},{"location":"cs/ds/#_9","text":"\u62bd\u8c61\u6570\u636e\u7c7b\u578b (Abstract Data Type\uff0cADT) \u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5177\u6709\u7c7b\u4f3c\u884c\u4e3a\u7684\u7279\u5b9a\u7c7b\u522b\u7684\u6570\u636e\u7ed3\u6784\u7684\u6570\u5b66\u6a21\u578b\uff1b\u6216\u8005\u5177\u6709\u7c7b\u4f3c\u8bed\u4e49\u7684\u4e00\u79cd\u6216\u591a\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6570\u636e\u7c7b\u578b\u3002\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u662f\u95f4\u63a5\u5b9a\u4e49\u7684\uff0c\u901a\u8fc7\u5176\u4e0a\u7684\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53ca\u8fd9\u4e9b\u64cd\u4f5c\u7684\u6548\u679c\u7684\u6570\u5b66\u7ea6\u675f\u3002 \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u662f\u7eaf\u7cb9\u7406\u8bba\u5b9e\u4f53\uff0c\u7528\u4e8e\u7b80\u5316\u63cf\u8ff0\u62bd\u8c61\u7b97\u6cd5\uff0c\u5206\u7c7b\u4e0e\u8bc4\u4ef7\u6570\u636e\u7ed3\u6784\uff0c\u5f62\u5f0f\u63cf\u8ff0\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u7c7b\u578b\u7cfb\u7edf\u3002\u4e00\u4e2a ADT \u53ef\u4ee5\u7528\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u6216\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff0c\u5728\u8bb8\u591a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u6709\u8bb8\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1b\u6216\u8005\u7528\u5f62\u5f0f\u89c4\u8303\u8bed\u8a00\u63cf\u8ff0\u3002 \u5f62\u5f0f\u4e0a\uff0cADT \u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e09\u5143\u7ec4\u6765\u63cf\u8ff0\uff1a \\[ ADT = (D,S,P) \\] D \u662f\u6570\u636e\u5bf9\u8c61\uff0cS \u662f D \u4e0a\u7684\u5173\u7cfb\u96c6\uff0cP \u662f\u5bf9 D \u7684\u57fa\u672c\u64cd\u4f5c\u96c6\u3002","title":"\u62bd\u8c61\u6570\u636e\u7c7b\u578b"},{"location":"cs/ds/#_10","text":"\u4ee5\u4e0b\u662f\u9ad8\u5fb7\u7eb3\u5728\u4ed6\u7684\u8457\u4f5c\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u827a\u672f\u300b\u91cc\u5bf9\u7b97\u6cd5\u7684\u7279\u5f81\u5f52\u7eb3\uff1a \u8f93\u5165 \u4e00\u4e2a\u7b97\u6cd5\u5fc5\u987b\u6709\u96f6\u4e2a\u6216\u4ee5\u4e0a\u8f93\u5165\u91cf\u3002 \u8f93\u51fa \u4e00\u4e2a\u7b97\u6cd5\u5e94\u6709\u4e00\u4e2a\u6216\u4ee5\u4e0a\u8f93\u51fa\u91cf\uff0c\u8f93\u51fa\u91cf\u662f\u7b97\u6cd5\u8ba1\u7b97\u7684\u7ed3\u679c\u3002 \u660e\u786e\u6027 \u7b97\u6cd5\u7684\u63cf\u8ff0\u5fc5\u987b\u65e0\u6b67\u4e49\uff0c\u4ee5\u4fdd\u8bc1\u7b97\u6cd5\u7684\u5b9e\u9645\u6267\u884c\u7ed3\u679c\u662f\u7cbe\u786e\u5730\u7b26\u5408\u8981\u6c42\u6216\u671f\u671b\uff0c\u901a\u5e38\u8981\u6c42\u5b9e\u9645\u8fd0\u884c\u7ed3\u679c\u662f\u786e\u5b9a\u7684\u3002 \u6709\u9650\u6027 \u4f9d\u636e\u56fe\u7075\u7684\u5b9a\u4e49\uff0c\u4e00\u4e2a\u7b97\u6cd5\u662f\u80fd\u591f\u88ab\u4efb\u4f55\u56fe\u7075\u5b8c\u5168\u7cfb\u7edf\u6a21\u62df\u7684\u4e00\u4e32\u8fd0\u7b97\uff0c\u800c\u56fe\u7075\u673a\u53ea\u6709\u6709\u9650\u4e2a\u72b6\u6001\u3001\u6709\u9650\u4e2a\u8f93\u5165\u7b26\u53f7\u548c\u6709\u9650\u4e2a\u8f6c\u79fb\u51fd\u6570(\u6307\u4ee4)\u3002\u800c\u4e00\u4e9b\u5b9a\u4e49\u66f4\u89c4\u5b9a\u7b97\u6cd5\u5fc5\u987b\u5728\u6709\u9650\u4e2a\u6b65\u9aa4\u5185\u5b8c\u6210\u4efb\u52a1\u3002 \u6709\u6548\u6027 \u53c8\u79f0\u53ef\u884c\u6027\u3002\u80fd\u591f\u5b9e\u73b0\uff0c\u7b97\u6cd5\u4e2d\u63cf\u8ff0\u7684\u64cd\u4f5c\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7\u5df2\u7ecf\u5b9e\u73b0\u7684\u57fa\u672c\u8fd0\u7b97\u6267\u884c\u6709\u9650\u6b21\u6765\u5b9e\u73b0\u3002","title":"\u7b97\u6cd5"},{"location":"cs/ds/#_11","text":"","title":"\u7ebf\u6027\u8868"},{"location":"cs/ds/#_12","text":"\u5728\u6570\u636e\u5143\u7d20\u7684 \u975e\u7a7a\u6709\u9650\u96c6 \u4e2d\uff0c \u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u88ab\u79f0\u4e3a \u7b2c\u4e00\u4e2a \u7684\u5143\u7d20 \u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u88ab\u79f0\u4e3a \u6700\u540e\u4e00\u4e2a \u7684\u5143\u7d20 \u9664\u7b2c\u4e00\u4e2a\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u5143\u7d20\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u4e2a \u524d\u8d8b \u9664\u6700\u540e\u4e00\u4e2a\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u5143\u7d20\u6709\u4e14\u53ea\u6709\u4e00\u4e2a \u540e\u7ee7","title":"\u7279\u70b9"},{"location":"cs/ds/#_13","text":"\u6570\u7ec4 (Array)\uff0c\u662f \u7531\u76f8\u540c\u7c7b\u578b\u7684\u5143\u7d20 (element) \u7684\u96c6\u5408\u6240\u7ec4\u6210\u7684\u6570\u636e\u7ed3\u6784 \uff0c \u5206\u914d\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u6765\u5b58\u50a8 \u3002\u5229\u7528\u5143\u7d20\u7684\u7d22 (index) \u53ef\u4ee5\u8ba1\u7b97\u51fa\u8be5\u5143\u7d20\u5bf9\u5e94\u7684\u5b58\u50a8\u5730\u5740\u3002","title":"\u987a\u5e8f\u5b58\u50a8"},{"location":"cs/ds/#_14","text":"struct Array { Type* elements; int length; int size; };","title":"\u7ed3\u6784"},{"location":"cs/ds/#_15","text":"\u521d\u59cb\u5316 \u8bbf\u95ee\u5143\u7d20 \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165 \u5728\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664 \u67e5\u627e","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"cs/ds/#_16","text":"\u94fe\u8868 (Linked List) \u662f\u4e00\u79cd\u5e38\u89c1\u7684\u57fa\u7840\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u7ebf\u6027\u8868\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u6309\u7ebf\u6027\u7684\u987a\u5e8f\u5b58\u50a8\u6570\u636e\uff0c\u800c\u662f\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u91cc\u5b58\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002\u7531\u4e8e\u4e0d\u5fc5\u987b\u6309\u987a\u5e8f\u5b58\u50a8\uff0c\u94fe\u8868\u5728\u63d2\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u8fbe\u5230 \\(O(1)\\) \u7684\u590d\u6742\u5ea6\uff0c\u6bd4\u6570\u7ec4\u5feb\u5f97\u591a\uff0c\u4f46\u662f\u67e5\u627e\u4e00\u4e2a\u8282\u70b9\u6216\u8005\u8bbf\u95ee\u7279\u5b9a\u7f16\u53f7\u7684\u8282\u70b9\u5219\u9700\u8981 \\(O(n)\\) \u7684\u65f6\u95f4\u3002 \u94fe\u8868\u7ed3\u6784\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u673a\u5185\u5b58\u7a7a\u95f4\uff0c\u5b9e\u73b0\u7075\u6d3b\u7684\u5185\u5b58\u52a8\u6001\u7ba1\u7406\u3002\u4f46\u662f\u94fe\u8868\u5931\u53bb\u4e86\u6570\u7ec4\u968f\u673a\u8bfb\u53d6\u7684\u4f18\u70b9\uff0c\u540c\u65f6\u94fe\u8868\u7531\u4e8e\u589e\u52a0\u4e86\u7ed3\u70b9\u7684\u6307\u9488\u57df\uff0c\u7a7a\u95f4\u5f00\u9500\u6bd4\u8f83\u5927\u3002","title":"\u94fe\u5f0f\u5b58\u50a8"},{"location":"cs/ds/#_17","text":"\u94fe\u8868\u4e2d\u6700\u7b80\u5355\u7684\u4e00\u79cd\u662f\u5355\u5411\u94fe\u8868\uff0c\u5b83\u5305\u542b\u4e24\u4e2a\u57df\uff0c\u4e00\u4e2a\u4fe1\u606f\u57df\u548c\u4e00\u4e2a\u6307\u9488\u57df\u3002\u8fd9\u4e2a\u94fe\u63a5\u6307\u5411\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5219\u6307\u5411\u4e00\u4e2a\u7a7a\u503c\u3002\u5355\u5411\u94fe\u8868\u53ea\u53ef\u5411\u4e00\u4e2a\u65b9\u5411\u904d\u5386\u3002","title":"\u5355\u5411\u94fe\u8868"},{"location":"cs/ds/#_18","text":"\u53cc\u5411\u94fe\u8868\u4e5f\u53eb\u53cc\u94fe\u8868\u3002\u53cc\u5411\u94fe\u8868\u4e2d\u4e0d\u4ec5\u6709\u6307\u5411\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\uff0c\u8fd8\u6709\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002\u8fd9\u6837\u53ef\u4ee5\u4ece\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u8bbf\u95ee\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u4ee5\u81f3\u6574\u4e2a\u94fe\u8868\u3002\u4e00\u822c\u662f\u5728\u9700\u8981\u5927\u6279\u91cf\u7684\u53e6\u5916\u50a8\u5b58\u6570\u636e\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\u7528\u3002","title":"\u53cc\u5411\u94fe\u8868"},{"location":"cs/ds/#_19","text":"\u5faa\u73af\u94fe\u8868\u4e2d\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e4b\u524d\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5faa\u73af\u94fe\u8868\u7684\u65e0\u8fb9\u754c\u4f7f\u5f97\u5728\u8fd9\u6837\u7684\u94fe\u8868\u4e0a\u8bbe\u8ba1\u7b97\u6cd5\u4f1a\u6bd4\u666e\u901a\u94fe\u8868\u66f4\u52a0\u5bb9\u6613\u3002\u5bf9\u4e8e\u65b0\u52a0\u5165\u7684\u8282\u70b9\u5e94\u8be5\u662f\u5728\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e4b\u524d\u8fd8\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e4b\u540e\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u8981\u6c42\u7075\u6d3b\u5904\u7406\uff0c\u533a\u522b\u4e0d\u5927\u3002\u5f53\u7136\uff0c\u5982\u679c\u53ea\u4f1a\u5728\u6700\u540e\u63d2\u5165\u6570\u636e\uff0c\u5904\u7406\u4e5f\u662f\u5f88\u5bb9\u6613\u7684\u3002","title":"\u5faa\u73af\u94fe\u8868"},{"location":"cs/ds/#_20","text":"struct Node { Type* value; Node* prev; Node* next; };","title":"\u7ed3\u6784"},{"location":"cs/ds/#_21","text":"\u521d\u59cb\u5316 \u8bbf\u95ee\u5143\u7d20 \u63d2\u5165 (\u5c3e\u63d2\u6cd5\uff0c\u5934\u63d2\u6cd5\uff0c\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165) \u5728\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"cs/ds/#_22","text":"\u961f\u5217\uff0c\u53c8\u79f0\u4e3a\u4f2b\u5217( queue )\uff0c\u662f\u5148\u8fdb\u5148\u51fa( FIFO \uff0c First-In-First-Out )\u7684\u7ebf\u6027\u8868\u3002\u5728\u5177\u4f53\u5e94\u7528\u4e2d\u901a\u5e38\u7528\u94fe\u8868\u6216\u8005\u6570\u7ec4\u6765\u5b9e\u73b0\u3002\u961f\u5217\u53ea\u5141\u8bb8\u5728\u540e\u7aef(\u79f0\u4e3a rear )\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u5728\u524d\u7aef(\u79f0\u4e3a front )\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u3002 \u961f\u5217\u7684\u64cd\u4f5c\u65b9\u5f0f\u548c\u5806\u6808\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u961f\u5217\u53ea\u5141\u8bb8\u65b0\u6570\u636e\u5728\u540e\u7aef\u8fdb\u884c\u6dfb\u52a0\u3002","title":"\u961f\u5217"},{"location":"cs/ds/#_23","text":"#define MAX_QSIZE 10 // \u6700\u5927\u961f\u5217\u957f\u5ea6+1 // \u9635\u5217\u961f\u5217\u7684\u5b58\u50a8\u7ed3\u6784 struct Queue { int Array[MAX_QSIZE]; // \u9635\u5217\u7a7a\u95f4\u5927\u5c0f int front; // \u961f\u5934 int rear; // \u961f\u5c3e int length; // \u961f\u5217\u957f\u5ea6 }; // \u6784\u9020\u4e00\u4e2a\u7a7a\u961f\u5217Q Queue* Q_Init() { Queue *Q = (Queue*)malloc(sizeof(Queue)); if (!Q){ // \u5b58\u50a8\u5206\u914d\u5931\u8d25 exit(OVERFLOW); } //\u521d\u59cb\u5316 Q->front = Q->rear = Q->length = 0; return Q; } // \u5c06Q\u6e05\u4e3a\u7a7a\u961f\u5217 void Q_Clear(Queue *Q) { //\u6e05\u9664\u5934\u5c3e\u4e0b\u6807\u548c\u957f\u5ea6 Q->front = Q->rear = Q->length = 0; } // \u5165\u5217 int Q_Put(Queue *Q, int x) { //\u5982\u679c\u5f53\u524d\u5143\u7d20\u6570\u91cf\u7b49\u4e8e\u6700\u5927\u6570\u91cf \u8fd4\u56de -1 if (Q->rear + 1 == MAX_QSIZE) { return -1; } Q->Array[Q->rear] = x; Q->rear = Q->rear + 1; //length + 1 Q->length = Q->length + 1; return 1; } // \u51fa\u5217 int Q_Poll(Queue *Q) { //\u5982\u679c\u5f53\u524d\u5143\u7d20\u6570\u91cf\u7b49\u4e8e\u6700\u5927\u6570\u91cf \u8fd4\u56de -1 if (Q->front + 1 == MAX_QSIZE) return -1; int x = Q->Array[Q->front]; Q->front = Q->front + 1; // \u79fb\u51fa\u540e\u6e1b\u5c111 Q->length = Q->length - 1; return x; }","title":"\u6570\u7ec4\u961f\u5217"},{"location":"cs/ds/#_24","text":"\u5355\u94fe\u961f\u5217\u4f7f\u7528\u94fe\u8868\u4f5c\u4e3a\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4f2a\u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u961f\u5217\u957f\u5ea6\u4e5f\u6ca1\u6709\u9650\u5236\u3002\u4f46\u63d2\u5165\u548c\u8bfb\u53d6\u7684\u65f6\u95f4\u4ee3\u4ef7\u8f83\u9ad8\u3002 // \u5b9a\u4e49\u5355\u94fe\u961f\u5217\u7684\u5b58\u50a8\u7ed3\u6784 typedef struct QNode { int data; QNode *next; }QNode,*QNodePtr; typedef struct LinkQueue{ //\u961f\u5934 \u961f\u5c3e \u6307\u9488 QNodePtr front,rear; }LinkQueue; // \u6784\u9020\u4e00\u4e2a\u7a7a\u961f\u5217Q LinkQueue* Q_Init() { //\u7533\u8bf7\u5185\u5b58 LinkQueue* Q = (LinkQueue*)malloc(sizeof(LinkQueue)); //\u5982\u679c Q \u4e3a NULL \u8bf4\u660e \u5185\u5b58\u7533\u8bf7\u5931\u8d25\uff0c\u7ed3\u675f\u7a0b\u5e8f if (!Q) exit(OVERFLOW); //\u521d\u59cb\u5316\u5934\u5c3e\u8282\u70b9 \u6307\u5411\u76f8\u540c\u5730\u5740 Q->front = Q->rear = (QNodePtr)malloc(sizeof(QNode)); //\u5982\u679c Q->front \u4e3a NULL \u8bf4\u660e \u5185\u5b58\u7533\u8bf7\u5931\u8d25\uff0c\u7ed3\u675f\u7a0b\u5e8f if (!Q->front) exit(OVERFLOW); Q->front->next = NULL; return Q; } // \u9500\u6bc1\u961f\u5217Q(\u65e0\u8bba\u7a7a\u5426\u5747\u53ef) void Q_Destroy(LinkQueue *Q) { while (Q->front) { //\u5c06\u961f\u5c3e\u6307\u5411\u961f\u5934\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\uff08\u7b2c1\u4e2a\u8282\u70b9\uff09 Q->rear = Q->front->next; //\u56de\u6536\u961f\u5934 free(Q->front); //\u5c06\u961f\u5934\u6307\u5411\u961f\u5c3e\uff08\u76f8\u5f53\u4e8e\u7b2c1\u4e2a\u8282\u70b9\u53d8\u6210\u4e86\u961f\u5934\uff0c\u7136\u540e\u4f9d\u6b21\u7b2c2\u4e2a\u7b2c3\u4e2a\u3001\u3001\u3001 //\u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u5c31\u662f Q->front == NULL \u7684\u65f6\u5019\uff09 Q->front = Q->rear; } free(Q); } // \u5c06Q\u6e05\u4e3a\u7a7a\u961f\u5217 void Q_Clear(LinkQueue *Q) { QNodePtr p, q; //\u5c06\u961f\u5c3e\u6307\u5411\u961f\u5934\u70b9\u7684\u5730\u5740 Q->rear = Q->front; //\u53d6\u51fa\u7b2c1\u4e2a\u8282\u70b9 p = Q->front->next; //\u56de\u6536\u7b2c1\u4e2a\u8282\u70b9 Q->front->next = NULL; while (p) { //\u5c06 q \u6307\u5411 p\uff08\u7b2c1\u4e2a\u8282\u70b9\uff09 q = p; //\u5c06 p \u6307\u5411 \u7b2c2\u4e2a\u8282\u70b9 p = p->next; //\u56de\u6536\u7b2c2\u4e2a\u8282\u70b9 free(q); } } // \u82e5Q\u4e3a\u7a7a\u961f\u5217\uff0c\u5219\u8fd4\u56de-1\uff0c\u5426\u5219\u8fd4\u56de1 int Q_Empty(LinkQueue Q) { if (Q.front->next == NULL) return 1; else return -1; } // \u6c42\u961f\u5217\u7684\u957f\u5ea6 int Q_Length(LinkQueue Q) { int i = 0; QNodePtr p; p = Q.front; //\u904d\u5386\u961f\u5217\u4e2d\u7684\u8282\u70b9\uff0c\u76f4\u5230\u961f\u5c3e\u7b49\u4e8e\u961f\u5934 while (Q.rear != p) { i++; p = p->next; } return i; } // \u6253\u5370\u961f\u5217\u4e2d\u7684\u5185\u5bb9 void Q_Print(LinkQueue Q) { int i = 0; QNodePtr p; p = Q.front; while (Q.rear != p) { i++; cout << p->next->data << endl; p = p->next; } } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5219\u7528e\u8fd4\u56deQ\u7684\u961f\u5934\u5143\u7d20\uff0c\u5e76\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de-1 int Q_GetHead(LinkQueue Q, int &e) { QNodePtr p; if (Q.front == Q.rear) return -1; p = Q.front->next; e = p->data; return 1; } // \u63d2\u5165\u5143\u7d20e\u4e3aQ\u7684\u65b0\u7684\u961f\u5c3e\u5143\u7d20 void Q_Put(LinkQueue *Q, int e) { QNodePtr p = (QNodePtr)malloc(sizeof(QNode)); if (!p) // \u5b58\u50a8\u5206\u914d\u5931\u8d25 exit(OVERFLOW); p->data = e; p->next = NULL; //FIFO\uff0c\u5c06\u65b0\u8282\u70b9\u8ffd\u52a0\u5230\u5c3e\u8282\u70b9\u540e\u9762 Q->rear->next = p; //\u5c06\u65b0\u7684\u8282\u70b9\u53d8\u6210\u5c3e\u8282\u70b9 Q->rear = p; } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5220\u9664Q\u7684\u961f\u5934\u5143\u7d20\uff0c\u7528e\u8fd4\u56de\u5176\u503c\uff0c\u5e76\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de-1 int Q_Poll(LinkQueue *Q,int &e) { QNodePtr p; if (Q->front == Q->rear) return -1; //\u53d6\u51fa\u5934\u8282\u70b9 p = Q->front->next; //\u53d6\u51fa\u5934\u8282\u70b9\u7684\u6570\u636e e = p->data; cout << e << endl; Q->front->next = p->next; if (Q->rear == p) Q->rear = Q->front; free(p); cout << e << endl; return 1; }","title":"\u5355\u94fe\u961f\u5217"},{"location":"cs/ds/#_25","text":"\u5faa\u73af\u961f\u5217\u53ef\u4ee5\u66f4\u7b80\u5355\u9632\u6b62\u4f2a\u6ea2\u51fa\u7684\u53d1\u751f\uff0c\u4f46\u961f\u5217\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\u3002 // \u961f\u5217\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784(\u5faa\u73af\u961f\u5217) #define MAX_QSIZE 5 // \u6700\u5927\u961f\u5217\u957f\u5ea6+1 typedef struct { int *base; // \u521d\u59cb\u5316\u7684\u52a8\u6001\u5206\u914d\u5b58\u50a8\u7a7a\u95f4 int front; // \u5934\u6307\u9488\uff0c\u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u6307\u5411\u961f\u5217\u5934\u5143\u7d20 int rear; // \u5c3e\u6307\u9488\uff0c\u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u6307\u5411\u961f\u5217\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e } SqQueue; // \u6784\u9020\u4e00\u4e2a\u7a7a\u961f\u5217Q SqQueue* Q_Init() { SqQueue *Q = (SqQueue*)malloc(sizeof(SqQueue)); // \u5b58\u50a8\u5206\u914d\u5931\u8d25 if (!Q){ exit(OVERFLOW); } Q->base = (int *)malloc(MAX_QSIZE * sizeof(int)); // \u5b58\u50a8\u5206\u914d\u5931\u8d25 if (!Q->base){ exit(OVERFLOW); } Q->front = Q->rear = 0; return Q; } // \u9500\u6bc1\u961f\u5217Q\uff0cQ\u4e0d\u518d\u5b58\u5728 void Q_Destroy(SqQueue *Q) { if (Q->base) free(Q->base); Q->base = NULL; Q->front = Q->rear = 0; free(Q); } // \u5c06Q\u6e05\u4e3a\u7a7a\u961f\u5217 void Q_Clear(SqQueue *Q) { Q->front = Q->rear = 0; } // \u82e5\u961f\u5217Q\u4e3a\u7a7a\u961f\u5217\uff0c\u5219\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de-1 int Q_Empty(SqQueue Q) { if (Q.front == Q.rear) // \u961f\u5217\u7a7a\u7684\u6807\u5fd7 return 1; else return -1; } // \u8fd4\u56deQ\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5373\u961f\u5217\u7684\u957f\u5ea6 int Q_Length(SqQueue Q) { return (Q.rear - Q.front + MAX_QSIZE) % MAX_QSIZE; } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5219\u7528e\u8fd4\u56deQ\u7684\u961f\u5934\u5143\u7d20\uff0c\u5e76\u8fd4\u56deOK\uff1b\u5426\u5219\u8fd4\u56deERROR int Q_GetHead(SqQueue Q, int &e) { if (Q.front == Q.rear) // \u961f\u5217\u7a7a return -1; e = Q.base[Q.front]; return 1; } // \u6253\u5370\u961f\u5217\u4e2d\u7684\u5185\u5bb9 void Q_Print(SqQueue Q) { int p = Q.front; while (Q.rear != p) { cout << Q.base[p] << endl; p = (p + 1) % MAX_QSIZE; } } // \u63d2\u5165\u5143\u7d20e\u4e3aQ\u7684\u65b0\u7684\u961f\u5c3e\u5143\u7d20 int Q_Put(SqQueue *Q, int e) { if ((Q->rear + 1) % MAX_QSIZE == Q->front) // \u961f\u5217\u6ee1 return -1; Q->base[Q->rear] = e; Q->rear = (Q->rear + 1) % MAX_QSIZE; return 1; } // \u82e5\u961f\u5217\u4e0d\u7a7a\uff0c\u5219\u5220\u9664Q\u7684\u961f\u5934\u5143\u7d20\uff0c\u7528e\u8fd4\u56de\u5176\u503c\uff0c\u5e76\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de-1 int Q_Poll(SqQueue *Q, int &e) { if (Q->front == Q->rear) // \u961f\u5217\u7a7a return -1; e = Q->base[Q->front]; Q->front = (Q->front + 1) % MAX_QSIZE; return 1; }","title":"\u5faa\u73af\u961f\u5217"},{"location":"cs/ds/#_26","text":"\u53cc\u7aef\u961f\u5217( deque \uff0c\u5168\u540d double-ended queue )\u662f\u4e00\u79cd\u5177\u6709\u961f\u5217\u548c\u6808\u6027\u8d28\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u3002\u53cc\u7aef\u961f\u5217\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u4ece\u4e24\u7aef\u5f39\u51fa\uff0c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u9650\u5b9a\u5728\u961f\u5217\u7684\u4e24\u8fb9\u8fdb\u884c\u3002","title":"\u53cc\u7aef\u961f\u5217"},{"location":"cs/ds/#_27","text":"\u6808( stack )\u53c8\u79f0\u4e3a\u5806\u53e0\uff0c\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u5141\u8bb8\u5728\u6709\u5e8f\u7684\u7ebf\u6027\u6570\u636e\u96c6\u5408\u7684\u4e00\u7aef(\u79f0\u4e3a\u5806\u6808\u9876\u7aef top )\u8fdb\u884c\u52a0\u5165\u6570\u636e( push )\u548c\u79fb\u9664\u6570\u636e( pop )\u7684\u8fd0\u7b97\u3002\u56e0\u800c\u6309\u7167\u540e\u8fdb\u5148\u51fa( LIFO \uff0c Last In First Out )\u7684\u539f\u7406\u8fd0\u4f5c\u3002 \u6808\u5e38\u7528\u4e00\u7ef4\u6570\u7ec4\u6216\u94fe\u8868\u6765\u5b9e\u73b0\u3002","title":"\u6808"},{"location":"cs/ds/#_28","text":"\u5148\u5165\u540e\u51fa\uff0c\u540e\u5165\u5148\u51fa\u3002 \u9664\u5934\u5c3e\u8282\u70b9\u4e4b\u5916\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u4e00\u4e2a\u524d\u9a71\uff0c\u4e00\u4e2a\u540e\u7ee7\u3002","title":"\u7279\u70b9"},{"location":"cs/ds/#_29","text":"\u6808\u4f7f\u7528\u4e24\u79cd\u57fa\u672c\u64cd\u4f5c\uff1a \u63a8\u5165\uff1a\u5c06\u6570\u636e\u653e\u5165\u5806\u6808\u9876\u7aef\uff0c\u5806\u6808\u9876\u7aef\u79fb\u5230\u65b0\u653e\u5165\u7684\u6570\u636e\u3002 \u5f39\u51fa\uff1a\u5c06\u5806\u6808\u9876\u7aef\u6570\u636e\u79fb\u9664\uff0c\u5806\u6808\u9876\u7aef\u79fb\u5230\u79fb\u9664\u540e\u7684\u4e0b\u4e00\u7b14\u6570\u636e\u3002","title":"\u64cd\u4f5c"},{"location":"cs/ds/#_30","text":"#include <stdio.h> #include <stdlib.h> #include <stdbool.h> #define stack struct Stack #define STACK_POP_ERR 42 // \u5806\u758a\u8cc7\u6599\u7d50\u69cb \u5806\u6808\u6570\u636e\u7ed3\u6784 struct Stack { int val[10]; // \u9663\u5217\u7a7a\u9593 int top; // \u5806\u758a\u9802\u7aef\u6307\u6a19\uff08\u6808\u9876\uff09 }; // \u6aa2\u67e5\u5806\u758a\u662f\u5426\u70ba\u7a7a bool empty(stack *stk) { return stk->top == 0; } // \u63a8\u5165\u8cc7\u6599 void push(stack *stk, int x) { stk->top = stk->top + 1; stk->val[stk->top] = x; } // \u5f48\u51fa\u5e76\u8fd4\u56de\u8cc7\u6599 int pop(stack *stk) { if (empty(stk)) return STACK_POP_ERR; // \u4e0d\u80fd\u5f48\u51fa else { stk->top = stk->top - 1; return stk->val[stk->top + 1]; } } int main() { // \u5ba3\u544a\u5e76\u521d\u59cb\u5316\u8cc7\u6599\u7d50\u69cb\u7a7a\u9593 stack stk; stk.top = 0; // \u63a8\u5165\u56db\u4e2a push(&stk, 3); push(&stk, 4); push(&stk, 1); push(&stk, 9); // \u5f39\u51fa\u4e09\u4e2a printf(\"%d \", pop(&stk)); printf(\"%d \", pop(&stk)); printf(\"%d \", pop(&stk)); return 0; }","title":"\u6570\u7ec4\u6808"},{"location":"cs/ds/#_31","text":"#include <stdio.h> #include <conio.h> #include <stdlib.h> #define elemType int /* \u94fe\u6808\u5143\u7d20\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u6574\u578b\u4e3a\u4f8b */ #define SNODE_SIZE sizeof (struct sNode) /* \u94fe\u6808\u7ed3\u70b9\u7a7a\u95f4\u5927\u5c0f */ #define status int /* \u72b6\u6001\u578b\u53d8\u91cf */ #define OVERFLOW -1 /* \u5185\u5b58\u6ea2\u51fa\u72b6\u6001\u7801 */ #define ERROR 0 /* \u9519\u8bef\u72b6\u6001\u7801 */ #define OK 1 /* \u6b63\u786e\u72b6\u6001\u7801 */ /* \u94fe\u6808\u7ed3\u70b9\u5b58\u50a8\u7ed3\u6784 */ typedef struct sNode { elemType data; struct sNode *next; } sNode, *sNodePtr; /* \u94fe\u6808\u5b58\u50a8\u7ed3\u6784 */ typedef struct linkStack { sNodePtr top; /* \u6808\u9876\u6307\u9488 */ } linkStack; /* \u521d\u59cb\u5316 */ /* \u64cd\u4f5c\u7ed3\u679c\uff1a\u6784\u9020\u4e00\u4e2a\u5e26\u5934\u7ed3\u70b9\u7684\u7a7a\u94fe\u6808S */ void initStack (linkStack *S) { S->top = (sNodePtr) malloc (SNODE_SIZE); /* \u4ea7\u751f\u5934\u7ed3\u70b9\uff0c\u6808\u9876\u6307\u9488\u6307\u5411\u6b64\u5934\u7ed3\u70b9 */ if (!S->top) /* \u5185\u5b58\u5206\u914d\u5931\u8d25 */ exit (OVERFLOW); S->top->next = NULL; } /* \u9500\u6bc1 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u9500\u6bc1\u94fe\u6808S */ void destroyStack (linkStack *S) { sNodePtr p, q; p = S->top; /* p\u6307\u5411S\u7684\u5934\u7ed3\u70b9 */ while (p) { q = p->next; /* q\u6307\u5411p\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ free (p); /* \u56de\u6536p\u6307\u5411\u7684\u7ed3\u70b9 */ p = q; /* p\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ } /* \u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ } /* \u6e05\u7a7a */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u5c06S\u91cd\u7f6e\u4e3a\u7a7a\u6808 */ void clearStack (linkStack *S) { sNodePtr p, q; p = S->top->next; /* p\u6307\u5411\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ while (p) { q = p->next; /* q\u6307\u5411p\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ free (p); /* \u56de\u6536p\u6307\u5411\u7684\u7ed3\u70b9 */ p = q; /* p\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ } /* \u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ed3\u70b9 */ S->top->next = NULL; } /* \u5224\u65ad\u94fe\u6808\u662f\u5426\u4e3a\u7a7a */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u82e5S\u4e3a\u7a7a\u94fe\u6808\uff0c\u5219\u8fd4\u56deTRUE\uff0c\u5426\u5219\u8fd4\u56deFALSE */ status stackIsEmpty (linkStack *S) { return S->top->next == NULL; } /* \u6c42\u94fe\u6808\u957f\u5ea6 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u8fd4\u56deS\u4e2d\u6570\u636e\u5143\u7d20\u4e2a\u6570 */ int stackLength (linkStack *S) { int i = 0; sNodePtr p; p = S->top->next; /* p\u6307\u5411\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ while (p) { /* \u672a\u5230\u6808\u5c3e */ i++; p = p->next; } return i; } /* \u83b7\u53d6\u6808\u9876\u5143\u7d20 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u5f53\u6808\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5c06\u6808\u9876\u5143\u7d20\u5176\u503c\u8d4b\u7ed9e\u5e76\u8fd4\u56deOK\uff0c\u5426\u5219\u8fd4\u56deERROR */ status getTopElem (linkStack *S, elemType *e) { sNodePtr p; if (stackIsEmpty (S)) return ERROR; p = S->top->next; /* p\u6307\u5411\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ *e = p->data; return OK; } /* \u5165\u6808 */ /* \u64cd\u4f5c\u7ed3\u679c\uff1a\u5728S\u7684\u6808\u9876\u63d2\u5165\u65b0\u7684\u5143\u7d20e */ status push (linkStack *S, elemType e) { sNodePtr p; p = (sNodePtr) malloc (SNODE_SIZE); /* \u4ea7\u751f\u65b0\u7ed3\u70b9 */ if (!p) /* \u5185\u5b58\u5206\u914d\u5931\u8d25 */ exit (OVERFLOW); p->data = e; p->next = S->top->next; /* \u5c06\u65b0\u7ed3\u70b9\u94fe\u63a5\u5230\u539f\u6808\u9876 */ S->top->next = p; /* \u6808\u9876\u6307\u5411\u65b0\u7ed3\u70b9 */ } /* \u51fa\u6808 */ /* \u64cd\u4f5c\u7ed3\u679c\uff1a\u5220\u9664S\u7684\u6808\u9876\u5143\u7d20\uff0c\u5e76\u7531e\u8fd4\u56de\u5176\u503c */ status pop (linkStack *S, elemType *e) { sNodePtr p; if (stackIsEmpty (S)) return ERROR; p = S->top->next; /* p\u6307\u5411\u94fe\u6808\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9 */ *e = p->data; /* \u53d6\u51fa\u6570\u636e */ S->top->next = p->next; free (p); /* \u5220\u9664\u8be5\u7ed3\u70b9 */ if (S->top == p) /* \u6808\u4e3a\u7a7a */ S->top->next = NULL; return OK; } /* \u6253\u5370\u6808\u5185\u5bb9 */ /* \u521d\u59cb\u6761\u4ef6\uff1a\u94fe\u6808S\u5df2\u5b58\u5728\u3002\u64cd\u4f5c\u7ed3\u679c\uff1a\u5f53\u6808\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u6253\u5370\u6808\u5185\u5bb9\u5e76\u8fd4\u56deOK\uff0c\u5426\u5219\u8fd4\u56deERROR */ status printStack (linkStack *S) { sNodePtr p; if (stackIsEmpty (S)) return ERROR; p = S->top->next; while (p) { printf (\"%d\\t\", p->data); p = p->next; } putchar ('\\n'); return OK; }","title":"\u94fe\u5f0f\u6808"},{"location":"cs/ds/#_32","text":"\u56de\u6eaf \u9012\u5f52 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","title":"\u5e94\u7528"},{"location":"cs/ds/#_33","text":"","title":"\u6811"},{"location":"cs/ds/#_34","text":"\u6811( tree )\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u6216\u662f\u5b9e\u73b0\u8fd9\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u6a21\u62df\u5177\u6709\u6811\u72b6\u7ed3\u6784\u6027\u8d28\u7684\u6570\u636e\u96c6\u5408\u3002\u5b83\u662f\u7531 n ( n>0 )\u4e2a\u6709\u9650\u8282\u70b9\u7ec4\u6210\u4e00\u4e2a\u5177\u6709\u5c42\u6b21\u5173\u7cfb\u7684\u96c6\u5408\u3002\u5b83\u5177\u6709\u4ee5\u4e0b\u7684\u7279\u70b9\uff1a \u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u6709\u6709\u9650\u4e2a\u5b50\u8282\u70b9\u6216\u65e0\u5b50\u8282\u70b9\uff1b \u6ca1\u6709\u7236\u8282\u70b9\u7684\u8282\u70b9\u79f0\u4e3a\u6839\u8282\u70b9\uff1b \u6bcf\u4e00\u4e2a\u975e\u6839\u8282\u70b9\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff1b \u9664\u4e86\u6839\u8282\u70b9\u5916\uff0c\u6bcf\u4e2a\u5b50\u8282\u70b9\u53ef\u4ee5\u5206\u4e3a\u591a\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u6811\uff1b \u6811\u91cc\u9762\u6ca1\u6709\u73af\u8def( cycle )\u3002","title":"\u5b9a\u4e49"},{"location":"cs/ds/#_35","text":"\u8282\u70b9\u7684\u5ea6 \uff1a\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5ea6\uff1b \u6811\u7684\u5ea6 \uff1a\u4e00\u68f5\u6811\u4e2d\uff0c\u6700\u5927\u7684\u8282\u70b9\u5ea6\u79f0\u4e3a\u6811\u7684\u5ea6\uff1b \u53f6\u8282\u70b9 \u6216 \u7ec8\u7aef\u8282\u70b9 \uff1a\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\uff1b \u975e\u7ec8\u7aef\u8282\u70b9 \u6216 \u5206\u652f\u8282\u70b9 \uff1a\u5ea6\u4e0d\u4e3a\u96f6\u7684\u8282\u70b9\uff1b \u7236\u4eb2\u8282\u70b9\u6216 \u7236\u8282\u70b9 \uff1a\u82e5\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u5b50\u8282\u70b9\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u79f0\u4e3a\u5176\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\uff1b \u5b69\u5b50\u8282\u70b9\u6216 \u5b50\u8282\u70b9 \uff1a\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff1b \u5144\u5f1f\u8282\u70b9 \uff1a\u5177\u6709\u76f8\u540c\u7236\u8282\u70b9\u7684\u8282\u70b9\u4e92\u79f0\u4e3a\u5144\u5f1f\u8282\u70b9\uff1b \u8282\u70b9\u7684 \u5c42 \u6b21\uff1a\u4ece\u6839\u5f00\u59cb\u5b9a\u4e49\u8d77\uff0c\u6839\u4e3a\u7b2c 1 \u5c42\uff0c\u6839\u7684\u5b50\u8282\u70b9\u4e3a\u7b2c 2 \u5c42\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff1b \u6df1\u5ea6 \uff1a\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 n \uff0c n \u7684\u6df1\u5ea6\u4e3a\u4ece\u6839\u5230 n \u7684\u552f\u4e00\u8def\u5f84\u957f\uff0c\u6839\u7684\u6df1\u5ea6\u4e3a 0 \uff1b \u9ad8\u5ea6 \uff1a\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 n \uff0c n \u7684\u9ad8\u5ea6\u4e3a\u4ece n \u5230\u4e00\u7247\u6811\u53f6\u7684\u6700\u957f\u8def\u5f84\u957f\uff0c\u6240\u6709\u6811\u53f6\u7684\u9ad8\u5ea6\u4e3a 0 \uff1b \u5802\u5144\u5f1f\u8282\u70b9 \uff1a\u7236\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7684\u8282\u70b9\u4e92\u4e3a\u5802\u5144\u5f1f\uff1b \u8282\u70b9\u7684\u7956\u5148 \uff1a\u4ece\u6839\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u5206\u652f\u4e0a\u7684\u6240\u6709\u8282\u70b9\uff1b \u5b50\u5b59 \uff1a\u4ee5\u67d0\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4efb\u4e00\u8282\u70b9\u90fd\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u3002 \u68ee\u6797 \uff1a\u7531 m ( m>=0 )\u68f5\u4e92\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408\u79f0\u4e3a\u68ee\u6797\uff1b","title":"\u672f\u8bed"},{"location":"cs/ds/#_36","text":"\u65e0\u5e8f\u6811\uff1a\u6811\u4e2d\u4efb\u610f\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e4b\u95f4\u6ca1\u6709\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd9\u79cd\u6811\u79f0\u4e3a\u65e0\u5e8f\u6811\uff0c\u4e5f\u79f0\u4e3a \u81ea\u7531\u6811 \uff1b \u6709\u5e8f\u6811\uff1a\u6811\u4e2d\u4efb\u610f\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e4b\u95f4\u6709\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd9\u79cd\u6811\u79f0\u4e3a\u6709\u5e8f\u6811\uff1b \u4e8c\u53c9\u6811 \uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u542b\u6709\u4e24\u4e2a\u5b50\u6811\u7684\u6811\u79f0\u4e3a\u4e8c\u53c9\u6811\uff1b \u5b8c\u5168\u4e8c\u53c9\u6811 \uff1a\u5bf9\u4e8e\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5047\u8bbe\u5176\u6df1\u5ea6\u4e3a d ( d>1 )\u3002\u9664\u4e86\u7b2c d \u5c42\u5916\uff0c\u5176\u5b83\u5404\u5c42\u7684\u8282\u70b9\u6570\u76ee\u5747\u5df2\u8fbe\u6700\u5927\u503c\uff0c\u4e14\u7b2c d \u5c42\u6240\u6709\u8282\u70b9\u4ece\u5de6\u5411\u53f3\u8fde\u7eed\u5730\u7d27\u5bc6\u6392\u5217\uff0c\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u88ab\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\uff1b \u6ee1\u4e8c\u53c9\u6811 \uff1a\u6240\u6709\u53f6\u8282\u70b9\u90fd\u5728\u6700\u5e95\u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff1b \u5e73\u8861\u4e8c\u53c9\u6811 ( AVL \u6811)\uff1a\u5f53\u4e14\u4ec5\u5f53\u4efb\u4f55\u8282\u70b9\u7684\u4e24\u68f5\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u5927\u4e8e 1 \u7684\u4e8c\u53c9\u6811\uff1b \u6392\u5e8f\u4e8c\u53c9\u6811 ( \u4e8c\u53c9\u67e5\u627e\u6811 Binary Search Tree )\uff1a\u4e5f\u79f0\u4e8c\u53c9\u641c\u7d22\u6811\u3001\u6709\u5e8f\u4e8c\u53c9\u6811\uff1b \u970d\u592b\u66fc\u6811 \uff1a\u5e26\u6743\u8def\u5f84\u6700\u77ed\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u54c8\u592b\u66fc\u6811\u6216\u6700\u4f18\u4e8c\u53c9\u6811\uff1b B \u6811\uff1a\u4e00\u79cd\u5bf9\u8bfb\u5199\u64cd\u4f5c\u8fdb\u884c\u4f18\u5316\u7684\u81ea\u5e73\u8861\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u80fd\u591f\u4fdd\u6301\u6570\u636e\u6709\u5e8f\uff0c\u62e5\u6709\u591a\u4e8e\u4e24\u4e2a\u5b50\u6811\u3002","title":"\u5206\u7c7b"},{"location":"cs/ds/#_37","text":"\u5728\u4e8c\u53c9\u6811\u7684\u7b2c i \u5c42\u4e0a\u6700\u591a\u6709 \\(2^{i-1}(i>=1)\\) \u4e2a\u8282\u70b9 \u3002 \u4e8c\u53c9\u6811\u4e2d\u5982\u679c\u6df1\u5ea6\u4e3a k \uff0c\u90a3\u4e48\u6700\u591a\u6709 \\(2^k-1(k>=1)\\) \u4e2a\u8282\u70b9\u3002 \u5bf9\u4efb\u4f55\u975e\u7a7a\u4e8c\u53c9\u6811 \uff0c\u82e5 n0 \u8868\u793a\u5ea6\u6570\u4e3a 0 \u7684\u8282\u70b9 n2 \u8868\u793a\u5ea6\u6570\u4e3a 2 \u7684\u8282\u70b9,\u90a3\u4e48 n0=n2+1 \u3002 \u5177\u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a log2 n + 1","title":"\u6027\u8d28"},{"location":"cs/ds/#_38","text":"","title":"\u5b58\u50a8"},{"location":"cs/ds/#_39","text":"\u5047\u8bbe\u4ee5\u4e00\u7ec4\u8fde\u7eed\u7684\u7a7a\u95f4\u5b58\u50a8\u6811\u7684\u8282\u70b9\uff0c\u540c\u65f6\u5728\u6bcf\u4e2a\u8282\u70b9\u4e2d\u9644\u8bbe\u4e00\u4e2a\u6307\u793a\u5668\u6307\u793a\u5176\u53cc\u4eb2\u8282\u70b9\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002\u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u5229\u7528\u4e86\u6bcf\u4e00\u4e2a\u8282\u70b9(\u9664\u6839\u8282\u70b9\u5916)\u90fd\u53ea\u6709\u4e00\u4e2a\u53cc\u4eb2\u7684\u6027\u8d28\u3002","title":"\u53cc\u4eb2\u8868\u793a\u6cd5"},{"location":"cs/ds/#_40","text":"\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6240\u6709\u8282\u70b9\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u5b58\u50a8\u8be5\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u3002","title":"\u5b69\u5b50\u8868\u793a\u6cd5"},{"location":"cs/ds/#_41","text":"\u5bf9\u4e8e\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u5de6\u5b69\u5b50\u662f\u8be5\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\uff0c\u53f3\u5b69\u5b50\u662f\u4e0b\u4e00\u4e2a\u5144\u5f1f\u8282\u70b9\u3002","title":"\u5b69\u5b50\u5144\u5f1f\u8868\u793a\u6cd5"},{"location":"cs/ds/#_42","text":"\u4f7f\u7528\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\uff0c\u5bf9\u5b8c\u5168\u4e8c\u53c9\u6811\u8fd9\u79cd\u7ed3\u6784\u662f\u975e\u5e38\u5408\u9002\u7684\u3002 \u53ef\u4ee5\u6309\u7167\u4ece\u4e0a\u4e4b\u4e0b\uff0c\u4ece\u5de6\u81f3\u53f3\u987a\u5e8f\u5b58\u50a8 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684 \u7ed3\u70b9\u7236\u5b50\u5173\u7cfb \u3002 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\uff0c\u6709\u4ee5\u4e0b\u7279\u70b9 \u975e\u6839\u8282\u70b9(\u5e8f\u53f7 i>1 )\u7684\u7236\u8282\u70b9\u5e8f\u53f7\u6570\u7ec4\u4e0b\u6807\u662f int(i/2) \u7ed3\u70b9(\u5e8f\u53f7\u4e3a i )\u7684\u5de6\u5b69\u5b50\u7ed3\u70b9\u7684\u5e8f\u53f7\u662f 2i \uff0c\u5982\u679c 2i>n \uff0c\u5219\u6ca1\u6709\u5de6\u5b69\u5b50 \u7ed3\u70b9(\u5e8f\u53f7\u4e3a i )\u7684\u53f3\u5b69\u5b50\u7ed3\u70b9\u7684\u5e8f\u53f7\u662f 2i+1 \uff0c\u5982\u679c 2i+1>n \uff0c\u5219\u6ca1\u6709\u53f3\u5b69\u5b50 \u4e00\u822c\u666e\u901a\u7684\u4e8c\u53c9\u6811\uff0c\u5728\u5176\u7a7a\u4f59\u4f4d\u7f6e\u8865\u5145\u63a7\u5236\uff0c\u5f53\u505a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u91c7\u7528\u6570\u7ec4\u7ed3\u6784\u5b58\u50a8\uff0c\u4f46\u4f1a\u5bfc\u81f4\u5b58\u50a8\u7a7a\u95f4\u7684\u6d6a\u8d39\u3002","title":"\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8"},{"location":"cs/ds/#_43","text":"\u6811\u7684\u904d\u5386\u65b9\u5f0f\u5927\u81f4\u5206\u522b\u4e24\u79cd\uff0c\u6df1\u5ea6\u4f18\u5148\u904d\u5386( DFS )\u548c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386( BFS )\u3002 \u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\u5c5e\u4e8e DFS \uff0c\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u4f46\u4e5f\u5e94\u8be5\u4e86\u89e3\u975e\u9012\u5f52\u7684\u7248\u672c\uff1b\u5c42\u5e8f\u904d\u5386\u5c5e\u4e8e BFS \u3002","title":"\u904d\u5386"},{"location":"cs/ds/#_44","text":"\u82e5\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff1b\u5426\u5219 \u5148\u8bbf\u95ee\u6839\u8282\u70b9 \u524d\u5e8f\u904d\u5386\u5de6\u5b50\u6811 \u524d\u5e8f\u904d\u5386\u53f3\u5b50\u6811","title":"\u524d\u5e8f\u904d\u5386"},{"location":"cs/ds/#_45","text":"\u82e5\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff1b\u5426\u5219 \u4e2d\u5e8f\u904d\u5386\u5de6\u5b50\u6811 \u8bbf\u95ee\u6839\u8282\u70b9 \u4e2d\u5e8f\u904d\u5386\u53f3\u5b50\u6811","title":"\u4e2d\u5e8f\u904d\u5386"},{"location":"cs/ds/#_46","text":"\u82e5\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff1b\u5426\u5219 \u540e\u5e8f\u904d\u5386\u5de6\u5b50\u6811 \u540e\u5e8f\u904d\u5386\u53f3\u5b50\u6811 \u8bbf\u95ee\u6839\u8282\u70b9","title":"\u540e\u5e8f\u904d\u5386"},{"location":"cs/ds/#_47","text":"\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u6811\u7684\u6bcf\u4e00\u5c42\u8282\u70b9\u3002","title":"\u5c42\u5e8f\u904d\u5386"},{"location":"cs/ds/#_48","text":"\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a \u975e\u7ebf\u6027\u7684\u4e8c\u53c9\u6811\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8f6c\u5316\u4e3a \u7ebf\u6027\u7ed3\u6784 \uff1a\u6240\u6709\u539f\u672c\u4e3a\u7a7a\u7684\u53f3\u5b69\u5b50\u6307\u9488\u6539\u4e3a\u6307\u5411\u8be5\u8282\u70b9\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u7684\u540e\u7ee7\uff0c\u6240\u6709\u539f\u672c\u4e3a\u7a7a\u7684\u5de6\u5b69\u5b50\u6307\u9488\u6539\u4e3a\u6307\u5411\u8be5\u8282\u70b9\u7684\u4e2d\u5e8f\u5e8f\u5217\u7684\u524d\u9a71\u3002 \u7ebf\u7d22\u4e8c\u53c9\u6811\u80fd\u7ebf\u6027\u5730\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u4ece\u800c\u6bd4\u9012\u5f52\u7684\u4e2d\u5e8f\u904d\u5386\u66f4\u5feb \u3002 \u4f7f\u7528\u7ebf\u7d22\u4e8c\u53c9\u6811\u4e5f\u80fd\u591f\u65b9\u4fbf\u7684\u627e\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u8fd9\u6bd4\u663e\u5f0f\u5730\u4f7f\u7528\u7236\u4eb2\u8282\u70b9\u6307\u9488\u6216\u8005\u6808\u6548\u7387\u66f4\u9ad8 \u3002\u8fd9\u5728\u6808\u7a7a\u95f4\u6709\u9650\uff0c\u6216\u8005\u65e0\u6cd5\u4f7f\u7528\u5b58\u50a8\u7236\u8282\u70b9\u7684\u6808\u65f6\u5f88\u6709\u4f5c\u7528(\u5bf9\u4e8e\u901a\u8fc7\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6765\u67e5\u627e\u7236\u8282\u70b9\u800c\u8a00)\u3002 \u8003\u8651\u8fd9\u6837\u7684\u4f8b\u5b50\uff1a\u4e00\u4e2a\u8282\u70b9 k \u6709\u4e00\u4e2a\u53f3\u5b69\u5b50 r \uff0c\u90a3\u4e48 r \u7684\u5de6\u6307\u9488\u53ef\u80fd\u662f\u6307\u5411\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\uff0c\u6216\u662f\u4e00\u4e2a\u6307\u56de k \u7684\u7ebf\u7d22\u3002\u5982\u679c r \u6709\u5de6\u5b69\u5b50\uff0c\u8fd9\u4e2a\u5de6\u5b69\u5b50\u540c\u6837\u4e5f\u5e94\u8be5\u6709\u4e00\u4e2a\u5de6\u5b69\u5b50\u6216\u662f\u6307\u56de k \u7684\u7ebf\u7d22\u3002\u5bf9\u4e8e\u6240\u6709\u7684\u5de6\u5b69\u5b50\u540c\u7406\u3002\u56e0\u6b64\u6cbf\u7740\u8fd9\u4e9b\u4ece r \u53d1\u51fa\u7684\u5de6\u6307\u9488\uff0c\u6700\u7ec8\u4f1a\u627e\u5230\u4e00\u4e2a\u6307\u56de k \u7684\u7ebf\u7d22\u3002\u8fd9\u79cd\u7279\u6027\u662f\u5bf9\u79f0\u7684\uff1a\u5f53 q \u662f p \u7684\u5de6\u5b69\u5b50\u65f6\uff0c\u53ef\u4ee5\u6cbf\u7740 q \u7684\u53f3\u5b69\u5b50\u627e\u5230\u4e00\u4e2a\u6307\u56de p \u7684\u7ebf\u7d22\u3002 \u4f20\u7edf\u7684\u4e8c\u53c9\u6811\u4e00\u822c\u90fd\u662f\u4ee5\u94fe\u5f0f\u5b58\u50a8\u7684\u7ed3\u6784\u6765\u8868\u793a\u3002\u8fd9\u6837\uff0c\u4e8c\u53c9\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u7528\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u94fe\u8282\u70b9\u6765\u5b58\u50a8\uff0c\u6bcf\u4e2a\u94fe\u8282\u70b9\u5c31\u5305\u542b\u4e86\u82e5\u5e72\u4e2a\u6307\u9488\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u4f20\u7edf\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u53ea\u80fd\u8868\u73b0\u51fa\u4e8c\u53c9\u6811\u4e2d\u8282\u70b9\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u800c\u4e14\u4e0d\u80fd\u5229\u7528\u7a7a\u4f59\u7684\u6307\u9488\u6765\u76f4\u63a5\u5f97\u5230\u67d0\u4e2a\u8282\u70b9\u7684\u5728\u7279\u5b9a\u7684\u904d\u5386\u987a\u5e8f(\u5148\u5e8f\uff0c\u4e2d\u5e8f\uff0c\u540e\u5e8f)\u4e2d\u7684\u76f4\u63a5\u524d\u9a71\u548c\u76f4\u63a5\u540e\u7ee7\u3002\u901a\u8fc7\u5206\u6790\u4f20\u7edf\u7684\u4e8c\u53c9\u6811\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u8868\u793a\u7684\u4e8c\u53c9\u6811\u4e2d\uff0c\u5b58\u5728\u5927\u91cf\u7684\u7a7a\u95f2\u6307\u9488\u3002\u82e5\u80fd\u5229\u7528\u8fd9\u4e9b\u7a7a\u6307\u9488\u57df\u6765\u5b58\u653e\u6307\u5411\u8be5\u8282\u70b9\u7684\u76f4\u63a5\u524d\u9a71\u6216\u662f\u76f4\u63a5\u540e\u7ee7\u7684\u6307\u9488\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c\u67d0\u4e9b\u66f4\u65b9\u4fbf\u7684\u8fd0\u7b97\u3002\u8fd9\u4e9b\u88ab\u91cd\u65b0\u5229\u7528\u8d77\u6765\u7684\u7a7a\u6307\u9488\u5c31\u88ab\u79f0\u4e3a\u7ebf\u7d22\uff0c\u52a0\u4e0a\u4e86\u8fd9\u4e9b\u7ebf\u7d22\u7684\u4e8c\u53c9\u6811\u5c31\u662f\u7ebf\u7d22\u4e8c\u53c9\u6811\u3002 \u5bf9\u4e8c\u53c9\u6811\u4ee5\u67d0\u79cd\u904d\u5386\u987a\u5e8f\u8fdb\u884c\u626b\u63cf\u5e76\u4e3a\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u79f0\u4e3a\u4e8c\u53c9\u6811\u7684\u7ebf\u7d22\u5316\uff0c\u8fdb\u884c\u7ebf\u7d22\u5316\u7684\u76ee\u7684\u662f\u52a0\u5feb\u67e5\u627e\u4e8c\u53c9\u6811\u4e2d\u67d0\u8282\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6 \u3002 \u90a3\u4e48\u5728\u6709 N \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u4e2d\u9700\u8981\u5229\u7528 N+1 \u4e2a\u7a7a\u6307\u9488\u6dfb\u52a0\u7ebf\u7d22\u3002\u8fd9\u662f\u56e0\u4e3a\u5728 N \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709 2 \u4e2a\u6307\u9488\uff0c\u6240\u4ee5\u4e00\u5171\u6709 2N \u4e2a\u6307\u9488\uff0c\u9664\u4e86\u6839\u8282\u70b9\u4ee5\u5916\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u6307\u9488\u4ece\u5b83\u7684\u7236\u8282\u70b9\u6307\u5411\u5b83\uff0c\u6240\u4ee5\u4e00\u5171\u4f7f\u7528\u4e86 N-1 \u4e2a\u6307\u9488\u3002\u6240\u4ee5\u5269\u4e0b 2N-(N-1) = N+1 \u4e2a\u7a7a\u6307\u9488\u3002","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811"},{"location":"cs/ds/#huffman","text":"\u970d\u592b\u66fc\u6811\u53c8\u79f0\u6700 \u4f18\u4e8c\u53c9\u6811 \uff0c\u662f\u4e00\u79cd\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u4e8c\u53c9\u6811\u3002\u6240\u8c13\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\uff0c\u5c31\u662f\u6811\u4e2d\u6240\u6709\u7684\u53f6\u7ed3\u70b9\u7684\u6743\u503c\u4e58\u4e0a\u5176\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6(\u82e5\u6839\u7ed3\u70b9\u4e3a 0 \u5c42\uff0c\u53f6\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a\u53f6\u7ed3\u70b9\u7684\u5c42\u6570)\u3002\u6811\u7684\u8def\u5f84\u957f\u5ea6\u662f\u4ece\u6811\u6839\u5230\u6bcf\u4e00\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\uff0c\u8bb0\u4e3a WPL=(W1*L1+W2*L2+W3*L3+...+Wn*Ln) \uff0c N \u4e2a\u6743\u503c Wi(i=1,2,...,n) \u6784\u6210\u4e00\u68f5\u6709 N \u4e2a\u53f6\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u76f8\u5e94\u7684\u53f6\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a Li(i=1,2,...,n) \u3002\u53ef\u4ee5\u8bc1\u660e\u970d\u592b\u66fc\u6811\u7684 WPL \u662f\u6700\u5c0f\u7684\u3002 Huffman \u7b97\u6cd5 \u5047\u8bbe\u6709 n \u4e2a\u6743\u503c\uff0c\u5219\u6784\u9020\u51fa\u7684\u54c8\u592b\u66fc\u6811\u6709 n \u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002 n \u4e2a\u6743\u503c\u5206\u522b\u8bbe\u4e3a w1,w2,\u2026,wn \uff0c\u5219\u54c8\u592b\u66fc\u6811\u7684\u6784\u9020\u89c4\u5219\u4e3a\uff1a I. \u5c06 w1,w2,\u2026\uff0cwn \u770b\u6210\u662f\u6709 n \u68f5\u6811\u7684\u68ee\u6797(\u6bcf\u68f5\u6811\u4ec5\u6709\u4e00\u4e2a\u7ed3\u70b9)\uff1b II. \u5728\u68ee\u6797\u4e2d\u9009\u51fa\u4e24\u4e2a\u6839\u7ed3\u70b9\u7684\u6743\u503c\u6700\u5c0f\u7684\u6811\u5408\u5e76\uff0c\u4f5c\u4e3a\u4e00\u68f5\u65b0\u6811\u7684\u5de6\u3001\u53f3\u5b50\u6811\uff0c\u4e14\u65b0\u6811\u7684\u6839\u7ed3\u70b9\u6743\u503c\u4e3a\u5176\u5de6\u3001\u53f3\u5b50\u6811\u6839\u7ed3\u70b9\u6743\u503c\u4e4b\u548c\uff1b III. \u4ece\u68ee\u6797\u4e2d\u5220\u9664\u9009\u53d6\u7684\u4e24\u68f5\u6811\uff0c\u5e76\u5c06\u65b0\u6811\u52a0\u5165\u68ee\u6797\uff1b IV. \u91cd\u590d\u6b65\u9aa4 I,II \uff0c\u76f4\u5230\u68ee\u6797\u4e2d\u53ea\u5269\u4e0b\u4e00\u68f5\u6811\u4e3a\u6b62\uff0c\u8be5\u6811\u5373\u4e3a\u6240\u6c42\u7684\u54c8\u592b\u66fc\u6811","title":"Huffman\u6811"},{"location":"cs/ds/#_49","text":"","title":"\u56fe"},{"location":"cs/ds/#_50","text":"\u56fe\u662f\u7531\u9876\u70b9\u548c\u8fb9\u7ec4\u6210\u7684\uff0c\u53ef\u4ee5\u65e0\u8fb9\uff0c\u4f46\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u9876\u70b9\u3002 \\[ G = (V,E) \\] V \u4ee3\u8868\u56fe\u4e2d\u8282\u70b9\u7684\u96c6\u5408\uff0c E \u4ee3\u8868\u56fe\u4e2d\u8fb9\u6216\u662f\u5173\u7cfb\u7684\u96c6\u5408\u3002 \u7a20\u5bc6\u56fe \uff1a\u56fe\u4e2d E \u7684\u6761\u6570\u63a5\u8fd1 \\(V^2\\) \u4e5f\u5c31\u662f\uff0c\u63a5\u8fd1\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u76f8\u8fde\u3002 \u7a00\u758f\u56fe \uff1a\u56fe\u4e2d E \u7684\u6761\u6570\u8fdc\u5c0f\u4e8e \\(V^2\\) \u3002","title":"\u5b9a\u4e49"},{"location":"cs/ds/#_51","text":"\u56fe\u53ef\u4ee5\u5206\u4e3a \u6709\u5411\u56fe \u548c \u65e0\u5411\u56fe \uff0c\u5728\u56fe\u4e2d\uff1a (v, w) \u8868\u793a\u65e0\u5411\u8fb9\uff0c\u5373 v \u548c w \u662f\u4e92\u901a\u7684 <v, w> \u8868\u793a\u6709\u5411\u8fb9\uff0c\u8be5\u8fb9\u59cb\u4e8e v \uff0c\u7ec8\u4e8e w \u56fe\u53ef\u4ee5\u5206\u4e3a \u6709\u6743\u56fe \u548c \u65e0\u6743\u56fe \uff1a \u6709\u6743\u56fe\uff1a\u6bcf\u6761\u8fb9\u5177\u6709\u4e00\u5b9a\u7684\u6743\u91cd (weight) \uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u6570\u5b57 \u65e0\u6743\u56fe\uff1a\u6bcf\u6761\u8fb9\u5747\u6ca1\u6709\u6743\u91cd\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6743\u91cd\u90fd\u76f8\u540c \u56fe\u53c8\u53ef\u4ee5\u5206\u4e3a \u8fde\u901a\u56fe \u548c \u975e\u8fde\u901a\u56fe \uff1a \u8fde\u901a\u56fe\uff1a\u6240\u6709\u7684\u70b9\u90fd\u6709\u8def\u5f84\u76f8\u8fde \u975e\u8fde\u901a\u56fe\uff1a\u5b58\u5728\u67d0\u4e24\u4e2a\u70b9\u6ca1\u6709\u8def\u5f84\u76f8\u8fde","title":"\u5206\u7c7b"},{"location":"cs/ds/#_52","text":"\u56fe\u4e2d\u7684\u9876\u70b9\u6709\u5ea6\u7684\u6982\u5ff5\uff1a \u5ea6( Degree )\uff1a\u6240\u6709\u4e0e\u5b83\u8fde\u63a5\u70b9\u7684\u4e2a\u6570\u4e4b\u548c \u5165\u5ea6( Indegree )\uff1a\u5b58\u5728\u4e8e\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u63a5\u5165\u8be5\u70b9\u7684\u8fb9\u6570\u4e4b\u548c \u51fa\u5ea6( Outdegree )\uff1a\u5b58\u5728\u4e8e\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u63a5\u51fa\u8be5\u70b9\u7684\u8fb9\u6570\u4e4b\u548c","title":"\u672f\u8bed"},{"location":"cs/ds/#_53","text":"","title":"\u8868\u793a"},{"location":"cs/ds/#_54","text":"\u4f7f\u7528\u4e00\u4e2a V\u00d7V \u7684\u4e8c\u4f4d\u6570\u7ec4 ve \u8868\u793a\u77e9\u9635\uff0c\u5047\u8bbe i \u8282\u70b9\u4e8e j \u8282\u70b9\u8fde\u901a\uff0c\u90a3\u4e48 ve[i][j]=1 \u3002 \u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u8868\u793a\u6709\u5411\u56fe\uff0c\u548c\u6709\u6743\u91cd\u56fe\uff1a ve[j][i]=3 \u8868\u793a j -> i \u6743\u91cd\u4e3a 3 \u3002 \u5728 n \u4e2a\u9876\u70b9\u7684\u56fe\u9700\u8981\u6709\u4e00\u4e2a n \u00d7 n \u5927\u5c0f\u7684\u77e9\u9635 \u5728\u4e00\u4e2a\u65e0\u6743\u56fe\u4e2d\uff0c\u77e9\u9635\u5750\u6807\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u503c\u4e3a 1 \u4ee3\u8868\u4e24\u4e2a\u70b9\u662f\u76f8\u8fde\u7684\uff0c 0 \u8868\u793a\u4e24\u70b9\u662f\u4e0d\u76f8\u8fde\u7684 \u5728\u4e00\u4e2a\u6709\u6743\u56fe\u4e2d\uff0c\u77e9\u9635\u5750\u6807\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u503c\u4ee3\u8868\u8be5\u4e24\u70b9\u4e4b\u95f4\u7684\u6743\u91cd\uff0c 0 \u8868\u793a\u8be5\u4e24\u70b9\u4e0d\u76f8\u8fde \u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u90bb\u63a5\u77e9\u9635\u5173\u4e8e\u5bf9\u89d2\u7ebf\u76f8\u7b49 \u4f18\u70b9 \u5bf9\u4e8e\u7a20\u5bc6\u56fe\u80fd\u591f\u6709\u6548\u7684\u8282\u7701\u7a7a\u95f4\u3002 \u8868\u793a\u4e0a\u5f88\u76f4\u89c2\uff0c\u5bb9\u6613\u5224\u65ad\u51fa\u90a3\u4e24\u70b9\u4e4b\u95f4\u76f8\u8fde\u3002 \u7f3a\u70b9 \u5728\u77e9\u9635\u751f\u6210\u65f6\uff0c\u8282\u70b9\u4e2a\u6570\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0c\u53ea\u80fd\u6dfb\u52a0\u8fb9\uff0c\u4e0d\u80fd\u518d\u6dfb\u52a0\u8282\u70b9\u3002 \u5982\u679c\u8981\u6dfb\u52a0\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u91cd\u65b0\u5206\u914d\u77e9\u9635\uff0c\u4ee3\u4ef7\u5927\u3002 \u5bf9\u4e8e\u7a00\u758f\u56fe\uff0c\u6d6a\u8d39\u7a7a\u95f4\u3002 \u5728\u67d0\u4e9b\u7b97\u6cd5\u7684\u65f6\u5019\u9700\u8981\u4e3a\u8282\u70b9\u4fdd\u5b58\u989d\u5916\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528\u989d\u5916\u7684\u5bb9\u5668","title":"\u90bb\u63a5\u77e9\u9635"},{"location":"cs/ds/#_55","text":"\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u8868\u793a\u6bcf\u4e2a\u8282\u70b9\uff1a struct Node { int ket; Node to; //..\u5176\u4ed6\u4fe1\u606f } \u5176\u4e2d to \u53d8\u91cf\u6307\u5411\u94fe\u63a5\u8be5\u8282\u70b9 i \u6307\u5411\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9 j \uff0c\u7136\u540e j \u8282\u70b9\u4e2d\u7684 to \u6307\u5411 i \u8282\u70b9\u6307\u5411\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u90bb\u63a5\u77e9\u9635\u8868\u793a\u7684\u65b9\u6cd5\u7075\u6d3b\u65b9\u4fbf\uff0c\u80fd\u591f\u4e34\u65f6\u6dfb\u52a0\u8282\u70b9\u548c\u8fb9\u3002 \u8868\u793a\u6709\u5411\u56fe\uff0c\u6709\u6743\u91cd\u56fe\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u7b97\u6cd5\uff0c\u6dfb\u52a0\u4e0d\u540c\u7684\u53d8\u91cf\u3002\u4f46\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u4f53\u79ef\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5b58\u50a8\u7740\u4e00\u4e2a\u94fe\u8868\uff0c\u7528\u6765\u6307\u5411\u6240\u6709\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u70b9 \u5bf9\u4e8e\u6709\u6743\u56fe\u6765\u8bf4\uff0c\u94fe\u8868\u4e2d\u5143\u7d20\u503c\u5bf9\u5e94\u7740\u6743\u91cd \u7f3a\u70b9 \u7a20\u5bc6\u56fe\u4e2d\u6d6a\u8d39\u7a7a\u95f4 \u4e0d\u76f4\u89c2\uff0c\u5728\u6709\u5411\u56fe\u4e2d\u5982\u679c\u8981\u540c\u65f6\u8868\u793a\u6307\u5411\u672c\u8282\u70b9\u7684\u8282\u70b9\uff0c\u548c\u672c\u8282\u70b9\u6307\u5411\u7684\u8282\u70b9\uff0c\u9700\u8981\u989d\u5916\u7684\u4e00\u4e2a\u5b57\u6bb5\u3002","title":"\u90bb\u63a5\u94fe\u8868"},{"location":"cs/ds/#_56","text":"","title":"\u793a\u610f\u56fe"},{"location":"cs/ds/#_57","text":"","title":"\u65e0\u5411\u65e0\u6743\u56fe"},{"location":"cs/ds/#_58","text":"","title":"\u65e0\u5411\u6709\u6743\u56fe"},{"location":"cs/ds/#_59","text":"","title":"\u6709\u5411\u6709\u6743\u56fe"},{"location":"cs/ds/#_60","text":"\u90bb\u63a5\u77e9\u9635\u7531\u4e8e\u6ca1\u6709\u76f8\u8fde\u7684\u8fb9\u4e5f\u5360\u6709\u7a7a\u95f4\uff0c\u56e0\u6b64\u5b58\u5728\u6d6a\u8d39\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u800c\u90bb\u63a5\u94fe\u8868\u5219\u6bd4\u8f83\u5408\u7406\u5730\u5229\u7528\u7a7a\u95f4 \u90bb\u63a5\u94fe\u8868\u6bd4\u8f83\u8017\u65f6\uff0c\u727a\u7272\u5f88\u5927\u7684\u65f6\u95f4\u6765\u67e5\u627e\uff0c\u56e0\u6b64\u6bd4\u8f83\u8017\u65f6\uff0c\u800c\u90bb\u63a5\u77e9\u9635\u6cd5\u76f8\u6bd4\u90bb\u63a5\u94fe\u8868\u6cd5\u6765\u8bf4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\u3002","title":"\u5bf9\u6bd4"},{"location":"cs/ds/#_61","text":"","title":"\u904d\u5386"},{"location":"cs/ds/#depth-first-searchdfs","text":"","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386(Depth First Search\uff0cDFS)"},{"location":"cs/ds/#_62","text":"\u4ece\u56fe\u4e2d\u67d0\u9876\u70b9 v \u51fa\u53d1 \u8bbf\u95ee\u9876\u70b9 v \u4ece v \u7684\u672a\u88ab\u8bbf\u95ee\u7684\u90bb\u63a5\u70b9\u4e2d\u9009\u53d6\u4e00\u4e2a\u9876\u70b9 w \uff0c\u4ece w \u51fa\u53d1\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386 \u91cd\u590d\u4e0a\u8ff0\u4e24\u6b65\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u548c v \u6709\u8def\u5f84\u76f8\u901a\u7684\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u5230","title":"\u57fa\u672c\u601d\u8def"},{"location":"cs/ds/#_63","text":"//\u7c7b\u4f3c\u4e8e\u6811\u7684\u5148\u5e8f\u904d\u5386 public void DFS(Vertex V) { visited[V] = true; for(W : each adjacent potin of V) { if(!visited[W]) { DFS(W); } } }","title":"\u4f2a\u4ee3\u7801"},{"location":"cs/ds/#breadth-first-searchbfs","text":"BFS \u9700\u8981\u4e00\u4e2a\u961f\u5217\u4ee5\u4fdd\u6301\u904d\u5386\u8fc7\u7684\u9876\u70b9\u987a\u5e8f\uff0c\u4ee5\u4fbf\u6309\u51fa\u961f\u7684\u987a\u5e8f\u518d\u53bb\u8bbf\u95ee\u8fd9\u4e9b\u9876\u70b9\u7684\u90bb\u63a5\u9876\u70b9\u3002","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22(Breadth First Search\uff0cBFS)"},{"location":"cs/ds/#_64","text":"\u9876\u70b9 v \u5165\u961f\u5217 \u5f53\u961f\u5217\u975e\u7a7a\u65f6\u5219\u7ee7\u7eed\u6267\u884c\uff0c\u5426\u5219\u7b97\u6cd5\u7ed3\u675f \u51fa\u961f\u5217\u53d6\u5f97\u961f\u5934\u9876\u70b9 v \uff1b\u8bbf\u95ee\u9876\u70b9 v \u5e76\u6807\u8bb0\u9876\u70b9 v \u5df2\u88ab\u8bbf\u95ee \u67e5\u627e\u9876\u70b9 v \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u9876\u70b9 col \u82e5 v \u7684\u90bb\u63a5\u9876\u70b9 col \u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\uff0c\u5219 col \u7ee7\u7eed \u67e5\u627e\u9876\u70b9 v \u7684\u53e6\u4e00\u4e2a\u65b0\u7684\u90bb\u63a5\u9876\u70b9 col \uff0c\u8f6c\u5230\u6b65\u9aa4 5 \u5165\u961f\u5217\uff0c\u76f4\u5230\u9876\u70b9 v \u7684\u6240\u6709\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u70b9\u5904\u7406\u5b8c\u3002\u8f6c\u5230\u6b65\u9aa4 2","title":"\u5b9e\u73b0\u601d\u8def"},{"location":"cs/ds/#_65","text":"","title":"\u62d3\u6251\u6392\u5e8f"},{"location":"cs/ds/#_66","text":"\u56fe\u4e2d\u8282\u70b9\u89c6\u4e3a\u4e8b\u4ef6\uff0c\u62d3\u6251\u6392\u5e8f\u7684\u76ee\u7684\u662f\u4f9d\u636e\u56fe\u4e2d\u4e8b\u4ef6\u53d1\u751f\u7684\u5148\u540e\u987a\u5e8f\u7ed9\u51fa\u4e00\u4e2a\u53ef\u80fd\u7684\u6392\u5e8f\u3002 \u56fe\u80fd\u591f\u8fdb\u884c\u56fe\u8c31\u6392\u5e8f\u7684\u524d\u63d0\uff1a \u6709\u5411\u56fe\uff1a\u6709\u5411\u56fe\u624d\u80fd\u8868\u793a\u4e24\u4ef6\u4e8b\u60c5\u4e4b\u95f4\u53d1\u751f\u7684\u5148\u540e\u5173\u7cfb\u3002 \u65e0\u73af\uff1a\u4e5f\u5c31\u662f\u4e0d\u5b58\u5728\u73af\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u90a3\u4e48\u4e8b\u4ef6\u53d1\u751f\u7684\u5148\u540e\u5173\u7cfb\u5c06\u4e0d\u786e\u5b9a\u3002","title":"\u662f\u4ec0\u4e48"},{"location":"cs/ds/#_67","text":"\u5168\u5e8f\u6307\u7684\u662f\u4e00\u4e2a\u96c6\u5408\u4e2d \u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u80fd\u591f\u6bd4\u8f83 \uff0c\u4e5f\u5c31\u662f\u8bf4\u80fd\u591f\u6392\u5e8f\u3002 \u504f\u5e8f\u6307\u7684\u662f\uff0c\u96c6\u5408\u4e2d\u5b58\u5728\u4e0d\u80fd\u6bd4\u8f83\u7684\u5143\u7d20(\u8fd9\u91cc\u7684\u4e0d\u80fd\u662f\u6307\u7684\u67d0\u4e00\u5bf9\u4e4b\u95f4\u4e0d\u80fd\uff0c\u800c\u4e0d\u662f\u8be5\u5143\u7d20\u548c\u5176\u4ed6\u5143\u7d20\u4e0d\u80fd\u6bd4\u8f83)\u6bd4\u5982\u8bf4\uff0c\u5feb\u6392\u662f\u4e00\u79cd\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\uff0c\u56e0\u4e3a\u4e24\u4e2a\u503c\u76f8\u540c\u7684\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u3002\u800c\u9009\u62e9\u6392\u5e8f\u9664\u4e86\u6bd4\u8f83\u6307\u7684\u5927\u5c0f\u4ee5\u5916\uff0c\u8fd8\u6bd4\u8f83\u4e86\u4e24\u4e2a\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u3002","title":"\u5168\u5e8f\u548c\u504f\u5e8f"},{"location":"cs/ds/#minimum-spanning-treesmst","text":"","title":"\u6700\u5c0f\u751f\u6210\u6811(Minimum Spanning Trees,MST)"},{"location":"cs/ds/#_68","text":"\u8981\u5728 n \u4e2a\u57ce\u5e02\u4e4b\u95f4\u94fa\u8bbe\u5149\u7f06\uff0c\u4e3b\u8981\u76ee\u6807\u662f\u8981\u4f7f\u8fd9 n \u4e2a\u57ce\u5e02\u7684\u4efb\u610f\u4e24\u4e2a\u4e4b\u95f4\u90fd\u53ef\u4ee5\u901a\u4fe1\uff0c\u4f46\u94fa\u8bbe\u5149\u7f06\u7684\u8d39\u7528\u5f88\u9ad8\uff0c\u4e14\u5404\u4e2a\u57ce\u5e02\u4e4b\u95f4\u94fa\u8bbe\u5149\u7f06\u7684\u8d39\u7528\u4e0d\u540c\uff0c\u56e0\u6b64\u53e6\u4e00\u4e2a\u76ee\u6807\u662f\u8981\u4f7f\u94fa\u8bbe\u5149\u7f06\u7684\u603b\u8d39\u7528\u6700\u4f4e\u3002\u8fd9\u5c31\u9700\u8981\u627e\u5230\u5e26\u6743\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"\u63d0\u51fa\u95ee\u9898"},{"location":"cs/ds/#_69","text":"\u8be5\u6811\u662f\u8fde\u901a\u7684 \u6743\u503c\u4e4b\u548c\u6700\u5c0f \u8fb9\u6570\u6bd4\u9876\u70b9\u4e2a\u6570\u5c11 1","title":"\u7279\u70b9"},{"location":"cs/ds/#_70","text":"\u6700\u5c0f\u751f\u6210\u6811\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u3002 \u5f53\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u6743\u503c\u90fd\u76f8\u540c\u65f6\uff0c\u8be5\u56fe\u7684\u6240\u6709\u751f\u6210\u6811\u90fd\u662f\u6700\u5c0f\u751f\u6210\u6811 \u5982\u679c\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u6743\u503c\u90fd\u4e92\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6700\u5c0f\u751f\u6210\u6811\u5c06\u53ea\u6709\u4e00\u4e2a \u751f\u6210\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u4e00\u822c\u6709\u4e24\u79cd\uff0c\u5206\u522b\u662f Prim \u7b97\u6cd5\u548c Kruskal \u7b97\u6cd5","title":"\u5b58\u5728\u4e2a\u6570"},{"location":"cs/ds/#prim","text":"\u7b97\u6cd5\u6b65\u9aa4 \u8f93\u5165\uff1a\u4e00\u4e2a\u52a0\u6743\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u9876\u70b9\u96c6\u5408\u4e3a V \uff0c\u8fb9\u96c6\u5408\u4e3a E \uff1b \u521d\u59cb\u5316\uff1a \\(V_{new}= \\{x\\}\\) \uff0c\u5176\u4e2d x \u4e3a\u96c6\u5408 V \u4e2d\u7684\u4efb\u4e00\u8282\u70b9(\u8d77\u59cb\u70b9)\uff0c \\(Enew = \\{\\}\\) (\u4e3a\u7a7a)\uff1b \u5728\u96c6\u5408 E \u4e2d\u9009\u53d6\u6743\u503c\u6700\u5c0f\u7684\u8fb9 <u, v> \uff0c\u5176\u4e2d u \u4e3a\u96c6\u5408 \\(V_{new}\\) \u4e2d\u7684\u5143\u7d20\uff0c\u800c v \u4e0d\u5728 \\(V_{new}\\) \u96c6\u5408\u5f53\u4e2d\uff0c\u5e76\u4e14 \\(v\u2208V\\) (\u5982\u679c\u5b58\u5728\u6709\u591a\u6761\u6ee1\u8db3\u524d\u8ff0\u6761\u4ef6\u5373\u5177\u6709\u76f8\u540c\u6743\u503c\u7684\u8fb9\uff0c\u5219\u53ef\u4efb\u610f\u9009\u53d6\u5176\u4e2d\u4e4b\u4e00)\uff1b \u5c06 v \u52a0\u5165\u96c6\u5408 \\(V_{new}\\) \u4e2d\uff0c\u5c06 <u, v> \u8fb9\u52a0\u5165\u96c6\u5408 \\(E_{new}\\) \u4e2d\uff1b \u91cd\u590d\u6b65\u9aa4 3 \u3001 4 \u76f4\u5230 \\(V_{new} = V\\) \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(V^2)\\)","title":"Prim \u7b97\u6cd5"},{"location":"cs/ds/#kruskal","text":"\u9700\u8981\u4e00\u4e2a\u96c6\u5408\u7528\u6765\u5347\u5e8f\u5b58\u50a8\u6240\u6709\u8fb9\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u5148\u6784\u9020\u4e00\u4e2a\u53ea\u542b\u6709 n \u4e2a\u9876\u70b9\uff0c\u800c\u8fb9\u96c6\u4e3a\u7a7a\u7684\u5b50\u56fe\uff1b \u4ece\u8fb9\u96c6 E \u4e2d\u9009\u53d6\u4e00\u6761\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u82e5\u8be5\u6761\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5206\u5c5e\u4e0d\u540c\u7684\u6811\uff0c\u5219\u5c06\u5176\u52a0\u5165\u5b50\u56fe\u3002(\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u8fd9\u4e24\u4e2a\u9876\u70b9\u5206\u522b\u6240\u5728\u7684\u4e24\u68f5\u6811\u5408\u6210\u4e00\u68f5\u6811)\u53cd\u4e4b\uff0c\u82e5\u8be5\u6761\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5df2\u843d\u5728\u540c\u4e00\u68f5\u6811\u4e0a\uff0c\u5219\u4e0d\u53ef\u53d6\uff0c\u800c\u5e94\u8be5\u53d6\u4e0b\u4e00\u6761\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u518d\u8bd5\u4e4b\uff1b \u91cd\u590d\u6b65\u9aa4 2 \uff0c\u76f4\u5230\u6240\u6709\u70b9\u8fde\u901a\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(Elog_2V)\\)","title":"Kruskal \u7b97\u6cd5"},{"location":"cs/ds/#_71","text":"","title":"\u6700\u77ed\u8def\u5f84\u95ee\u9898"},{"location":"cs/ds/#dijkstra","text":"","title":"Dijkstra\u7b97\u6cd5"},{"location":"cs/ds/#_72","text":"Dijkstra \u7b97\u6cd5\u662f\u5178\u578b\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u4e3b\u8981\u7279\u70b9\u662f\u4ee5\u8d77\u59cb\u70b9\u4e3a\u4e2d\u5fc3\u5411\u5916\u5c42\u5c42\u6269\u5c55\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7ec8\u70b9\u4e3a\u6b62\u3002 Dijkstra \u7b97\u6cd5\u8981\u6c42\u56fe\u4e2d\u4e0d\u5b58\u5728\u8d1f\u6743\u8fb9\u3002","title":"\u662f\u4ec0\u4e48"},{"location":"cs/ds/#_73","text":"\u5728\u65e0\u5411\u56fe G=(V,E) \u4e2d\uff0c\u5047\u8bbe\u6bcf\u6761\u8fb9 E[i] \u7684\u957f\u5ea6\u4e3a w[i] \uff0c\u627e\u5230\u7531\u9876\u70b9 V0 \u5230\u5176\u4f59\u5404\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"cs/ds/#_74","text":"\u8bbe G=(V,E) \u662f\u4e00\u4e2a\u5e26\u6743\u6709\u5411\u56fe\uff0c\u628a\u56fe\u4e2d\u9876\u70b9\u96c6\u5408 V \u5206\u6210\u4e24\u7ec4\uff0c\u7b2c\u4e00\u7ec4\u4e3a\u5df2\u6c42\u51fa\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u96c6\u5408(\u7528 S \u8868\u793a\uff0c\u521d\u59cb\u65f6 S \u4e2d\u53ea\u6709\u4e00\u4e2a\u6e90\u70b9\uff0c\u4ee5\u540e\u6bcf\u6c42\u5f97\u4e00\u6761\u6700\u77ed\u8def\u5f84 , \u5c31\u5c06\u52a0\u5165\u5230\u96c6\u5408 S \u4e2d\uff0c\u76f4\u5230\u5168\u90e8\u9876\u70b9\u90fd\u52a0\u5165\u5230 S \u4e2d\uff0c\u7b97\u6cd5\u5c31\u7ed3\u675f\u4e86)\uff0c\u7b2c\u4e8c\u7ec4\u4e3a\u5176\u4f59\u672a\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u96c6\u5408(\u7528 U \u8868\u793a)\uff0c\u6309\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u7684\u9012\u589e\u6b21\u5e8f\u4f9d\u6b21\u628a\u7b2c\u4e8c\u7ec4\u7684\u9876\u70b9\u52a0\u5165 S \u4e2d\u3002\u5728\u52a0\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0c\u603b\u4fdd\u6301\u4ece\u6e90\u70b9 v \u5230 S \u4e2d\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e0d\u5927\u4e8e\u4ece\u6e90\u70b9 v \u5230 U \u4e2d\u4efb\u4f55\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u4e2a\u8ddd\u79bb\uff0c S \u4e2d\u7684\u9876\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u4ece v \u5230\u6b64\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c U \u4e2d\u7684\u9876\u70b9\u7684\u8ddd\u79bb\uff0c\u662f\u4ece v \u5230\u6b64\u9876\u70b9\u53ea\u5305\u62ec S \u4e2d\u7684\u9876\u70b9\u4e3a\u4e2d\u95f4\u9876\u70b9\u7684\u5f53\u524d\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"cs/ds/#_75","text":"I. \u521d\u59cb\u65f6\uff0c S \u53ea\u5305\u542b\u6e90\u70b9\uff0c\u5373 S\uff1d{v} \uff0c v \u7684\u8ddd\u79bb\u4e3a 0 \u3002 U \u5305\u542b\u9664 v \u5916\u7684\u5176\u4ed6\u9876\u70b9\uff0c\u5373\uff1a U=V-{v} \uff0c\u82e5 v \u4e0e U \u4e2d\u9876\u70b9 u \u6709\u8fb9\uff0c\u5219 <u,v> \u6b63\u5e38\u6709\u6743\u503c\uff0c\u82e5 u \u4e0d\u662f v \u7684\u51fa\u8fb9\u90bb\u63a5\u70b9\uff0c\u5219 <u,v> \u6743\u503c\u4e3a \u221e \u3002 II. \u4ece U \u4e2d\u9009\u53d6\u4e00\u4e2a\u8ddd\u79bb v \u6700\u5c0f\u7684\u9876\u70b9 k \uff0c\u628a k \u52a0\u5165 S \u4e2d(\u8be5\u9009\u5b9a\u7684\u8ddd\u79bb\u5c31\u662f v \u5230 k \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6)\u3002 III. \u4ee5 k \u4e3a\u65b0\u8003\u8651\u7684\u4e2d\u95f4\u70b9\uff0c\u4fee\u6539 U \u4e2d\u5404\u9876\u70b9\u7684\u8ddd\u79bb\uff1b\u82e5\u4ece\u6e90\u70b9 v \u5230\u9876\u70b9 u \u7684\u8ddd\u79bb(\u7ecf\u8fc7\u9876\u70b9 k )\u6bd4\u539f\u6765\u8ddd\u79bb(\u4e0d\u7ecf\u8fc7\u9876\u70b9 k )\u77ed\uff0c\u5219\u4fee\u6539\u9876\u70b9 u \u7684\u8ddd\u79bb\u503c\uff0c\u4fee\u6539\u540e\u7684\u8ddd\u79bb\u503c\u7684\u9876\u70b9 k \u7684\u8ddd\u79bb\u52a0\u4e0a\u8fb9\u4e0a\u7684\u6743\u3002 IV. \u91cd\u590d\u6b65\u9aa4 II \u548c III \u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u5305\u542b\u5728 S \u4e2d\u3002 \u793a\u610f\u56fe\u5982\u4e0b\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"cs/ds/#_76","text":"function Dijkstra(G, w, s) for each vertex v in V[G] // \u521d\u59cb\u5316 d[v] := infinity // \u5c06\u5404\u70b9\u7684\u5df2\u77e5\u6700\u77ed\u8ddd\u79bb\u5148\u8bbe\u6210\u65e0\u7a77\u5927 previous[v] := undefined // \u5404\u70b9\u7684\u5df2\u77e5\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u524d\u8d8b\u90fd\u672a\u77e5 d[s] := 0 // \u56e0\u4e3a\u51fa\u53d1\u70b9\u5230\u51fa\u53d1\u70b9\u95f4\u4e0d\u9700\u79fb\u52a8\u4efb\u4f55\u8ddd\u79bb\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5c06s\u5230s\u7684\u6700\u5c0f\u8ddd\u79bb\u8bbe\u4e3a0 S := empty set Q := set of all vertices while Q is not an empty set // Dijkstra\u7b97\u6cd5\u4e3b\u4f53 u := Extract_Min(Q) S.append(u) for each edge outgoing from u as (u,v) if d[v] > d[u] + w(u,v) // \u62d3\u5c55\u8fb9\uff08u,v\uff09\u3002w(u,v)\u4e3a\u4eceu\u5230v\u7684\u8def\u5f84\u957f\u5ea6\u3002 d[v] := d[u] + w(u,v) // \u66f4\u65b0\u8def\u5f84\u957f\u5ea6\u5230\u66f4\u5c0f\u7684\u90a3\u4e2a\u548c\u503c\u3002 previous[v] := u // \u7eaa\u5f55\u524d\u8d8b\u9876\u70b9","title":"\u4f2a\u4ee3\u7801"},{"location":"cs/ds/#floyd","text":"","title":"Floyd\u7b97\u6cd5"},{"location":"cs/ds/#_77","text":"Floyd-Warshall \u7b97\u6cd5\u662f\u89e3\u51b3\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u5f84\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u6709\u5411\u56fe\u6216\u8d1f\u6743\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u540c\u65f6\u4e5f\u88ab\u7528\u4e8e\u8ba1\u7b97\u6709\u5411\u56fe\u7684\u4f20\u9012\u95ed\u5305\u3002 Floyd-Warshall \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^3)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^2)\\) \u3002","title":"\u662f\u4ec0\u4e48"},{"location":"cs/ds/#_78","text":"Floyd \u7b97\u6cd5\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9996\u5148\u6211\u4eec\u7684\u76ee\u6807\u662f\u5bfb\u627e\u4ece\u70b9 i \u5230\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u3002\u4ece\u52a8\u6001\u89c4\u5212\u7684\u89d2\u5ea6\u770b\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u76ee\u6807\u91cd\u65b0\u505a\u4e00\u4e2a\u8be0\u91ca\u3002 \u4ece\u4efb\u610f\u8282\u70b9 i \u5230\u4efb\u610f\u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u4e0d\u5916\u4e4e 2 \u79cd\u53ef\u80fd\uff0c\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ece i \u5230 j\uff0c\u7b2c\u4e8c\u79cd\u662f\u4ece i \u7ecf\u8fc7\u82e5\u5e72\u4e2a\u8282\u70b9 k \u5230 j \u3002\u6240\u4ee5\uff0c\u5047\u8bbe distance(i,j) \u4e3a\u8282\u70b9 u \u5230\u8282\u70b9 v \u7684\u6700\u77ed\u8def\u5f84\u7684\u8ddd\u79bb\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 k \uff0c\u68c0\u67e5 distance(i,k) + distance(k,j) < distance(i,j) \u662f\u5426\u6210\u7acb\uff0c\u5982\u679c\u6210\u7acb\uff0c\u8bc1\u660e\u4ece i \u5230 k \u518d\u5230 j \u7684\u8def\u5f84\u6bd4 i \u76f4\u63a5\u5230 j \u7684\u8def\u5f84\u77ed\uff0c\u5c31\u8bbe\u7f6e distance(i,j) = distance(i,k) + distance(k,j) \uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5f53\u904d\u5386\u5b8c\u6240\u6709\u8282\u70b9 k \uff0c distance(i,j) \u4e2d\u8bb0\u5f55\u7684\u4fbf\u662f i \u5230 j \u7684\u6700\u77ed\u8def\u5f84\u7684\u8ddd\u79bb\u3002","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"cs/ds/#_79","text":"I. \u4ece\u4efb\u610f\u4e00\u6761\u5355\u8fb9\u8def\u5f84\u5f00\u59cb\u3002\u6240\u6709\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u8fb9\u7684\u6743\uff0c\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fb9\u76f8\u8fde\uff0c\u5219\u6743\u4e3a\u65e0\u7a77\u5927\u3002 II. \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u9876\u70b9 u \u548c v \uff0c\u770b\u770b\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u9876\u70b9 w \u4f7f\u5f97\u4ece u \u5230 w \u518d\u5230 v \u6bd4\u5df1\u77e5\u7684\u8def\u5f84\u66f4\u77ed\u3002\u5982\u679c\u662f\u66f4\u65b0\u5b83\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"cs/ds/#_80","text":"let dist be a |V| \u00d7 |V| array of minimum distances initialized to \u221e (infinity) for each vertex v dist[v][v] \u2190 0 for each edge (u,v) dist[u][v] \u2190 w(u,v) // the weight of the edge (u,v) for k from 1 to |V| for i from 1 to |V| for j from 1 to |V| if dist[i][j] > dist[i][k] + dist[k][j] dist[i][j] \u2190 dist[i][k] + dist[k][j] end if","title":"\u4f2a\u4ee3\u7801"},{"location":"cs/ds/#_81","text":"\u6570\u636e\u7ed3\u6784 - Wikipedia","title":"\u53c2\u8003\u8d44\u6599"},{"location":"rs/","text":"\u8d44\u6e90 \u00b6 \u2702\ufe0f Modern copy to clipboard. No Flash. Just 3kb gzipped \ud83d\udccb https://github.com/zenorocha/clipboard.js Best practices for modern web development https://github.com/google/WebFundamentals \u300a\u4e00\u8d77\u5b66 Node.js\u300b https://github.com/nswbmw/N-blog Scalable user load testing tool written in Python https://github.com/locustio/locust Go by Example https://github.com/mmcgrana/gobyexample \u4e2d\u6587\u7f51\u9875\u91cd\u8bbe\u4e0e\u6392\u7248\uff0c\u4e3a\u4e86\u4e00\u81f4\u5316\u6d4f\u89c8\u5668\u6392\u7248\u6548\u679c\uff0c\u6784\u5efa\u6700\u9002\u5408\u4e2d\u6587\u9605\u8bfb\u7684\u7f51\u9875\u6392\u7248\u3002 https://github.com/sofish/typo.css \u300aGitHub \u6f2b\u6e38\u6307\u5357\u300b\u80fd\u591f\u8ba9\u65b0\u624b\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 GitHub \u7f51\u7ad9\uff0c\u4ece\u800c\u52a0\u5165\u5230\u5f00\u6e90\u793e\u533a\u3002 https://github.com/phodal/github A collection of useful .gitignore templates. https://github.com/github/gitignore \ud83c\udf1f JavaScript Style Guide, with linter & automatic code fixer https://github.com/standard/standard As easy as /aitch-tee-tee-pie/ \ud83e\udd67 Modern, user-friendly command-line HTTP client for the API era. https://github.com/httpie/httpie curl statistics made simple https://github.com/reorx/httpstat Guide to securing and improving privacy on macOS https://github.com/drduh/macOS-Security-and-Privacy-Guide TuShare \u662f\u4e00\u4e2a\u514d\u8d39\u3001\u5f00\u6e90\u7684 Python \u8d22\u7ecf\u6570\u636e\u63a5\u53e3\u5305\u3002 https://github.com/waditu/tushare \u300aLinux \u5de5\u5177\u5feb\u901f\u6559\u7a0b\u300b https://github.com/me115/linuxtools_rst A guide on how to be a Programmer - originally published by Robert L Read. https://github.com/braydie/HowToBeAProgrammer \u672c\u6587\u539f\u6587\u7531\u77e5\u540d Hacker Eric S. Raymond \u6240\u64b0\u5beb\uff0c\u6559\u4f60\u5982\u4f55\u6b63\u78ba\u7684\u63d0\u51fa\u6280\u8853\u554f\u984c\u4e26\u7372\u5f97\u4f60\u6eff\u610f\u7684\u7b54\u6848\u3002 https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way \u4e00\u4e2a\u5341\u5206\u65b9\u4fbf\u3001\u597d\u7528\u7684\u5185\u7f51\u7a7f\u900f\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u628a\u672c\u5730\u67d0\u4e2a\u7aef\u53e3\u7684\u670d\u52a1\uff0c\u901a\u8fc7\u4e00\u4e2a\u5b89\u5168\u96a7\u9053\uff0c\u6620\u5c04\u5230\u516c\u7f51\u7684\u4e00\u4e2a\u5730\u5740\u3002 https://github.com/inconshreveable/ngrok \u4e2d\u56fd\u7a0b\u5e8f\u5458\u5bb9\u6613\u53d1\u97f3\u9519\u8bef\u7684\u5355\u8bcd https://github.com/shimohq/chinese-programmer-wrong-pronunciation Put the output from any script or program into your macOS Menu Bar (the BitBar reboot) https://github.com/matryer/xbar match command-line arguments to their help text https://github.com/idank/explainshell \u5f52\u7eb3\u603b\u7ed3\u4e86\u4e00\u4e2a\u521d\u521b\u4f01\u4e1a\u5728\u5404\u4e2a\u9636\u6bb5\u6240\u671f\u5f85\u7684\u5b89\u5168\u5efa\u8bae\uff0c\u521d\u521b\u4f01\u4e1a\u6240\u638c\u63e1\u7684\u8d44\u91d1\u548c\u6570\u636e\u8d8a\u591a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5b89\u5168\u7684\u6295\u8d44\u4e5f\u8981\u8d8a\u591a\u3002 https://github.com/forter/security-101-for-saas-startups Chinese copywriting guidelines for better written communication\uff0f\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317 https://github.com/sparanoid/chinese-copywriting-guidelines RESTful API \u8bbe\u8ba1\u53c2\u8003\u6587\u732e\u5217\u8868\uff0c\u53ef\u5e2e\u52a9\u4f60\u66f4\u52a0\u5f7b\u5e95\u7684\u4e86\u89e3 REST \u98ce\u683c\u7684\u63a5\u53e3\u8bbe\u8ba1\u3002 https://github.com/aisuhua/restful-api-design-references Golang implementation of JSON Web Tokens (JWT) https://github.com/dgrijalva/jwt-go \ud83c\udfa8 Python Echarts Plotting Library https://github.com/pyecharts/pyecharts Learn regex the easy way https://github.com/ziishaned/learn-regex Code for Tensorflow Machine Learning Cookbook https://github.com/nfmcclure/tensorflow_cookbook TensorFlow tutorials and best practices. https://github.com/vahidk/EffectiveTensorflow High performance, minimalist Go web framework https://github.com/labstack/echo Faker is a Python package that generates fake data for you. https://github.com/joke2k/faker \u4e2d\u56fd 5 \u7ea7\u884c\u653f\u533a\u57df mysql \u5e93 https://github.com/kakuilan/china_area_mysql iOS \u5f00\u53d1\u6d41\u7a0b\u7b14\u8bb0 https://github.com/leecade/ios-dev-flow \u4e2d\u534e\u53e4\u5178\u6587\u96c6\u6570\u636e\u96c6\uff0c\u5305\u542b 5.5 \u4e07\u9996\u5510\u8bd7\u300126 \u4e07\u9996\u5b8b\u8bd7\u548c 2.1 \u4e07\u9996\u5b8b\u8bcd\u3002 https://github.com/chinese-poetry/chinese-poetry A list of cool features of Git and GitHub. https://github.com/tiimgreen/github-cheat-sheet \u2705 The Node.js best practices list (May 2021) https://github.com/goldbergyoni/nodebestpractices Magnificent app which corrects your previous console command. https://github.com/nvbn/thefuck List of advice and tricks for Go \u0295\u25d4\u03d6\u25d4\u0294 https://github.com/cristaloleg/go-advice Flight rules for git https://github.com/k88hudson/git-flight-rules A Fast, Extensible Progress Bar for Python and CLI https://github.com/tqdm/tqdm Checklist of the most important security countermeasures when designing, testing, and releasing your API https://github.com/shieldfy/API-Security-Checklist \u4e2d\u6587\u6280\u672f\u6587\u6863\u7684\u5199\u4f5c\u89c4\u8303 https://github.com/ruanyf/document-style-guide \ud83c\udf93 All things Vim! https://github.com/mhinz/vim-galore HTTP API \u8bbe\u8ba1\u6307\u5357\u3002\u8fd9\u7bc7\u6307\u5357\u4ecb\u7ecd\u63cf\u8ff0\u4e86 HTTP+JSON API \u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6700\u521d\u6458\u5f55\u6574\u7406\u81ea Heroku \u5e73\u53f0\u7684 API \u8bbe\u8ba1\u6307\u5357\u3002 https://github.com/interagent/http-api-design \ud83d\udcda Modern C++ Tutorial: C++11/14/17/20 On the Fly https://github.com/changkun/modern-cpp-tutorial Apache Airflow - A platform to programmatically author, schedule, and monitor workflows https://github.com/apache/airflow \ud83d\udcdd Algorithms and data structures implemented in JavaScript with explanations and links to further readings https://github.com/trekhleb/javascript-algorithms \ud83d\udda4 Create and share beautiful images of your source code https://github.com/carbon-app/carbon \u540e\u7aef\u67b6\u6784\u5e08\u6280\u672f\u56fe\u8c31 https://github.com/xingshaocheng/architect-awesome \u77e5\u540d\u4e92\u8054\u7f51\u516c\u53f8\u7684\u67b6\u6784\u6587\u6863 https://github.com/davideuler/architecture.of.internet-product A collective list of free APIs https://github.com/public-apis/public-apis Apache ECharts is a powerful, interactive charting and data visualization library for browser https://github.com/apache/echarts \u7b80\u60a6 ( SimpRead ) - \u8ba9\u4f60\u77ac\u95f4\u8fdb\u5165\u6c89\u6d78\u5f0f\u9605\u8bfb\u7684\u6269\u5c55 https://github.com/Kenshin/simpread \u4e00\u4efd\u5728\u7f51\u7ad9\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u4e4b\u524d\uff0c\u524d\u7aef\u90e8\u5206\u9700\u8981\u6d4b\u8bd5\u3001\u68c0\u67e5\u7684\u8be6\u5c3d\u6e05\u5355\u3002 https://github.com/thedaviddias/Front-End-Checklist \ud83e\udd13 Build your own (insert technology here) https://github.com/danistefanovic/build-your-own-x \u6536\u96c6&\u63a8\u8350\u4f18\u79c0\u7684 Apps/\u786c\u4ef6/\u6280\u5de7/\u5468\u8fb9\u7b49 https://github.com/hzlzh/Best-App \ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbb\ud83d\udc68\ud83c\udffe\u200d\ud83d\udcbb\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbb\ud83d\udc68\ud83c\udffd\u200d\ud83d\udcbb\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb \u4e2d\u56fd\u72ec\u7acb\u5f00\u53d1\u8005\u9879\u76ee\u5217\u8868 -- \u5206\u4eab\u5927\u5bb6\u90fd\u5728\u505a\u4ec0\u4e48 https://github.com/1c7/chinese-independent-developer Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards. https://github.com/donnemartin/system-design-primer Curated list of project-based tutorials https://github.com/tuvtran/project-based-learning A fresher \"Fork me on GitHub\" callout. https://github.com/tholman/github-corners SVG icons for popular brands https://github.com/simple-icons/simple-icons A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet. https://github.com/fatedier/frp \ud83d\udcd9 \u4e2d\u534e\u65b0\u534e\u5b57\u5178\u6570\u636e\u5e93\u3002\u5305\u62ec\u6b47\u540e\u8bed\uff0c\u6210\u8bed\uff0c\u8bcd\u8bed\uff0c\u6c49\u5b57\u3002 https://github.com/pwxcoo/chinese-xinhua Bring data to life with SVG, Canvas and HTML. \ud83d\udcca\ud83d\udcc8\ud83c\udf89 https://github.com/d3/d3 \ud83d\udcdc 33 JavaScript concepts every developer should know. https://github.com/leonardomso/33-js-concepts Style guides for Google-originated open-source projects https://github.com/google/styleguide A quick reminder of all SQL queries and examples on how to use them. https://github.com/enochtangg/quick-SQL-cheatsheet JavaScript 3D Library. https://github.com/mrdoob/three.js A native OS X KeePass client https://github.com/MacPass/MacPass \ud83d\udd0d A helpful checklist/collection of Search Engine Optimization (SEO) tips and techniques. https://github.com/marcobiedermann/search-engine-optimization \ud83d\udd17 Some useful websites for programmers. https://github.com/sdmg15/Best-websites-a-programmer-should-visit \u300a\u5f00\u6e90\u9879\u76ee\u6323\u94b1\u5b9e\u7528\u624b\u518c\u300b https://github.com/nayafia/lemonade-stand \u9002\u5408\u7a0b\u5e8f\u5458\u7684\u7f16\u7a0b\u5b57\u4f53\u7684\u96c6\u5408\uff0c\u73b0\u5728\u6709 30 \u591a\u79cd\u5947\u5999\u7684\u5b57\u4f53 https://github.com/ProgrammingFonts/ProgrammingFonts A search tool helps dev to solve the naming things problem. https://github.com/unbug/codelf Master the command line, in one page https://github.com/jlevy/the-art-of-command-line \u9493\u9c7c\u7f51\u7ad9\u751f\u6210\u5de5\u5177\u3002 https://github.com/drk1wi/Modlishka Roadmap to becoming an iOS developer in 2018. https://github.com/BohdanOrlov/iOS-Developer-Roadmap \ud83c\udf86Interactive Online Platform that Visualizes Algorithms from Code https://github.com/algorithm-visualizer/algorithm-visualizer \u2699\ufe0f NGINX config generator on steroids \ud83d\udc89 https://github.com/digitalocean/nginxconfig.io A book series on JavaScript. @YDKJS on twitter. https://github.com/getify/You-Dont-Know-JS Drone is a Container-Native, Continuous Delivery Platform https://github.com/drone/drone \ud83d\ude80 \u96f6\u4ee3\u7801\u3001\u70ed\u66f4\u65b0\u3001\u81ea\u52a8\u5316 ORM \u5e93\uff0c\u540e\u7aef\u63a5\u53e3\u548c\u6587\u6863\u96f6\u4ee3\u7801\uff0c\u524d\u7aef(\u5ba2\u6237\u7aef) \u5b9a\u5236\u8fd4\u56de JSON \u7684\u6570\u636e\u548c\u7ed3\u6784\u3002 https://github.com/Tencent/APIJSON pprof is a tool for visualization and analysis of profiling data https://github.com/google/pprof Distributed reliable key-value store for the most critical data of a distributed system https://github.com/etcd-io/etcd Learn Go with test-driven development https://github.com/quii/learn-go-with-tests Simple HTML5 Charts using the <canvas> tag https://github.com/chartjs/Chart.js List of Data Science Cheatsheets to rule the world https://github.com/FavioVazquez/ds-cheatsheets a little native network debugging tool for iOS https://github.com/yagiz/Bagel \u7a0b\u5e8f\u5458\u5982\u4f55\u4f18\u96c5\u7684\u6323\u96f6\u82b1\u94b1\uff0c2.0 \u7248 https://github.com/easychen/howto-make-more-money Free monospaced font with programming ligatures https://github.com/tonsky/FiraCode \u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u5bf9\u56fe\u7247\u548c\u89c6\u9891\u8fdb\u884c\u6362\u8138\u3002 https://github.com/deepfakes/faceswap \u81ea\u52a8\u7f29\u51cf docker \u955c\u50cf\u7684\u4f53\u79ef\u7684\u5de5\u5177\u3002 https://github.com/docker-slim/docker-slim \ud83d\udd25 Seata is an easy-to-use, high-performance, open source distributed transaction solution. https://github.com/seata/seata The Patterns of Scalable, Reliable, and Performant Large-Scale Systems https://github.com/binhnguyennus/awesome-scalability \u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u8bfe\u7a0b\u653b\u7565 https://github.com/PKUanonym/REKCARC-TSC-UHT \u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\u8bfe\u7a0b\u8d44\u6599\u5206\u4eab https://github.com/c-hj/SJTU-Courses How to improve NGINX performance, security, and other important things. https://github.com/trimstray/nginx-admins-handbook \u57fa\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c\u76d1\u7763\u5b66\u4e60\u7684\u5f00\u6e90\u5e93\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4eba\u7684\u9762\u90e8\u3001\u8eaf\u5e72\u548c\u56db\u80a2\u751a\u81f3\u624b\u6307\u7684\u8ddf\u8e2a\u3002 https://github.com/CMU-Perceptual-Computing-Lab/openpose \u6210\u4e3a Go \u5f00\u53d1\u8005\u7684\u5b66\u4e60\u8def\u7ebf\u56fe https://github.com/Alikhll/golang-developer-roadmap \u7f51\u6613\u4e91\u97f3\u4e50 Node.js API service https://github.com/Binaryify/NeteaseCloudMusicApi Git \u63d0\u4ea4\u63cf\u8ff0\uff08commit\uff09\u7684\u7f16\u5199\u6307\u5357 https://github.com/RomuloOliveira/commit-messages-guide \u4e00\u4e2a\u7b80\u5355\u3001\u6613\u7528\u7684 .vimrc \u914d\u7f6e\u6587\u4ef6\u751f\u6210\u5de5\u5177 https://github.com/editor-bootstrap/vim-bootstrap \u7a0b\u5e8f\u5458\u5de5\u4f5c\u4e2d\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u5b9a\u5f8b\u3001\u539f\u5219\u7684\u8bb2\u89e3 https://github.com/dwmkerr/hacker-laws Sample code illustrating the VS Code extension API. https://github.com/microsoft/vscode-extension-samples \u4e00\u5957\u673a\u5668\u5b66\u4e60\u8bfe\u7a0b\u3002 https://github.com/Yorko/mlcourse.ai \u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u7684\u4ee3\u7801\u5b9e\u73b0 https://github.com/fengdu78/lihang-code \ud83d\udc81\u200d\u2640\ufe0fYour new best friend powered by an artificial neural network https://github.com/olivia-ai/olivia \u4e00\u4e2a\u57fa\u4e8e Go \u8bed\u8a00\u5b9e\u73b0\u7684\u62a5\u8b66\u548c\u5904\u7406\u62a5\u8b66\u7cfb\u7edf\u3002 https://github.com/target/goalert Go \u7684\u5206\u5e03\u5f0f\u722c\u866b\u6846\u67b6\u3002 https://github.com/geziyor/geziyor \u81ea\u7531\u94a2\u7434 \ud83c\udfb9 AutoPiano ( https://www.autopiano.cn ) Simple & Elegant Piano Online https://github.com/AutoPiano/AutoPiano \u4e00\u4e2a\u751f\u6210\u6570\u5b66\u6559\u5b66\u89c6\u9891\u7684\u52a8\u753b\u5f15\u64ce\u3002 https://github.com/3b1b/manim \u4e00\u4e2a Python \u5199\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177 https://github.com/soimort/you-get \ud83c\udde8\ud83c\uddf3 Chinese sticker pack,More joy / \u8868\u60c5\u5305\u7684\u535a\u7269\u9986, Github \u6700\u6709\u6bd2\u7684\u4ed3\u5e93, \u4e2d\u56fd\u8868\u60c5\u5305\u5927\u96c6\u5408, \u805a\u6b22\u4e50~ https://github.com/zhaoolee/ChineseBQB \ud83d\udcc4 \ud83c\udde8\ud83c\uddf3 \ud83d\udcc3 \u8bba\u6587\u9605\u8bfb\u7b14\u8bb0\uff08\u5206\u5e03\u5f0f\u7cfb\u7edf\u3001\u865a\u62df\u5316\u3001\u673a\u5668\u5b66\u4e60\uff09Papers Notebook (Distributed System, Virtualization, Machine Learning), created by @gaocegege https://github.com/dyweb/papers-notebook \u7a0b\u5e8f\u5458\u5de5\u4f5c\u4e2d\u5e38\u89c1\u7684\u82f1\u8bed\u8bcd\u6c47 https://github.com/Wei-Xia/most-frequent-technology-english-words \u5404\u79cd\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784\u3001\u6a21\u578b\u548c\u6280\u5de7\u7684\u96c6\u5408\u3002 https://github.com/rasbt/deeplearning-models \u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u3001\u8f7b\u91cf\u7ea7\u7684\u5185\u7f51\u7a7f\u900f\u4ee3\u7406\u670d\u52a1\u5668\u3002 https://github.com/ehang-io/nps \u4e00\u4e2a\u57fa\u4e8e Golang \u8bed\u8a00\u7684 HTTP \u8def\u7531\u5e93\u3002 https://github.com/gorilla/mux A long list of (advanced) JavaScript questions, and their explanations \u2728 https://github.com/lydiahallie/javascript-questions \u300aFlutter \u5b9e\u6218\u300b https://github.com/flutterchina/flutter-in-action AI Code Completions https://github.com/codota/TabNine A collection of resources on modern C++ https://github.com/rigtorp/awesome-modern-cpp \u8c37\u6b4c\u51fa\u54c1\u7684 GitHub API Go \u8bed\u8a00\u7248\u672c\u3002 https://github.com/google/go-github \u624b\u7ed8\u98ce\u683c\u7684 JS \u56fe\u8868\u5e93\u3002 https://github.com/timqian/chart.xkcd \u901a\u8fc7\u8c03\u7528 fullPage \u53ef\u8f7b\u6613\u521b\u5efa\u5168\u5c4f\u6eda\u52a8\u7f51\u7ad9\uff08\u4e5f\u79f0\u4e3a\u5355\u9875\u7f51\u7ad9\uff09\u3002 https://github.com/alvarotrigo/fullPage.js Git \u7684\u5947\u6280\u6deb\u5de7 https://github.com/521xueweihan/git-tips \u4e00\u4e2a\u4e13\u95e8\u4e3a\u4e86\u591a\u8f6e\u4eba\u673a\u5bf9\u8bdd\u800c\u751f\u7684\u6846\u67b6\u3002 https://github.com/RasaHQ/rasa \u4e00\u6b3e\u5728\u4e3b\u6d41\u5bb9\u5668\u8c03\u5ea6\u5e73\u53f0 Kubernetes \u4e4b\u4e0a\u6784\u5efa\u7684\u4f01\u4e1a\u7ea7\u5206\u5e03\u5f0f\u591a\u79df\u6237\u5bb9\u5668\u7ba1\u7406\u5e73\u53f0\u3002 https://github.com/kubesphere/kubesphere \u265elichess.org: the forever free, adless and open source chess server \u265e https://github.com/ornicar/lila \u652f\u6301\u4e3b\u9898\u8bbe\u8ba1\u7684 Markdown \u7f16\u8f91\u5668\uff0c\u8ba9\u6392\u7248\u53d8 Nice https://github.com/mdnice/markdown-nice Questions to ask the company during your interview https://github.com/viraptor/reverse-interview \u547d\u4ee4\u884c\u8f85\u52a9\u5de5\u5177\uff0c\u6709\u4e86\u5b83\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u627e\u4e0d\u5230\u5386\u53f2\u8f93\u5165\u8fc7\u7684\u547d\u4ee4\u3001\u5fd8\u8bb0\u547d\u4ee4\u7b49\u8bf8\u591a\u70e6\u607c https://github.com/denisidoro/navi Zero Allocation JSON Logger https://github.com/rs/zerolog \u4e00\u6b3e\u53ef\u4ee5\u7528\u7535\u8111\u663e\u793a\u5e76\u63a7\u5236 Android \u624b\u673a\u7684\u5f00\u6e90\u5de5\u5177\u3002 https://github.com/Genymobile/scrcpy \u4e00\u6b3e\u514d\u8d39\u5f00\u6e90\u7684 Linux \u7cfb\u7edf\u6027\u80fd\u5b9e\u65f6\u76d1\u63a7\u5de5\u5177\u3002 https://github.com/netdata/netdata Uber \u5185\u90e8\u7684 Go \u98ce\u683c\u89c4\u8303\u3002 https://github.com/uber-go/guide \u65e0\u9700\u914d\u7f6e\uff0c\u6267\u884c\u4e00\u6761\u547d\u4ee4\u8ba9\u672c\u5730\u7684\u5f00\u53d1\u73af\u5883\u5b9e\u73b0 HTTPS \u7684\u5de5\u5177\u3002 https://github.com/FiloSottile/mkcert \u9879\u76ee\u7684 git \u63d0\u4ea4\u8bb0\u5f55\u5c55\u793a\u548c\u7edf\u8ba1\u7684\u5de5\u5177\u3002 https://github.com/arzzen/git-quick-stats \u4e2d\u6587\u8bcd\u5e93\u7684\u96c6\u5408\u3002 https://github.com/fighting41love/funNLP \u4e00\u4e2a\u4f7f\u7528 C++ \u7f16\u5199\u7684\u8fdb\u5ea6\u6761\u5e93\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u5728\u547d\u4ee4\u884c\u4e2d\u5b9e\u73b0\u7f8e\u89c2\u7684\u8fdb\u5ea6\u6761\u3002 https://github.com/p-ranav/indicators The world's simplest facial recognition api for Python and the command line https://github.com/ageitgey/face_recognition \ud83d\udec1 Clean Code concepts adapted for JavaScript https://github.com/ryanmcdermott/clean-code-javascript Python \u7684\u8bcd\u4e91\u751f\u6210\u5de5\u5177\u3002 https://github.com/amueller/word_cloud \u5168\u7403\u5404\u5730 8 \u5343\u591a\u4e2a\u516c\u5f00\u3001\u53ef\u7528\u7684\u7f51\u7edc\u7535\u89c6\u9891\u9053\u96c6\u5408\u3002 https://github.com/iptv-org/iptv \u8be5\u9879\u76ee\u4ecb\u7ecd\u4e86\u73b0\u4ee3 C++\uff08C++11 \u4ee5\u53ca\u4e4b\u540e\u7684\u7248\u672c\uff09\u8bed\u8a00\u548c\u5e93\u7684\u65b0\u7279\u6027\u3002 https://github.com/AnthonyCalandra/modern-cpp-features \u5f00\u6e90\u8d22\u7ecf\u6570\u636e\u63a5\u53e3\u5e93 https://github.com/jindaxiang/akshare List of applications and tools that make my macOS experience even more amazing https://github.com/nikitavoloboev/my-mac-os \u8be5\u6536\u96c6\u4e86\u5404\u7c7b\u5e94\u7528\u7684\u60f3\u6cd5\uff0c\u5e76\u6309\u7167\u6613\u5b66\u7a0b\u5ea6\u628a\u5e94\u7528\u8fdb\u884c\u5212\u5206\u3002 https://github.com/florinpop17/app-ideas \u4e00\u4e2a Git \u547d\u4ee4\u53ef\u89c6\u5316\u5b66\u4e60\u9879\u76ee\u3002 https://github.com/pcottle/learnGitBranching \u5206\u5e03\u5f0f\u722c\u866b\u7ba1\u7406\u5e73\u53f0\uff0c\u652f\u6301\u4efb\u4f55\u8bed\u8a00\u548c\u6846\u67b6 https://github.com/crawlab-team/crawlab \ud83d\ude18 \u8ba9\u4f60\u201c\u7231\u201d\u4e0a GitHub\uff0c\u89e3\u51b3\u8bbf\u95ee\u65f6\u56fe\u88c2\u3001\u52a0\u8f7d\u6162\u7684\u95ee\u9898\u3002\uff08\u65e0\u9700\u5b89\u88c5\uff09 https://github.com/521xueweihan/GitHub520 Neovim \u7684 macOS \u7248 https://github.com/qvacua/vimr \u4e00\u4e2a\u8ba9\u4f60\u7684\u7ec8\u7aef\u8f93\u51fa\u53d8\u5f97\u201c\u82b1\u91cc\u80e1\u54e8\u201d\u7684\u4e09\u65b9\u5e93 https://github.com/willmcgugan/rich \u6570\u636e\u79d1\u5b66\u7684 IPython \u96c6\u5408\u3002 https://github.com/donnemartin/data-science-ipython-notebooks \u80fd\u591f\u628a\u7ec8\u7aef\u6267\u884c\u7684\u547d\u4ee4\u5c55\u793a\u5230\u7f51\u9875\u4e0a\u7684\u5de5\u5177\u3002 https://github.com/yudai/gotty \u53ef\u80fd\u662f Go \u76ee\u524d\u6700\u53d7\u6b22\u8fce\u7684\u7b2c\u4e09\u65b9\u65e5\u5fd7\u5e93\u3002 https://github.com/sirupsen/logrus RESTful web API Documentation Generator. https://github.com/apidoc/apidoc A fast, well-tested and widely used WebSocket implementation for Go. https://github.com/gorilla/websocket \u5728\u4f60\u7684 README \u4e2d\u5c55\u793a\u52a8\u6001\u751f\u6210\u7684 GitHub \u7edf\u8ba1\u4fe1\u606f\u3002 https://github.com/anuraghazra/github-readme-stats \ud83d\ude80\u2728 Help beginners to contribute to open source projects https://github.com/firstcontributions/first-contributions a cheat-sheet for mathematical notation in code form https://github.com/Jam3/math-as-code Python library for converting Python calculations into rendered latex. https://github.com/connorferster/handcalcs The missing star history graph of github repos https://github.com/timqian/star-history \u2705 Solutions to LeetCode by Go, 100% test coverage, runtime beats 100% / LeetCode \u9898\u89e3 https://github.com/halfrost/LeetCode-Go Pure Javascript OCR for more than 100 Languages \ud83d\udcd6\ud83c\udf89\ud83d\udda5 https://github.com/naptha/tesseract.js Jupyter notebooks for teaching/learning Python 3 https://github.com/jerry-git/learn-python3 Play couplet with seq2seq model. \u7528\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u8054\u3002 https://github.com/wb14123/seq2seq-couplet Best Practices, code samples, and documentation for Computer Vision. https://github.com/microsoft/computervision-recipes JavaScript syntax highlighter with language auto-detection and zero dependencies. https://github.com/highlightjs/highlight.js macOS system monitor in your menu bar \u57fa\u4e8e Go \u5b9e\u73b0\u7684\u514d\u8d39\u5185\u7f51\u7a7f\u900f\u670d\u52a1\uff0c\u5373\u5c06\u672c\u5730\u670d\u52a1\u66b4\u9732\u5230\u516c\u7f51\u3002 https://github.com/inlets/inlets \u4e00\u4e2a\u91c7\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684\u514d\u8d39\u3001\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u540c\u6b65\u5de5\u5177\u3002 https://github.com/syncthing/syncthing \u57fa\u4e8e Omi \u548c Omi Snippets \u6784\u5efa\u7684\u94a2\u7434\u5e94\u7528\u3002 https://github.com/Wscats/piano \u2b06\ufe0f Uptime monitor and status page powered by GitHub Actions, Issues, and Pages https://github.com/upptime/upptime Python \u8bbe\u8ba1\u6a21\u5f0f\u548c\u4f7f\u7528\u573a\u666f\u7684\u96c6\u5408 https://github.com/faif/python-patterns A cat(1) clone with wings. https://github.com/sharkdp/bat \ud83d\uddbc\ufe0f A command-line system information tool written in bash 3.2+ https://github.com/dylanaraps/neofetch \u4e00\u4efd SQL \u8bed\u53e5\u7f16\u5199\u98ce\u683c\u5efa\u8bae\u3002 https://github.com/mattm/sql-style-guide \u8be5\u4e66\u6709\u597d\u591a\u590d\u5236\u5c31\u80fd\u7528\u7684 bash \u51fd\u6570\uff0c\u6211\u613f\u79f0\u5176\u4e3a bash \u7684\u201c\u5947\u6280\u6deb\u5de7\u201d\u3002 https://github.com/dylanaraps/pure-bash-bible \u57fa\u4e8e Go \u8bed\u8a00\u7684 HTTP \u538b\u6d4b\u5de5\u5177\u3002 https://github.com/tsenart/vegeta \u4e00\u6b3e Go \u8bed\u8a00\u7684\u8c03\u8bd5\u5de5\u5177\u3002 https://github.com/go-delve/delve \u81ea\u5b9a\u4e49 TouchBar \u7684\u5e94\u7528\u3002 https://github.com/Toxblh/MTMR \u4f7f\u7528 Flutter \u548c Go \u5f00\u53d1\u7684\u300c\u5236\u5b9a\u8ba1\u5212 APP\u300d\u3002 https://github.com/DuanJiaNing/makeaplan_public \u57fa\u4e8e Go \u7684\u5f00\u6e90\u5b9e\u65f6\u6027\u80fd\u5206\u6790\u5e73\u53f0\u3002 https://github.com/pyroscope-io/pyroscope \u7f8e\u89c2\u4e14\u4fbf\u6377\u7684 JavaScript \u6d4b\u8bd5\u6846\u67b6 Jest \u7684\u56fe\u5f62\u754c\u9762\u5de5\u5177\u3002 https://github.com/Raathigesh/majestic \u6570\u636e\u5de5\u7a0b\u5e08\u5b66\u4e60\u8def\u5f84\u56fe https://github.com/datastacktv/data-engineer-roadmap \u5f00\u6e90\u793e\u533a\u5927\u5b66\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u81ea\u5b66\u7684\u514d\u8d39\u6750\u6599\u96c6\u5408\u4ed3\u5e93 https://github.com/ossu/computer-science \u4e3a\u952e\u76d8\u5de5\u4f5c\u8005\u8bbe\u8ba1\u7684\u5355\u8bcd\u8bb0\u5fc6\u4e0e\u82f1\u8bed\u808c\u8089\u8bb0\u5fc6\u953b\u70bc\u8f6f\u4ef6 https://github.com/Kaiyiwing/qwerty-learner \u89c6\u9891\u4f1a\u8bae\u5b9e\u65f6\u6362\u8138\u5de5\u5177\u3002 https://github.com/alievk/avatarify-python Run Mac in a Docker! Run near native OSX-KVM in Docker! X11 Forwarding! CI/CD for OS X! https://github.com/sickcodes/Docker-OSX An attempt to answer the age old interview question \"What happens when you type google.cominto your browser and press enter?\" https://github.com/alex/what-happens-when \u514d\u8d39\u5f00\u6e90\u7684\u77ed\u94fe\u63a5\u670d\u52a1\u3002 https://github.com/thedevs-network/kutt A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects https://github.com/vsouza/awesome-ios Roadmap to becoming an Artificial Intelligence Expert in 2021 https://github.com/AMAI-GmbH/AI-Expert-Roadmap VS Code in the browser https://github.com/cdr/code-server Short JavaScript code snippets for all your development needs https://github.com/30-seconds/30-seconds-of-code","title":"Resource"},{"location":"rs/#_1","text":"\u2702\ufe0f Modern copy to clipboard. No Flash. Just 3kb gzipped \ud83d\udccb https://github.com/zenorocha/clipboard.js Best practices for modern web development https://github.com/google/WebFundamentals \u300a\u4e00\u8d77\u5b66 Node.js\u300b https://github.com/nswbmw/N-blog Scalable user load testing tool written in Python https://github.com/locustio/locust Go by Example https://github.com/mmcgrana/gobyexample \u4e2d\u6587\u7f51\u9875\u91cd\u8bbe\u4e0e\u6392\u7248\uff0c\u4e3a\u4e86\u4e00\u81f4\u5316\u6d4f\u89c8\u5668\u6392\u7248\u6548\u679c\uff0c\u6784\u5efa\u6700\u9002\u5408\u4e2d\u6587\u9605\u8bfb\u7684\u7f51\u9875\u6392\u7248\u3002 https://github.com/sofish/typo.css \u300aGitHub \u6f2b\u6e38\u6307\u5357\u300b\u80fd\u591f\u8ba9\u65b0\u624b\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 GitHub \u7f51\u7ad9\uff0c\u4ece\u800c\u52a0\u5165\u5230\u5f00\u6e90\u793e\u533a\u3002 https://github.com/phodal/github A collection of useful .gitignore templates. https://github.com/github/gitignore \ud83c\udf1f JavaScript Style Guide, with linter & automatic code fixer https://github.com/standard/standard As easy as /aitch-tee-tee-pie/ \ud83e\udd67 Modern, user-friendly command-line HTTP client for the API era. https://github.com/httpie/httpie curl statistics made simple https://github.com/reorx/httpstat Guide to securing and improving privacy on macOS https://github.com/drduh/macOS-Security-and-Privacy-Guide TuShare \u662f\u4e00\u4e2a\u514d\u8d39\u3001\u5f00\u6e90\u7684 Python \u8d22\u7ecf\u6570\u636e\u63a5\u53e3\u5305\u3002 https://github.com/waditu/tushare \u300aLinux \u5de5\u5177\u5feb\u901f\u6559\u7a0b\u300b https://github.com/me115/linuxtools_rst A guide on how to be a Programmer - originally published by Robert L Read. https://github.com/braydie/HowToBeAProgrammer \u672c\u6587\u539f\u6587\u7531\u77e5\u540d Hacker Eric S. Raymond \u6240\u64b0\u5beb\uff0c\u6559\u4f60\u5982\u4f55\u6b63\u78ba\u7684\u63d0\u51fa\u6280\u8853\u554f\u984c\u4e26\u7372\u5f97\u4f60\u6eff\u610f\u7684\u7b54\u6848\u3002 https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way \u4e00\u4e2a\u5341\u5206\u65b9\u4fbf\u3001\u597d\u7528\u7684\u5185\u7f51\u7a7f\u900f\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u628a\u672c\u5730\u67d0\u4e2a\u7aef\u53e3\u7684\u670d\u52a1\uff0c\u901a\u8fc7\u4e00\u4e2a\u5b89\u5168\u96a7\u9053\uff0c\u6620\u5c04\u5230\u516c\u7f51\u7684\u4e00\u4e2a\u5730\u5740\u3002 https://github.com/inconshreveable/ngrok \u4e2d\u56fd\u7a0b\u5e8f\u5458\u5bb9\u6613\u53d1\u97f3\u9519\u8bef\u7684\u5355\u8bcd https://github.com/shimohq/chinese-programmer-wrong-pronunciation Put the output from any script or program into your macOS Menu Bar (the BitBar reboot) https://github.com/matryer/xbar match command-line arguments to their help text https://github.com/idank/explainshell \u5f52\u7eb3\u603b\u7ed3\u4e86\u4e00\u4e2a\u521d\u521b\u4f01\u4e1a\u5728\u5404\u4e2a\u9636\u6bb5\u6240\u671f\u5f85\u7684\u5b89\u5168\u5efa\u8bae\uff0c\u521d\u521b\u4f01\u4e1a\u6240\u638c\u63e1\u7684\u8d44\u91d1\u548c\u6570\u636e\u8d8a\u591a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5b89\u5168\u7684\u6295\u8d44\u4e5f\u8981\u8d8a\u591a\u3002 https://github.com/forter/security-101-for-saas-startups Chinese copywriting guidelines for better written communication\uff0f\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317 https://github.com/sparanoid/chinese-copywriting-guidelines RESTful API \u8bbe\u8ba1\u53c2\u8003\u6587\u732e\u5217\u8868\uff0c\u53ef\u5e2e\u52a9\u4f60\u66f4\u52a0\u5f7b\u5e95\u7684\u4e86\u89e3 REST \u98ce\u683c\u7684\u63a5\u53e3\u8bbe\u8ba1\u3002 https://github.com/aisuhua/restful-api-design-references Golang implementation of JSON Web Tokens (JWT) https://github.com/dgrijalva/jwt-go \ud83c\udfa8 Python Echarts Plotting Library https://github.com/pyecharts/pyecharts Learn regex the easy way https://github.com/ziishaned/learn-regex Code for Tensorflow Machine Learning Cookbook https://github.com/nfmcclure/tensorflow_cookbook TensorFlow tutorials and best practices. https://github.com/vahidk/EffectiveTensorflow High performance, minimalist Go web framework https://github.com/labstack/echo Faker is a Python package that generates fake data for you. https://github.com/joke2k/faker \u4e2d\u56fd 5 \u7ea7\u884c\u653f\u533a\u57df mysql \u5e93 https://github.com/kakuilan/china_area_mysql iOS \u5f00\u53d1\u6d41\u7a0b\u7b14\u8bb0 https://github.com/leecade/ios-dev-flow \u4e2d\u534e\u53e4\u5178\u6587\u96c6\u6570\u636e\u96c6\uff0c\u5305\u542b 5.5 \u4e07\u9996\u5510\u8bd7\u300126 \u4e07\u9996\u5b8b\u8bd7\u548c 2.1 \u4e07\u9996\u5b8b\u8bcd\u3002 https://github.com/chinese-poetry/chinese-poetry A list of cool features of Git and GitHub. https://github.com/tiimgreen/github-cheat-sheet \u2705 The Node.js best practices list (May 2021) https://github.com/goldbergyoni/nodebestpractices Magnificent app which corrects your previous console command. https://github.com/nvbn/thefuck List of advice and tricks for Go \u0295\u25d4\u03d6\u25d4\u0294 https://github.com/cristaloleg/go-advice Flight rules for git https://github.com/k88hudson/git-flight-rules A Fast, Extensible Progress Bar for Python and CLI https://github.com/tqdm/tqdm Checklist of the most important security countermeasures when designing, testing, and releasing your API https://github.com/shieldfy/API-Security-Checklist \u4e2d\u6587\u6280\u672f\u6587\u6863\u7684\u5199\u4f5c\u89c4\u8303 https://github.com/ruanyf/document-style-guide \ud83c\udf93 All things Vim! https://github.com/mhinz/vim-galore HTTP API \u8bbe\u8ba1\u6307\u5357\u3002\u8fd9\u7bc7\u6307\u5357\u4ecb\u7ecd\u63cf\u8ff0\u4e86 HTTP+JSON API \u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6700\u521d\u6458\u5f55\u6574\u7406\u81ea Heroku \u5e73\u53f0\u7684 API \u8bbe\u8ba1\u6307\u5357\u3002 https://github.com/interagent/http-api-design \ud83d\udcda Modern C++ Tutorial: C++11/14/17/20 On the Fly https://github.com/changkun/modern-cpp-tutorial Apache Airflow - A platform to programmatically author, schedule, and monitor workflows https://github.com/apache/airflow \ud83d\udcdd Algorithms and data structures implemented in JavaScript with explanations and links to further readings https://github.com/trekhleb/javascript-algorithms \ud83d\udda4 Create and share beautiful images of your source code https://github.com/carbon-app/carbon \u540e\u7aef\u67b6\u6784\u5e08\u6280\u672f\u56fe\u8c31 https://github.com/xingshaocheng/architect-awesome \u77e5\u540d\u4e92\u8054\u7f51\u516c\u53f8\u7684\u67b6\u6784\u6587\u6863 https://github.com/davideuler/architecture.of.internet-product A collective list of free APIs https://github.com/public-apis/public-apis Apache ECharts is a powerful, interactive charting and data visualization library for browser https://github.com/apache/echarts \u7b80\u60a6 ( SimpRead ) - \u8ba9\u4f60\u77ac\u95f4\u8fdb\u5165\u6c89\u6d78\u5f0f\u9605\u8bfb\u7684\u6269\u5c55 https://github.com/Kenshin/simpread \u4e00\u4efd\u5728\u7f51\u7ad9\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u4e4b\u524d\uff0c\u524d\u7aef\u90e8\u5206\u9700\u8981\u6d4b\u8bd5\u3001\u68c0\u67e5\u7684\u8be6\u5c3d\u6e05\u5355\u3002 https://github.com/thedaviddias/Front-End-Checklist \ud83e\udd13 Build your own (insert technology here) https://github.com/danistefanovic/build-your-own-x \u6536\u96c6&\u63a8\u8350\u4f18\u79c0\u7684 Apps/\u786c\u4ef6/\u6280\u5de7/\u5468\u8fb9\u7b49 https://github.com/hzlzh/Best-App \ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbb\ud83d\udc68\ud83c\udffe\u200d\ud83d\udcbb\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbb\ud83d\udc68\ud83c\udffd\u200d\ud83d\udcbb\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb \u4e2d\u56fd\u72ec\u7acb\u5f00\u53d1\u8005\u9879\u76ee\u5217\u8868 -- \u5206\u4eab\u5927\u5bb6\u90fd\u5728\u505a\u4ec0\u4e48 https://github.com/1c7/chinese-independent-developer Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards. https://github.com/donnemartin/system-design-primer Curated list of project-based tutorials https://github.com/tuvtran/project-based-learning A fresher \"Fork me on GitHub\" callout. https://github.com/tholman/github-corners SVG icons for popular brands https://github.com/simple-icons/simple-icons A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet. https://github.com/fatedier/frp \ud83d\udcd9 \u4e2d\u534e\u65b0\u534e\u5b57\u5178\u6570\u636e\u5e93\u3002\u5305\u62ec\u6b47\u540e\u8bed\uff0c\u6210\u8bed\uff0c\u8bcd\u8bed\uff0c\u6c49\u5b57\u3002 https://github.com/pwxcoo/chinese-xinhua Bring data to life with SVG, Canvas and HTML. \ud83d\udcca\ud83d\udcc8\ud83c\udf89 https://github.com/d3/d3 \ud83d\udcdc 33 JavaScript concepts every developer should know. https://github.com/leonardomso/33-js-concepts Style guides for Google-originated open-source projects https://github.com/google/styleguide A quick reminder of all SQL queries and examples on how to use them. https://github.com/enochtangg/quick-SQL-cheatsheet JavaScript 3D Library. https://github.com/mrdoob/three.js A native OS X KeePass client https://github.com/MacPass/MacPass \ud83d\udd0d A helpful checklist/collection of Search Engine Optimization (SEO) tips and techniques. https://github.com/marcobiedermann/search-engine-optimization \ud83d\udd17 Some useful websites for programmers. https://github.com/sdmg15/Best-websites-a-programmer-should-visit \u300a\u5f00\u6e90\u9879\u76ee\u6323\u94b1\u5b9e\u7528\u624b\u518c\u300b https://github.com/nayafia/lemonade-stand \u9002\u5408\u7a0b\u5e8f\u5458\u7684\u7f16\u7a0b\u5b57\u4f53\u7684\u96c6\u5408\uff0c\u73b0\u5728\u6709 30 \u591a\u79cd\u5947\u5999\u7684\u5b57\u4f53 https://github.com/ProgrammingFonts/ProgrammingFonts A search tool helps dev to solve the naming things problem. https://github.com/unbug/codelf Master the command line, in one page https://github.com/jlevy/the-art-of-command-line \u9493\u9c7c\u7f51\u7ad9\u751f\u6210\u5de5\u5177\u3002 https://github.com/drk1wi/Modlishka Roadmap to becoming an iOS developer in 2018. https://github.com/BohdanOrlov/iOS-Developer-Roadmap \ud83c\udf86Interactive Online Platform that Visualizes Algorithms from Code https://github.com/algorithm-visualizer/algorithm-visualizer \u2699\ufe0f NGINX config generator on steroids \ud83d\udc89 https://github.com/digitalocean/nginxconfig.io A book series on JavaScript. @YDKJS on twitter. https://github.com/getify/You-Dont-Know-JS Drone is a Container-Native, Continuous Delivery Platform https://github.com/drone/drone \ud83d\ude80 \u96f6\u4ee3\u7801\u3001\u70ed\u66f4\u65b0\u3001\u81ea\u52a8\u5316 ORM \u5e93\uff0c\u540e\u7aef\u63a5\u53e3\u548c\u6587\u6863\u96f6\u4ee3\u7801\uff0c\u524d\u7aef(\u5ba2\u6237\u7aef) \u5b9a\u5236\u8fd4\u56de JSON \u7684\u6570\u636e\u548c\u7ed3\u6784\u3002 https://github.com/Tencent/APIJSON pprof is a tool for visualization and analysis of profiling data https://github.com/google/pprof Distributed reliable key-value store for the most critical data of a distributed system https://github.com/etcd-io/etcd Learn Go with test-driven development https://github.com/quii/learn-go-with-tests Simple HTML5 Charts using the <canvas> tag https://github.com/chartjs/Chart.js List of Data Science Cheatsheets to rule the world https://github.com/FavioVazquez/ds-cheatsheets a little native network debugging tool for iOS https://github.com/yagiz/Bagel \u7a0b\u5e8f\u5458\u5982\u4f55\u4f18\u96c5\u7684\u6323\u96f6\u82b1\u94b1\uff0c2.0 \u7248 https://github.com/easychen/howto-make-more-money Free monospaced font with programming ligatures https://github.com/tonsky/FiraCode \u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u5bf9\u56fe\u7247\u548c\u89c6\u9891\u8fdb\u884c\u6362\u8138\u3002 https://github.com/deepfakes/faceswap \u81ea\u52a8\u7f29\u51cf docker \u955c\u50cf\u7684\u4f53\u79ef\u7684\u5de5\u5177\u3002 https://github.com/docker-slim/docker-slim \ud83d\udd25 Seata is an easy-to-use, high-performance, open source distributed transaction solution. https://github.com/seata/seata The Patterns of Scalable, Reliable, and Performant Large-Scale Systems https://github.com/binhnguyennus/awesome-scalability \u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u8bfe\u7a0b\u653b\u7565 https://github.com/PKUanonym/REKCARC-TSC-UHT \u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\u8bfe\u7a0b\u8d44\u6599\u5206\u4eab https://github.com/c-hj/SJTU-Courses How to improve NGINX performance, security, and other important things. https://github.com/trimstray/nginx-admins-handbook \u57fa\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c\u76d1\u7763\u5b66\u4e60\u7684\u5f00\u6e90\u5e93\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4eba\u7684\u9762\u90e8\u3001\u8eaf\u5e72\u548c\u56db\u80a2\u751a\u81f3\u624b\u6307\u7684\u8ddf\u8e2a\u3002 https://github.com/CMU-Perceptual-Computing-Lab/openpose \u6210\u4e3a Go \u5f00\u53d1\u8005\u7684\u5b66\u4e60\u8def\u7ebf\u56fe https://github.com/Alikhll/golang-developer-roadmap \u7f51\u6613\u4e91\u97f3\u4e50 Node.js API service https://github.com/Binaryify/NeteaseCloudMusicApi Git \u63d0\u4ea4\u63cf\u8ff0\uff08commit\uff09\u7684\u7f16\u5199\u6307\u5357 https://github.com/RomuloOliveira/commit-messages-guide \u4e00\u4e2a\u7b80\u5355\u3001\u6613\u7528\u7684 .vimrc \u914d\u7f6e\u6587\u4ef6\u751f\u6210\u5de5\u5177 https://github.com/editor-bootstrap/vim-bootstrap \u7a0b\u5e8f\u5458\u5de5\u4f5c\u4e2d\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u5b9a\u5f8b\u3001\u539f\u5219\u7684\u8bb2\u89e3 https://github.com/dwmkerr/hacker-laws Sample code illustrating the VS Code extension API. https://github.com/microsoft/vscode-extension-samples \u4e00\u5957\u673a\u5668\u5b66\u4e60\u8bfe\u7a0b\u3002 https://github.com/Yorko/mlcourse.ai \u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u7684\u4ee3\u7801\u5b9e\u73b0 https://github.com/fengdu78/lihang-code \ud83d\udc81\u200d\u2640\ufe0fYour new best friend powered by an artificial neural network https://github.com/olivia-ai/olivia \u4e00\u4e2a\u57fa\u4e8e Go \u8bed\u8a00\u5b9e\u73b0\u7684\u62a5\u8b66\u548c\u5904\u7406\u62a5\u8b66\u7cfb\u7edf\u3002 https://github.com/target/goalert Go \u7684\u5206\u5e03\u5f0f\u722c\u866b\u6846\u67b6\u3002 https://github.com/geziyor/geziyor \u81ea\u7531\u94a2\u7434 \ud83c\udfb9 AutoPiano ( https://www.autopiano.cn ) Simple & Elegant Piano Online https://github.com/AutoPiano/AutoPiano \u4e00\u4e2a\u751f\u6210\u6570\u5b66\u6559\u5b66\u89c6\u9891\u7684\u52a8\u753b\u5f15\u64ce\u3002 https://github.com/3b1b/manim \u4e00\u4e2a Python \u5199\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177 https://github.com/soimort/you-get \ud83c\udde8\ud83c\uddf3 Chinese sticker pack,More joy / \u8868\u60c5\u5305\u7684\u535a\u7269\u9986, Github \u6700\u6709\u6bd2\u7684\u4ed3\u5e93, \u4e2d\u56fd\u8868\u60c5\u5305\u5927\u96c6\u5408, \u805a\u6b22\u4e50~ https://github.com/zhaoolee/ChineseBQB \ud83d\udcc4 \ud83c\udde8\ud83c\uddf3 \ud83d\udcc3 \u8bba\u6587\u9605\u8bfb\u7b14\u8bb0\uff08\u5206\u5e03\u5f0f\u7cfb\u7edf\u3001\u865a\u62df\u5316\u3001\u673a\u5668\u5b66\u4e60\uff09Papers Notebook (Distributed System, Virtualization, Machine Learning), created by @gaocegege https://github.com/dyweb/papers-notebook \u7a0b\u5e8f\u5458\u5de5\u4f5c\u4e2d\u5e38\u89c1\u7684\u82f1\u8bed\u8bcd\u6c47 https://github.com/Wei-Xia/most-frequent-technology-english-words \u5404\u79cd\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784\u3001\u6a21\u578b\u548c\u6280\u5de7\u7684\u96c6\u5408\u3002 https://github.com/rasbt/deeplearning-models \u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u3001\u8f7b\u91cf\u7ea7\u7684\u5185\u7f51\u7a7f\u900f\u4ee3\u7406\u670d\u52a1\u5668\u3002 https://github.com/ehang-io/nps \u4e00\u4e2a\u57fa\u4e8e Golang \u8bed\u8a00\u7684 HTTP \u8def\u7531\u5e93\u3002 https://github.com/gorilla/mux A long list of (advanced) JavaScript questions, and their explanations \u2728 https://github.com/lydiahallie/javascript-questions \u300aFlutter \u5b9e\u6218\u300b https://github.com/flutterchina/flutter-in-action AI Code Completions https://github.com/codota/TabNine A collection of resources on modern C++ https://github.com/rigtorp/awesome-modern-cpp \u8c37\u6b4c\u51fa\u54c1\u7684 GitHub API Go \u8bed\u8a00\u7248\u672c\u3002 https://github.com/google/go-github \u624b\u7ed8\u98ce\u683c\u7684 JS \u56fe\u8868\u5e93\u3002 https://github.com/timqian/chart.xkcd \u901a\u8fc7\u8c03\u7528 fullPage \u53ef\u8f7b\u6613\u521b\u5efa\u5168\u5c4f\u6eda\u52a8\u7f51\u7ad9\uff08\u4e5f\u79f0\u4e3a\u5355\u9875\u7f51\u7ad9\uff09\u3002 https://github.com/alvarotrigo/fullPage.js Git \u7684\u5947\u6280\u6deb\u5de7 https://github.com/521xueweihan/git-tips \u4e00\u4e2a\u4e13\u95e8\u4e3a\u4e86\u591a\u8f6e\u4eba\u673a\u5bf9\u8bdd\u800c\u751f\u7684\u6846\u67b6\u3002 https://github.com/RasaHQ/rasa \u4e00\u6b3e\u5728\u4e3b\u6d41\u5bb9\u5668\u8c03\u5ea6\u5e73\u53f0 Kubernetes \u4e4b\u4e0a\u6784\u5efa\u7684\u4f01\u4e1a\u7ea7\u5206\u5e03\u5f0f\u591a\u79df\u6237\u5bb9\u5668\u7ba1\u7406\u5e73\u53f0\u3002 https://github.com/kubesphere/kubesphere \u265elichess.org: the forever free, adless and open source chess server \u265e https://github.com/ornicar/lila \u652f\u6301\u4e3b\u9898\u8bbe\u8ba1\u7684 Markdown \u7f16\u8f91\u5668\uff0c\u8ba9\u6392\u7248\u53d8 Nice https://github.com/mdnice/markdown-nice Questions to ask the company during your interview https://github.com/viraptor/reverse-interview \u547d\u4ee4\u884c\u8f85\u52a9\u5de5\u5177\uff0c\u6709\u4e86\u5b83\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u627e\u4e0d\u5230\u5386\u53f2\u8f93\u5165\u8fc7\u7684\u547d\u4ee4\u3001\u5fd8\u8bb0\u547d\u4ee4\u7b49\u8bf8\u591a\u70e6\u607c https://github.com/denisidoro/navi Zero Allocation JSON Logger https://github.com/rs/zerolog \u4e00\u6b3e\u53ef\u4ee5\u7528\u7535\u8111\u663e\u793a\u5e76\u63a7\u5236 Android \u624b\u673a\u7684\u5f00\u6e90\u5de5\u5177\u3002 https://github.com/Genymobile/scrcpy \u4e00\u6b3e\u514d\u8d39\u5f00\u6e90\u7684 Linux \u7cfb\u7edf\u6027\u80fd\u5b9e\u65f6\u76d1\u63a7\u5de5\u5177\u3002 https://github.com/netdata/netdata Uber \u5185\u90e8\u7684 Go \u98ce\u683c\u89c4\u8303\u3002 https://github.com/uber-go/guide \u65e0\u9700\u914d\u7f6e\uff0c\u6267\u884c\u4e00\u6761\u547d\u4ee4\u8ba9\u672c\u5730\u7684\u5f00\u53d1\u73af\u5883\u5b9e\u73b0 HTTPS \u7684\u5de5\u5177\u3002 https://github.com/FiloSottile/mkcert \u9879\u76ee\u7684 git \u63d0\u4ea4\u8bb0\u5f55\u5c55\u793a\u548c\u7edf\u8ba1\u7684\u5de5\u5177\u3002 https://github.com/arzzen/git-quick-stats \u4e2d\u6587\u8bcd\u5e93\u7684\u96c6\u5408\u3002 https://github.com/fighting41love/funNLP \u4e00\u4e2a\u4f7f\u7528 C++ \u7f16\u5199\u7684\u8fdb\u5ea6\u6761\u5e93\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u5728\u547d\u4ee4\u884c\u4e2d\u5b9e\u73b0\u7f8e\u89c2\u7684\u8fdb\u5ea6\u6761\u3002 https://github.com/p-ranav/indicators The world's simplest facial recognition api for Python and the command line https://github.com/ageitgey/face_recognition \ud83d\udec1 Clean Code concepts adapted for JavaScript https://github.com/ryanmcdermott/clean-code-javascript Python \u7684\u8bcd\u4e91\u751f\u6210\u5de5\u5177\u3002 https://github.com/amueller/word_cloud \u5168\u7403\u5404\u5730 8 \u5343\u591a\u4e2a\u516c\u5f00\u3001\u53ef\u7528\u7684\u7f51\u7edc\u7535\u89c6\u9891\u9053\u96c6\u5408\u3002 https://github.com/iptv-org/iptv \u8be5\u9879\u76ee\u4ecb\u7ecd\u4e86\u73b0\u4ee3 C++\uff08C++11 \u4ee5\u53ca\u4e4b\u540e\u7684\u7248\u672c\uff09\u8bed\u8a00\u548c\u5e93\u7684\u65b0\u7279\u6027\u3002 https://github.com/AnthonyCalandra/modern-cpp-features \u5f00\u6e90\u8d22\u7ecf\u6570\u636e\u63a5\u53e3\u5e93 https://github.com/jindaxiang/akshare List of applications and tools that make my macOS experience even more amazing https://github.com/nikitavoloboev/my-mac-os \u8be5\u6536\u96c6\u4e86\u5404\u7c7b\u5e94\u7528\u7684\u60f3\u6cd5\uff0c\u5e76\u6309\u7167\u6613\u5b66\u7a0b\u5ea6\u628a\u5e94\u7528\u8fdb\u884c\u5212\u5206\u3002 https://github.com/florinpop17/app-ideas \u4e00\u4e2a Git \u547d\u4ee4\u53ef\u89c6\u5316\u5b66\u4e60\u9879\u76ee\u3002 https://github.com/pcottle/learnGitBranching \u5206\u5e03\u5f0f\u722c\u866b\u7ba1\u7406\u5e73\u53f0\uff0c\u652f\u6301\u4efb\u4f55\u8bed\u8a00\u548c\u6846\u67b6 https://github.com/crawlab-team/crawlab \ud83d\ude18 \u8ba9\u4f60\u201c\u7231\u201d\u4e0a GitHub\uff0c\u89e3\u51b3\u8bbf\u95ee\u65f6\u56fe\u88c2\u3001\u52a0\u8f7d\u6162\u7684\u95ee\u9898\u3002\uff08\u65e0\u9700\u5b89\u88c5\uff09 https://github.com/521xueweihan/GitHub520 Neovim \u7684 macOS \u7248 https://github.com/qvacua/vimr \u4e00\u4e2a\u8ba9\u4f60\u7684\u7ec8\u7aef\u8f93\u51fa\u53d8\u5f97\u201c\u82b1\u91cc\u80e1\u54e8\u201d\u7684\u4e09\u65b9\u5e93 https://github.com/willmcgugan/rich \u6570\u636e\u79d1\u5b66\u7684 IPython \u96c6\u5408\u3002 https://github.com/donnemartin/data-science-ipython-notebooks \u80fd\u591f\u628a\u7ec8\u7aef\u6267\u884c\u7684\u547d\u4ee4\u5c55\u793a\u5230\u7f51\u9875\u4e0a\u7684\u5de5\u5177\u3002 https://github.com/yudai/gotty \u53ef\u80fd\u662f Go \u76ee\u524d\u6700\u53d7\u6b22\u8fce\u7684\u7b2c\u4e09\u65b9\u65e5\u5fd7\u5e93\u3002 https://github.com/sirupsen/logrus RESTful web API Documentation Generator. https://github.com/apidoc/apidoc A fast, well-tested and widely used WebSocket implementation for Go. https://github.com/gorilla/websocket \u5728\u4f60\u7684 README \u4e2d\u5c55\u793a\u52a8\u6001\u751f\u6210\u7684 GitHub \u7edf\u8ba1\u4fe1\u606f\u3002 https://github.com/anuraghazra/github-readme-stats \ud83d\ude80\u2728 Help beginners to contribute to open source projects https://github.com/firstcontributions/first-contributions a cheat-sheet for mathematical notation in code form https://github.com/Jam3/math-as-code Python library for converting Python calculations into rendered latex. https://github.com/connorferster/handcalcs The missing star history graph of github repos https://github.com/timqian/star-history \u2705 Solutions to LeetCode by Go, 100% test coverage, runtime beats 100% / LeetCode \u9898\u89e3 https://github.com/halfrost/LeetCode-Go Pure Javascript OCR for more than 100 Languages \ud83d\udcd6\ud83c\udf89\ud83d\udda5 https://github.com/naptha/tesseract.js Jupyter notebooks for teaching/learning Python 3 https://github.com/jerry-git/learn-python3 Play couplet with seq2seq model. \u7528\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u8054\u3002 https://github.com/wb14123/seq2seq-couplet Best Practices, code samples, and documentation for Computer Vision. https://github.com/microsoft/computervision-recipes JavaScript syntax highlighter with language auto-detection and zero dependencies. https://github.com/highlightjs/highlight.js macOS system monitor in your menu bar \u57fa\u4e8e Go \u5b9e\u73b0\u7684\u514d\u8d39\u5185\u7f51\u7a7f\u900f\u670d\u52a1\uff0c\u5373\u5c06\u672c\u5730\u670d\u52a1\u66b4\u9732\u5230\u516c\u7f51\u3002 https://github.com/inlets/inlets \u4e00\u4e2a\u91c7\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684\u514d\u8d39\u3001\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u540c\u6b65\u5de5\u5177\u3002 https://github.com/syncthing/syncthing \u57fa\u4e8e Omi \u548c Omi Snippets \u6784\u5efa\u7684\u94a2\u7434\u5e94\u7528\u3002 https://github.com/Wscats/piano \u2b06\ufe0f Uptime monitor and status page powered by GitHub Actions, Issues, and Pages https://github.com/upptime/upptime Python \u8bbe\u8ba1\u6a21\u5f0f\u548c\u4f7f\u7528\u573a\u666f\u7684\u96c6\u5408 https://github.com/faif/python-patterns A cat(1) clone with wings. https://github.com/sharkdp/bat \ud83d\uddbc\ufe0f A command-line system information tool written in bash 3.2+ https://github.com/dylanaraps/neofetch \u4e00\u4efd SQL \u8bed\u53e5\u7f16\u5199\u98ce\u683c\u5efa\u8bae\u3002 https://github.com/mattm/sql-style-guide \u8be5\u4e66\u6709\u597d\u591a\u590d\u5236\u5c31\u80fd\u7528\u7684 bash \u51fd\u6570\uff0c\u6211\u613f\u79f0\u5176\u4e3a bash \u7684\u201c\u5947\u6280\u6deb\u5de7\u201d\u3002 https://github.com/dylanaraps/pure-bash-bible \u57fa\u4e8e Go \u8bed\u8a00\u7684 HTTP \u538b\u6d4b\u5de5\u5177\u3002 https://github.com/tsenart/vegeta \u4e00\u6b3e Go \u8bed\u8a00\u7684\u8c03\u8bd5\u5de5\u5177\u3002 https://github.com/go-delve/delve \u81ea\u5b9a\u4e49 TouchBar \u7684\u5e94\u7528\u3002 https://github.com/Toxblh/MTMR \u4f7f\u7528 Flutter \u548c Go \u5f00\u53d1\u7684\u300c\u5236\u5b9a\u8ba1\u5212 APP\u300d\u3002 https://github.com/DuanJiaNing/makeaplan_public \u57fa\u4e8e Go \u7684\u5f00\u6e90\u5b9e\u65f6\u6027\u80fd\u5206\u6790\u5e73\u53f0\u3002 https://github.com/pyroscope-io/pyroscope \u7f8e\u89c2\u4e14\u4fbf\u6377\u7684 JavaScript \u6d4b\u8bd5\u6846\u67b6 Jest \u7684\u56fe\u5f62\u754c\u9762\u5de5\u5177\u3002 https://github.com/Raathigesh/majestic \u6570\u636e\u5de5\u7a0b\u5e08\u5b66\u4e60\u8def\u5f84\u56fe https://github.com/datastacktv/data-engineer-roadmap \u5f00\u6e90\u793e\u533a\u5927\u5b66\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u81ea\u5b66\u7684\u514d\u8d39\u6750\u6599\u96c6\u5408\u4ed3\u5e93 https://github.com/ossu/computer-science \u4e3a\u952e\u76d8\u5de5\u4f5c\u8005\u8bbe\u8ba1\u7684\u5355\u8bcd\u8bb0\u5fc6\u4e0e\u82f1\u8bed\u808c\u8089\u8bb0\u5fc6\u953b\u70bc\u8f6f\u4ef6 https://github.com/Kaiyiwing/qwerty-learner \u89c6\u9891\u4f1a\u8bae\u5b9e\u65f6\u6362\u8138\u5de5\u5177\u3002 https://github.com/alievk/avatarify-python Run Mac in a Docker! Run near native OSX-KVM in Docker! X11 Forwarding! CI/CD for OS X! https://github.com/sickcodes/Docker-OSX An attempt to answer the age old interview question \"What happens when you type google.cominto your browser and press enter?\" https://github.com/alex/what-happens-when \u514d\u8d39\u5f00\u6e90\u7684\u77ed\u94fe\u63a5\u670d\u52a1\u3002 https://github.com/thedevs-network/kutt A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects https://github.com/vsouza/awesome-ios Roadmap to becoming an Artificial Intelligence Expert in 2021 https://github.com/AMAI-GmbH/AI-Expert-Roadmap VS Code in the browser https://github.com/cdr/code-server Short JavaScript code snippets for all your development needs https://github.com/30-seconds/30-seconds-of-code","title":"\u8d44\u6e90"}]}